-- 2020-05-21 14:05:17 [codegeneratorTest] [proj1@localhost] [session id: 594094430] connected
-- [ --------------------------------------------------
-- 2020-05-21 14:05:18 [codegeneratorTest] [proj1@localhost] [unknown] [session id: 594094430] [statement id: 1356913740] 
SELECT 'keep alive'
-- ] --------------------------------------------------
-- 2020-05-21 14:05:18 [codegeneratorTest] [proj1@localhost] [unknown] [session id: 594094430] [statement id: 1356913740] finished - execution time: 24 ms
-- 2020-05-21 14:05:18 [codegeneratorTest] [proj1@localhost] [session id: 594094430] disconnected
-- 2020-05-21 14:05:22 [codegeneratorTest] [proj1@localhost] [session id: 594094431] connected
-- [ --------------------------------------------------
-- 2020-05-21 14:05:22 [codegeneratorTest] [proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913741] 
select current_database() as a, current_schemas(false) as b
-- ] --------------------------------------------------
-- 2020-05-21 14:05:23 [codegeneratorTest] [proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913741] results received
-- 2020-05-21 14:05:23 [codegeneratorTest] [proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913741] finished - execution time: 284 ms, fetching time: 502 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:24 [codegeneratorTest] [proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913742] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-21 14:05:24 [codegeneratorTest] [proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913742] results received
-- 2020-05-21 14:05:24 [codegeneratorTest] [proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913742] finished - execution time: 344 ms, fetching time: 24 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:24 [codegeneratorTest] [proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913743] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-21 14:05:24 [codegeneratorTest] [proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913743] results received
-- 2020-05-21 14:05:25 [codegeneratorTest] [proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913743] finished - execution time: 383 ms, fetching time: 218 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:25 [codegeneratorTest] [proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913744] 
select R.oid::bigint as role_id, rolname as role_name,
  rolsuper is_super, rolinherit is_inherit,
  rolcreaterole can_createrole, rolcreatedb can_createdb,
  rolcanlogin can_login, rolreplication /* false */ is_replication,
  rolconnlimit conn_limit, rolvaliduntil valid_until,
  /* rolbypassrls */false  bypass_rls, rolconfig config,
  D.description
from pg_catalog.pg_roles R
  left join pg_catalog.pg_shdescription D on D.objoid = R.oid
-- ] --------------------------------------------------
-- 2020-05-21 14:05:25 [codegeneratorTest] [proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913744] results received
-- 2020-05-21 14:05:25 [codegeneratorTest] [proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913744] finished - execution time: 137 ms, fetching time: 8 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:25 [codegeneratorTest] [proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913745] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-21 14:05:25 [codegeneratorTest] [proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913745] results received
-- 2020-05-21 14:05:25 [codegeneratorTest] [proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913745] finished - execution time: 4 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:25 [codegeneratorTest] [proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913746] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-21 14:05:25 [codegeneratorTest] [proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913746] results received
-- 2020-05-21 14:05:25 [codegeneratorTest] [proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913746] finished - execution time: 4 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:25 [codegeneratorTest] [proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913747] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-21 14:05:25 [codegeneratorTest] [proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913747] results received
-- 2020-05-21 14:05:25 [codegeneratorTest] [proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913747] finished - execution time: 5 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:25 [codegeneratorTest] [proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913748] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-21 14:05:25 [codegeneratorTest] [proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913748] results received
-- 2020-05-21 14:05:25 [codegeneratorTest] [proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913748] finished - execution time: 3 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:25 [codegeneratorTest] [proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913749] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-21 14:05:25 [codegeneratorTest] [proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913749] results received
-- 2020-05-21 14:05:25 [codegeneratorTest] [proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913749] finished - execution time: 4 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:25 [codegeneratorTest] [proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913750] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-21 14:05:25 [codegeneratorTest] [proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913750] results received
-- 2020-05-21 14:05:25 [codegeneratorTest] [proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913750] finished - execution time: 3 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:25 [codegeneratorTest] [proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913751] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-05-21 14:05:25 [codegeneratorTest] [proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913751] results received
-- 2020-05-21 14:05:25 [codegeneratorTest] [proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913751] finished - execution time: 86 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:25 [codegeneratorTest] [proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913752] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-05-21 14:05:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913752] results received
-- 2020-05-21 14:05:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913752] finished - execution time: 200 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913753] 
select usesuper
from pg_user
where usename = current_user
-- ] --------------------------------------------------
-- 2020-05-21 14:05:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913753] results received
-- 2020-05-21 14:05:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913753] finished - execution time: 4 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913754] 
select distinct oid
from pg_catalog.pg_am
union
select distinct oid
from pg_catalog.pg_foreign_data_wrapper
union
select distinct oid
from pg_catalog.pg_foreign_server
union
select distinct oid
from pg_catalog.pg_extension

union
select distinct oid
from pg_catalog.pg_user_mapping

-- ] --------------------------------------------------
-- 2020-05-21 14:05:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913754] results received
-- 2020-05-21 14:05:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913754] finished - execution time: 111 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913755] 
select D.objoid id
from pg_catalog.pg_description D
where D.classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
-- ] --------------------------------------------------
-- 2020-05-21 14:05:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913755] results received
-- 2020-05-21 14:05:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913755] finished - execution time: 847 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913756] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-05-21 14:05:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913756] results received
-- 2020-05-21 14:05:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913756] finished - execution time: 4 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913757] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-05-21 14:05:27 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913757] results received
-- 2020-05-21 14:05:27 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094431] [statement id: 1356913757] finished - execution time: 260 ms, fetching time: 6 ms, total result sets count: 1
-- 2020-05-21 14:05:27 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 594094431] disconnected
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 594094432] connected
-- [ --------------------------------------------------
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913758] 
select current_database() as a, current_schemas(false) as b
-- ] --------------------------------------------------
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913758] results received
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913758] finished - execution time: 1 ms, fetching time: 11 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913759] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913759] results received
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913759] finished - execution time: 3 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913760] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913760] results received
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913760] finished - execution time: 5 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913761] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913761] results received
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913761] finished - execution time: 4 ms, fetching time: 7 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913762] 
select R.oid::bigint as role_id, rolname as role_name,
  rolsuper is_super, rolinherit is_inherit,
  rolcreaterole can_createrole, rolcreatedb can_createdb,
  rolcanlogin can_login, rolreplication /* false */ is_replication,
  rolconnlimit conn_limit, rolvaliduntil valid_until,
  /* rolbypassrls */false  bypass_rls, rolconfig config,
  D.description
from pg_catalog.pg_roles R
  left join pg_catalog.pg_shdescription D on D.objoid = R.oid
-- ] --------------------------------------------------
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913762] results received
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913762] finished - execution time: 5 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913763] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913763] results received
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913763] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913764] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913764] results received
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913764] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913765] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913765] results received
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913765] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913766] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913766] results received
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913766] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913767] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913767] results received
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913767] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913768] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913768] results received
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913768] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913769] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913769] results received
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913769] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913770] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913770] results received
-- 2020-05-21 14:05:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913770] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:29 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913771] 
select usesuper
from pg_user
where usename = current_user
-- ] --------------------------------------------------
-- 2020-05-21 14:05:29 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913771] results received
-- 2020-05-21 14:05:29 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913771] finished - execution time: 2 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:29 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913772] 
select distinct oid
from pg_catalog.pg_am
union
select distinct oid
from pg_catalog.pg_foreign_data_wrapper
union
select distinct oid
from pg_catalog.pg_foreign_server
union
select distinct oid
from pg_catalog.pg_extension

union
select distinct oid
from pg_catalog.pg_user_mapping

-- ] --------------------------------------------------
-- 2020-05-21 14:05:29 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913772] results received
-- 2020-05-21 14:05:29 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913772] finished - execution time: 7 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:29 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913773] 
select D.objoid id
from pg_catalog.pg_description D
where D.classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
-- ] --------------------------------------------------
-- 2020-05-21 14:05:29 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913773] results received
-- 2020-05-21 14:05:29 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913773] finished - execution time: 3 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:29 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913774] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-05-21 14:05:29 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913774] results received
-- 2020-05-21 14:05:29 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913774] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:29 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913775] 
select A.oid as access_method_id,
       A.xmin as state_number,
       A.amname as access_method_name
       /* ,
       A.amhandler::oid as handler_id,
       pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as handler_name,
       A.amtype as access_method_type
       */
from pg_am A
  /* join pg_proc P on A.amhandler::oid = P.oid
  join pg_namespace N on P.pronamespace = N.oid
  */
where pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-21 14:05:29 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913775] results received
-- 2020-05-21 14:05:29 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913775] finished - execution time: 30 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:29 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913776] 
select fdw.oid as id,
       fdw.xmin as state_number,
       fdw.fdwname as name,
       pr.proname as handler,
       nspc.nspname as handler_schema,
       pr2.proname as validator,
       nspc2.nspname as validator_schema,
       fdw.fdwoptions as options,
       pg_catalog.pg_get_userbyid(fdw.fdwowner) as "owner"
from pg_catalog.pg_foreign_data_wrapper fdw
     left outer join pg_catalog.pg_proc pr on fdw.fdwhandler = pr.oid
     left outer join pg_catalog.pg_namespace nspc on pr.pronamespace = nspc.oid
     left outer join pg_catalog.pg_proc pr2 on fdw.fdwvalidator = pr2.oid
     left outer join pg_catalog.pg_namespace nspc2 on pr2.pronamespace = nspc2.oid
  where pg_catalog.age(fdw.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-21 14:05:29 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913776] results received
-- 2020-05-21 14:05:29 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913776] finished - execution time: 126 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:29 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913777] 
select srv.oid as id,
       srv.srvfdw as fdw_id,
       srv.xmin as state_number,
       srv.srvname as name,
       srv.srvtype as type,
       srv.srvversion as version,
       srv.srvoptions as options,
       pg_catalog.pg_get_userbyid(srv.srvowner) as "owner"
from pg_catalog.pg_foreign_server srv
  where pg_catalog.age(srv.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-21 14:05:29 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913777] results received
-- 2020-05-21 14:05:29 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913777] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:29 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913778] 
select pg_extension.oid as id,
       pg_extension.xmin as state_number,
       extname as name,
       extversion as version,
       extnamespace as schema_id,
       nspname as schema_name,
       array(select target
             from pg_extension_update_paths(extname)
             where source = extversion and path is not null) as available_updates
from pg_catalog.pg_extension
  join pg_namespace on pg_extension.extnamespace = pg_namespace.oid
where pg_catalog.age(pg_extension.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-21 14:05:29 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913778] results received
-- 2020-05-21 14:05:29 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913778] finished - execution time: 177 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:29 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913779] 
select D.objoid id, case
    when 'pg_catalog.pg_am'::regclass = classoid then 'A'
    when 'pg_catalog.pg_foreign_data_wrapper'::regclass = classoid then 'W'
    when 'pg_catalog.pg_foreign_server'::regclass = classoid then 'S'
    when 'pg_catalog.pg_extension'::regclass = classoid then 'E'
    
  end as kind,
  D.objsubid sub_id, D.description
from pg_catalog.pg_description D
where classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-21 14:05:29 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913779] results received
-- 2020-05-21 14:05:29 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913779] finished - execution time: 4 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:29 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913780] 
select 'sequence' as dependent_kind,
       'table' as owner_kind,
       D.objid as dependent_id,
       D.refobjid as owner_id,
       D.refobjsubid as owner_subobject_id
from pg_depend D
  join pg_class C_SEQ on D.objid = C_SEQ.oid
  join pg_class C_TAB on D.refobjid = C_TAB.oid
where C_SEQ.relkind = 'S'
  and C_TAB.relkind = 'r'
  and D.refobjsubid <> 0
  and (D.deptype = 'a' or D.deptype = 'i')
-- ] --------------------------------------------------
-- 2020-05-21 14:05:30 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913780] results received
-- 2020-05-21 14:05:30 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913780] finished - execution time: 451 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:30 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913781] 
with saved_age as (select greatest(pg_catalog.age(?::varchar::xid), pg_catalog.age(?::varchar::xid)) as "value")
select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
(
  select X.last_tx as last_tx
  from (
    (
    select xmin as last_tx
      from pg_catalog.pg_type
      where typnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_class
      where relnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_proc
      where pronamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_operator
      where oprnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select A.xmin as last_tx
      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
      where K.relnamespace = ?::oid
      order by pg_catalog.age(A.xmin)
      limit 1
    )
    union all
    (
    select E.xmin as last_tx
      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
      where T.typnamespace = ?::oid
      order by pg_catalog.age(E.xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_constraint
      where connamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select CO.xmin as last_tx
      from pg_catalog.pg_collation CO
      where CO.collnamespace = ?::oid
      order by pg_catalog.age(CO.xmin)
      limit 1
    )
    union all
    
    (
    select IX.xmin as last_tx
      from pg_catalog.pg_index IX,
           pg_catalog.pg_class IC
      where IC.oid = IX.indrelid
        and IC.relnamespace = ?::oid
        order by pg_catalog.age(IX.xmin)
        limit 1
    )
    union all
    (
    select RU.xmin as last_tx
      from pg_catalog.pg_rewrite RU,
           pg_catalog.pg_class RC
      where RC.oid = RU.ev_class
        and RC.relnamespace = ?::oid
        order by pg_catalog.age(RU.xmin)
        limit 1
    )
    union all
    (
    select TG.xmin as last_tx
      from pg_catalog.pg_trigger TG,
           pg_catalog.pg_class TC
      where TC.oid = TG.tgrelid
        and TC.relnamespace = ?::oid
        order by pg_catalog.age(TG.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_class C on C.oid = D.objoid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_constraint C on C.oid = D.objoid
      where C.connamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_trigger T on T.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = T.tgrelid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_rewrite R on R.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = R.ev_class
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_proc P on P.oid = D.objoid
      where P.pronamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_type T on T.oid = D.objoid
      where T.typnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_operator O on O.oid = D.objoid
      where O.oprnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_collation C on C.oid = D.objoid
      where C.collnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    
  ) X
  order by pg_catalog.age(X.last_tx)
  limit 1
) C, saved_age SA
-- ] --------------------------------------------------
-- 2020-05-21 14:05:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913781] results received
-- 2020-05-21 14:05:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913781] finished - execution time: 1 s 773 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913782] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-05-21 14:05:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913782] results received
-- 2020-05-21 14:05:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913782] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913783] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-05-21 14:05:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913783] results received
-- 2020-05-21 14:05:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913783] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913784] 
with U as (select usesysid from pg_catalog.pg_user where usename = current_user),
          T as (
                select oid as sequence_id,
                       relname as sequence_name,
                       pg_catalog.pg_get_userbyid(relowner) as "owner",
                       case when relowner = (select usesysid from U) then trim(both '()' from pg_catalog.pg_sequence_parameters(oid)::varchar)
                       else null::varchar
                       end as sequence_params,
                       
                       xmin as sequence_state_number
                       from pg_catalog.pg_class
                         where relnamespace = ?::oid
                         and relkind = 'S'
                         --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
                )
select sequence_id,
       sequence_name,
       pg_catalog.split_part(sequence_params, ',', 1)::bigint as next_value,
       pg_catalog.split_part(sequence_params, ',', 2)::bigint as min_value,
       pg_catalog.split_part(sequence_params, ',', 3)::bigint as max_value,
       pg_catalog.split_part(sequence_params, ',', 4)::bigint as inc_value,
       pg_catalog.lower(pg_catalog.split_part(sequence_params, ',', 5)) LIKE '%t%' as cycle_option,
       
       sequence_state_number,
       "owner"
from T
-- ] --------------------------------------------------
-- 2020-05-21 14:05:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913784] results received
-- 2020-05-21 14:05:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913784] finished - execution time: 296 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913785] 
select T.oid as type_id,
       T.xmin as type_state_number,
       T.typname as type_name,
       T.typtype as type_sub_kind,
       T.typcategory as type_category,
       T.typrelid as class_id,
       T.typbasetype as base_type_id,
       case when T.typtype in ('c','e') then null
            else pg_catalog.format_type(T.typbasetype, T.typtypmod) end as type_def,
       T.typdefault as default_expression,
       T.typnotnull as mandatory,
       pg_catalog.pg_get_userbyid(T.typowner) as "owner"
from pg_catalog.pg_type T
         left outer join pg_catalog.pg_class C
             on T.typrelid = C.oid
where T.typnamespace = ?::oid
  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
  and (T.typtype in ('d','e') or C.relkind = 'c'::"char" or T.typtype = 'b' and (T.typelem = 0 OR T.typcategory <> 'A'))
order by 1
-- ] --------------------------------------------------
-- 2020-05-21 14:05:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913785] results received
-- 2020-05-21 14:05:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913785] finished - execution time: 5 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913786] 
select T.relkind as table_kind,
       T.relname as table_name,
       T.oid as table_id,
       T.xmin as table_state_number,
       /* false */T.relhasoids  as table_with_oids,
       T.relnamespace as tablespace_id,
       T.reloptions as options,
       (select pg_catalog.array_agg(inhparent)::varchar from (select inhparent::bigint from pg_catalog.pg_inherits where T.oid = inhrelid order by inhseqno) as bts) as ancestors,
       (select pg_catalog.array_agg(inhrelid)::varchar from (select inhrelid::bigint from pg_catalog.pg_inherits where T.oid = inhparent order by inhrelid) as its) as successors,
       /* T.relispartition */false  as is_partition,
       /* pg_catalog.pg_get_partkeydef(T.oid) */null  as partition_key,
       /* pg_catalog.pg_get_expr(T.relpartbound, T.oid) */null  as partition_expression,
       pg_catalog.pg_get_userbyid(T.relowner) as "owner"
from pg_catalog.pg_class T
where relnamespace = ?::oid
  and relkind in ('r', 'm', 'v', 'f', 'p')
  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
order by table_kind, table_id
-- ] --------------------------------------------------
-- 2020-05-21 14:05:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913786] results received
-- 2020-05-21 14:05:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913786] finished - execution time: 156 ms, fetching time: 14 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913787] 
select ft.ftrelid as table_id,
       srv.srvname as table_server,
       ft.ftoptions as table_options,
       pg_catalog.pg_get_userbyid(cls.relowner) as "owner"
from pg_catalog.pg_foreign_table ft
     left outer join pg_catalog.pg_foreign_server srv on ft.ftserver = srv.oid
     join pg_catalog.pg_class cls on ft.ftrelid = cls.oid
where cls.relnamespace = ?::oid
  --  and pg_catalog.age(ft.xmin) <= pg_catalog.age(:tx::varchar::xid)
order by table_id
-- ] --------------------------------------------------
-- 2020-05-21 14:05:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913787] results received
-- 2020-05-21 14:05:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913787] finished - execution time: 12 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913788] 
with schema_procs as (select prorettype, proargtypes, proallargtypes
                      from pg_catalog.pg_proc
                      where pronamespace = ?::oid
                        /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */ ),
     schema_opers as (select oprleft, oprright, oprresult
                      from pg_catalog.pg_operator
                      where oprnamespace = ?::oid
                        /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */ ),
     schema_aggregates as (select A.aggtranstype , A.aggmtranstype 
                           from pg_catalog.pg_aggregate A
                           join pg_catalog.pg_proc P
                             on A.aggfnoid = P.oid
                           where P.pronamespace = ?::oid
                           /* and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(:tx::varchar::xid)) */),
     schema_arg_types as ( select prorettype as type_id
                           from schema_procs
                           union
                           select distinct unnest(proargtypes) as type_id
                           from schema_procs
                           union
                           select distinct unnest(proallargtypes) as type_id
                           from schema_procs
                           union
                           select oprleft as type_id
                           from schema_opers
                           where oprleft is not null
                           union
                           select oprright as type_id
                           from schema_opers
                           where oprright is not null
                           union
                           select oprresult as type_id
                           from schema_opers
                           where oprresult is not null
                           union
                           select aggtranstype::oid as type_id
                           from schema_aggregates
                           union
                           select aggmtranstype::oid as type_id
                           from schema_aggregates
                           
                           )
select type_id, pg_catalog.format_type(type_id, null) as type_spec
from schema_arg_types
where type_id <> 0
-- ] --------------------------------------------------
-- 2020-05-21 14:05:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913788] results received
-- 2020-05-21 14:05:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913788] finished - execution time: 39 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913789] 
with languages as (select oid as lang_oid, lanname as lang
                   from pg_catalog.pg_language),
     routines as (select proname as r_name,
                         prolang as lang_oid,
                         oid as r_id,
                         xmin as r_state_number,
                         proargnames as arg_names,
                         proargmodes as arg_modes,
                         proargtypes::int[] as in_arg_types,
                         proallargtypes::int[] as all_arg_types,
                         pg_catalog.pg_get_expr(proargdefaults, 0) as arg_defaults,
                         provariadic as arg_variadic_id,
                         prorettype as ret_type_id,
                         proretset as ret_set,
                         /* prokind */case when proiswindow then 'w'
                                                when proisagg then 'a'
                                                else 'f'
                                           end  as kind,
                         provolatile as volatile_kind,
                         proisstrict as is_strict,
                         prosecdef as is_security_definer,
                         proconfig as configuration_parameters,
                         procost as cost,
                         pg_catalog.pg_get_userbyid(proowner) as "owner",
                         prorows as rows ,
                         proleakproof as is_leakproof  /* ,
                         proparallel as concurrency_kind */
                  from pg_catalog.pg_proc
                  where pronamespace = ?::oid
                    and not /* (prokind = 'a') */proisagg 
                    /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */)
select *
from routines natural join languages
-- ] --------------------------------------------------
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913789] results received
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913789] finished - execution time: 27 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913790] 
with procedures as (
  select P.oid as function_id,
         pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as function_name,
         P.prorettype as return_type
  from pg_catalog.pg_proc P
  join pg_catalog.pg_namespace N
    on P.pronamespace = N.oid
),
operators as (
  select O.oid as operator_id,
         pg_catalog.quote_ident(N.nspname) || '.' || O.oprname as operator_name
  from pg_catalog.pg_operator O
  join pg_catalog.pg_namespace N
    on O.oprnamespace = N.oid
)
select P.oid as aggregate_id,
       P.xmin as state_number,
       P.proname as aggregate_name,
       P.proargnames as arg_names,
       P.proargmodes as arg_modes,
       P.proargtypes::int[] as in_arg_types,
       P.proallargtypes::int[] as all_arg_types,
       A.aggtransfn::oid as transition_function_id,
       PT.function_name::text as transition_function_name,
       A.aggtranstype as transition_type,
       A.aggfinalfn::oid as final_function_id,
       case when A.aggfinalfn::oid = 0 then null else PF.function_name end as final_function_name,
       case when A.aggfinalfn::oid = 0 then 0 else PF.return_type end as final_return_type,
       A.agginitval as initial_value,
       A.aggsortop as sort_operator_id,
       case when A.aggsortop = 0 then null else O.operator_name end as sort_operator_name,
       pg_catalog.pg_get_userbyid(P.proowner) as "owner"
       ,
       A.aggfinalextra as final_extra,
       A.aggtransspace as state_size,
       A.aggmtransfn::oid as moving_transition_id,
       case when A.aggmtransfn::oid = 0 then null else FTP.function_name end as moving_transition_name,
       A.aggminvtransfn::oid as inverse_transition_id,
       case when A.aggminvtransfn::oid = 0 then null else ITP.function_name end as inverse_transition_name,
       A.aggmtranstype::oid as moving_state_type,
       A.aggmtransspace as moving_state_size,
       A.aggmfinalfn::oid as moving_final_id,
       case when A.aggmfinalfn::oid = 0 then null else FFP.function_name end as moving_final_name,
       A.aggmfinalextra as moving_final_extra,
       A.aggminitval as moving_initial_value,
       A.aggkind as aggregate_kind,
       A.aggnumdirectargs as direct_args
       
       /* ,
       A.aggcombinefn::oid as combine_function_id,
       case when A.aggcombinefn::oid = 0 then null else CP.function_name end as combine_function_name,
       A.aggserialfn::oid as serialization_function_id,
       case when A.aggserialfn::oid = 0 then null else SP.function_name end as serialization_function_name,
       A.aggdeserialfn::oid as deserialization_function_id,
       case when A.aggdeserialfn::oid = 0 then null else DP.function_name end as deserialization_function_name,
       P.proparallel as concurrency_kind
       */
from pg_catalog.pg_aggregate A
join pg_catalog.pg_proc P
  on A.aggfnoid = P.oid
join procedures PT
  on A.aggtransfn::oid = PT.function_id
left outer join procedures PF
  on A.aggfinalfn::oid = PF.function_id
left outer join operators O
  on A.aggsortop = O.operator_id
left outer join procedures FTP
  on A.aggmtransfn = FTP.function_id
left outer join procedures ITP
  on A.aggminvtransfn = ITP.function_id
left outer join procedures FFP
  on A.aggmfinalfn = FFP.function_id

/* left outer join procedures CP
  on A.aggcombinefn = CP.function_id
left outer join procedures SP
  on A.aggserialfn = SP.function_id
left outer join procedures DP
  on A.aggdeserialfn = DP.function_id
*/
where P.pronamespace = ?::oid
--  and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(:tx::varchar::xid))
order by P.oid
-- ] --------------------------------------------------
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913790] results received
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913790] finished - execution time: 31 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913791] 
select O.oid as op_id,
       O.xmin as state_number,
       oprname as op_name,
       oprkind as op_kind,
       oprleft as arg_left_type_id,
       oprright as arg_right_type_id,
       oprresult as arg_result_type_id,
       oprcode as func_main,
       pg_catalog.pg_get_userbyid(O.oprowner) as "owner"
from pg_catalog.pg_operator O
where oprnamespace = ?::oid
  --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913791] results received
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913791] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913792] 
select oid as id,
       xmin as state_number,
       collname as name,
       collcollate as lc_collate,
       collctype as lc_ctype,
       pg_catalog.pg_get_userbyid(collowner) as "owner"
from pg_catalog.pg_collation
where collnamespace = ?::oid
  --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913792] results received
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913792] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913793] 
with T as ( select distinct T.oid as table_id, T.relname as table_name
            from pg_catalog.pg_class T,
                 pg_catalog.pg_attribute A
            where T.relnamespace = ?::oid
              and T.relkind in ('r', 'm', 'v', 'f', 'p')
              --  and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid))
              and A.attrelid = T.oid )
select T.table_id,
       C.attnum as column_position,
       C.attname as column_name,
       C.xmin as column_state_number,
       C.atttypmod as type_mod,
       C.attndims as dimensions_number,
       pg_catalog.format_type(C.atttypid, C.atttypmod) as type_spec,
       C.atttypid as type_id,
       C.attnotnull as mandatory,
       /* pg_catalog.pg_get_expr(D.adbin, 'pg_catalog.pg_attrdef'::regclass::oid) */D.adsrc  as column_default_expression,
       not C.attislocal as column_is_inherited,
       C.attfdwoptions as options,
       C.attisdropped as column_is_dropped,
       /* C.attidentity */null  as identity_kind
from T
  inner join pg_catalog.pg_attribute C on T.table_id = C.attrelid
  left outer join pg_catalog.pg_attrdef D on (C.attrelid, C.attnum) = (D.adrelid, D.adnum)
where attnum > 0
order by table_id, attnum
-- ] --------------------------------------------------
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913793] results received
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913793] finished - execution time: 252 ms, fetching time: 32 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913794] 
with tab as ( select relnamespace as schema_id,
                     oid as table_id,
                     relkind as table_kind
              from pg_catalog.pg_class
              where relnamespace = ?::oid
                and relkind in ('r','m','v','p')),
    ind_head as ( select indrelid as table_id,
                         indexrelid as index_id,
                         indisunique as is_unique,
                         indisprimary as is_primary,
                         indkey as column_positions,
                         indclass as column_operators,
                         indoption as column_options,
                         pg_catalog.pg_get_expr(indpred, indrelid) as condition,
                         case when indexprs is not null
                             then pg_catalog.array_to_string(array(
                                      select case when indkey[k] = 0
                                             then chr(27) || pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
                                             else pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
                                             end
                                      from pg_catalog.generate_subscripts(indkey, 1) as k
                                      order by k),
                                  chr(28))
                             else null end as expressions
                  from pg_catalog.pg_index ),
    ind_stor as ( select cls.relnamespace as schema_id,
                         cls.oid as index_id,
                         cls.xmin as state_number,
                         cls.relname as index_name,
                         /* pg_catalog.pg_indexam_has_property(cls.relam, 'can_order') */am.amcanorder  as can_order
                  from pg_catalog.pg_class cls
                    /* */join pg_catalog.pg_am am on (cls.relam = am.oid)
                  where cls.relkind = 'i'
                    /* and pg_catalog.age(cls.xmin) <= pg_catalog.age(:tx::varchar::xid) */)
select table_id, table_kind,
       index_name, index_id, state_number,
       is_unique, is_primary,
       column_positions, column_operators, column_options,
       condition, expressions, can_order
from tab natural join ind_head natural join ind_stor
-- ] --------------------------------------------------
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913794] results received
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913794] finished - execution time: 19 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913795] 
with T as ( select oid as table_id,
                   relkind as table_kind,
                   xmin as table_state_id
            from pg_catalog.pg_class
            where relkind in ('r','v','f','p')
              and relnamespace = ?::oid ),
     C as ( select conrelid as table_id,
                   oid::bigint as con_id,
                   xmin as con_state_id,
                   conname as con_name,
                   contype as con_kind,
                   conkey as con_columns,
                   conindid as index_id,
                   confrelid as ref_table_id,
                   confkey as ref_columns,
                   condeferrable as is_deferrable,
                   condeferred as is_init_deferred,
                   confupdtype as on_update,
                   confdeltype as on_delete,
                   /* conbin */consrc 
            from pg_catalog.pg_constraint
            where contype in ('p','u','f','c')
              and connamespace = ?::oid )
select table_id,
       table_kind,
       con_id,
       con_state_id::varchar::bigint as con_state_id,
       con_name,
       con_kind,
       con_columns,
       index_id,
       ref_table_id,
       is_deferrable,
       is_init_deferred,
       on_update,
       on_delete,
       /* pg_catalog.pg_get_expr(conbin, table_id) */consrc  as con_expression,
       ref_columns
from T natural join C
--  where pg_catalog.age(table_state_id) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(con_state_id) <= pg_catalog.age(:tx::varchar::xid)
order by pg_catalog.strpos('pufc', con_kind)
-- ] --------------------------------------------------
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913795] results received
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913795] finished - execution time: 11 ms, fetching time: 6 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913796] 
select R.ev_class as table_id,
       R.oid as rule_id,
       R.xmin as rule_state_number,
       R.rulename as rule_name,
       pg_catalog.translate(ev_type,'1234','SUID') as rule_event_code,
       R.ev_enabled as rule_fire_mode,
       R.is_instead as rule_is_instead
from pg_catalog.pg_rewrite R
where R.ev_class in (select oid
                     from pg_catalog.pg_class
                     where relnamespace = ?::oid)
  --  and pg_catalog.age(R.xmin) <= pg_catalog.age(:tx::varchar::xid)
  and R.rulename != '_RETURN'::name
order by R.ev_class::bigint, ev_type
-- ] --------------------------------------------------
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913796] results received
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913796] finished - execution time: 3 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913797] 
select T.tgrelid as table_id,
       T.oid as trigger_id,
       T.xmin as trigger_state_number,
       T.tgname as trigger_name,
       T.tgfoid as function_id,
       T.tgtype & 31 as bits,
       T.tgdeferrable as is_deferrable,
       T.tginitdeferred as is_init_deferred,
       T.tgenabled as trigger_fire_mode
from pg_catalog.pg_trigger T
where T.tgrelid in (select oid
                    from pg_catalog.pg_class
                    where relnamespace = ?::oid)
  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
  and not T.tgisinternal
-- ] --------------------------------------------------
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913797] results received
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913797] finished - execution time: 13 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913798] 
select D.objoid id, C.relkind as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select T.oid id, 'T' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, pg_catalog.translate(C.contype, 'pufc', 'kkxz') as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 't' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'R' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'F' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'O' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'C' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)

-- ] --------------------------------------------------
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913798] results received
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913798] finished - execution time: 22 ms, fetching time: 17 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913799] 
select distinct
       T.relkind as view_kind,
       T.oid as view_id,
       pg_catalog.pg_get_viewdef(T.oid) as source_text
from pg_catalog.pg_class T
  join pg_catalog.pg_namespace N on T.relnamespace = N.oid
  left outer join pg_catalog.pg_attribute A on (A.attrelid = T.oid)
where N.oid = ?::oid
  and T.relkind in ('m','v')
  --  and (pg_catalog.age(T.xmin) <= pg_catalog.age(:src_tx::varchar::xid) or pg_catalog.age(A.xmin) <= pg_catalog.age(:src_tx::varchar::xid))
-- ] --------------------------------------------------
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913799] results received
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913799] finished - execution time: 45 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913800] 
with A as ( select oid as table_id, pg_catalog.upper(relkind) as table_kind
            from pg_catalog.pg_class
            where relnamespace = ?::oid
              and relkind in ('r', 'm', 'v', 'f', 'p') )
select table_kind,
       table_id,
       R.oid as rule_id,
       pg_catalog.pg_get_ruledef(R.oid) as source_text
from A join pg_catalog.pg_rewrite R
        on A.table_id = R.ev_class
where R.rulename != '_RETURN'::name
  --  and pg_catalog.age(R.xmin) <= pg_catalog.age(:src_tx::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913800] results received
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913800] finished - execution time: 22 ms, fetching time: 6 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913801] 
with system_languages as ( select oid as lang
                           from pg_catalog.pg_language
                           where lanname in ('c','internal') )
select oid as id,
       pg_catalog.pg_get_function_arguments(oid) as arguments_def,
       pg_catalog.pg_get_function_result(oid) as result_def,
       prosrc as source_text
from pg_catalog.pg_proc
where pronamespace = ?::oid
  --  and pg_catalog.age(xmin) <= pg_catalog.age(:src_tx::varchar::xid)
  and not /* (prokind = 'a') */proisagg 
  and prolang not in (select lang from system_languages)
  and prosrc is not null
-- ] --------------------------------------------------
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913801] results received
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913801] finished - execution time: 4 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913802] 
select distinct connamespace as schema_id
from pg_catalog.pg_constraint F,
     pg_catalog.pg_class O
where F.contype = 'f'
  and F.confrelid = O.oid
  and O.relnamespace in (?)
-- ] --------------------------------------------------
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913802] results received
-- 2020-05-21 14:05:33 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913802] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:34 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913803] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-05-21 14:05:34 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913803] results received
-- 2020-05-21 14:05:34 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094432] [statement id: 1356913803] finished - execution time: 5 ms, fetching time: 3 ms, total result sets count: 1
-- 2020-05-21 14:05:34 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 594094432] disconnected
-- 2020-05-21 14:05:39 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 594094433] connected
-- [ --------------------------------------------------
-- 2020-05-21 14:05:39 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913804] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-05-21 14:05:39 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913804] results received
-- 2020-05-21 14:05:39 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913804] finished - execution time: 5 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913805] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913805] results received
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913805] finished - execution time: 11 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913806] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913806] results received
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913806] finished - execution time: 14 ms, fetching time: 9 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913807] 
select R.oid::bigint as role_id, rolname as role_name,
  rolsuper is_super, rolinherit is_inherit,
  rolcreaterole can_createrole, rolcreatedb can_createdb,
  rolcanlogin can_login, rolreplication /* false */ is_replication,
  rolconnlimit conn_limit, rolvaliduntil valid_until,
  /* rolbypassrls */false  bypass_rls, rolconfig config,
  D.description
from pg_catalog.pg_roles R
  left join pg_catalog.pg_shdescription D on D.objoid = R.oid
-- ] --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913807] results received
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913807] finished - execution time: 5 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913808] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913808] results received
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913808] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913809] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913809] results received
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913809] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913810] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913810] results received
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913810] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913811] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913811] results received
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913811] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913812] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913812] results received
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913812] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913813] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913813] results received
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913813] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913814] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913814] results received
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913814] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913815] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913815] results received
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913815] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913816] 
select usesuper
from pg_user
where usename = current_user
-- ] --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913816] results received
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913816] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913817] 
select distinct oid
from pg_catalog.pg_am
union
select distinct oid
from pg_catalog.pg_foreign_data_wrapper
union
select distinct oid
from pg_catalog.pg_foreign_server
union
select distinct oid
from pg_catalog.pg_extension

union
select distinct oid
from pg_catalog.pg_user_mapping

-- ] --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913817] results received
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913817] finished - execution time: 8 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913818] 
select D.objoid id
from pg_catalog.pg_description D
where D.classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
-- ] --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913818] results received
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913818] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913819] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913819] results received
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913819] finished - execution time: 2 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913820] 
select A.oid as access_method_id,
       A.xmin as state_number,
       A.amname as access_method_name
       /* ,
       A.amhandler::oid as handler_id,
       pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as handler_name,
       A.amtype as access_method_type
       */
from pg_am A
  /* join pg_proc P on A.amhandler::oid = P.oid
  join pg_namespace N on P.pronamespace = N.oid
  */
where pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913820] results received
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913820] finished - execution time: 2 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913821] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913821] results received
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913821] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913822] 
select fdw.oid as id,
       fdw.xmin as state_number,
       fdw.fdwname as name,
       pr.proname as handler,
       nspc.nspname as handler_schema,
       pr2.proname as validator,
       nspc2.nspname as validator_schema,
       fdw.fdwoptions as options,
       pg_catalog.pg_get_userbyid(fdw.fdwowner) as "owner"
from pg_catalog.pg_foreign_data_wrapper fdw
     left outer join pg_catalog.pg_proc pr on fdw.fdwhandler = pr.oid
     left outer join pg_catalog.pg_namespace nspc on pr.pronamespace = nspc.oid
     left outer join pg_catalog.pg_proc pr2 on fdw.fdwvalidator = pr2.oid
     left outer join pg_catalog.pg_namespace nspc2 on pr2.pronamespace = nspc2.oid
  where pg_catalog.age(fdw.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913822] results received
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913822] finished - execution time: 6 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913823] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913823] results received
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913823] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913824] 
select srv.oid as id,
       srv.srvfdw as fdw_id,
       srv.xmin as state_number,
       srv.srvname as name,
       srv.srvtype as type,
       srv.srvversion as version,
       srv.srvoptions as options,
       pg_catalog.pg_get_userbyid(srv.srvowner) as "owner"
from pg_catalog.pg_foreign_server srv
  where pg_catalog.age(srv.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913824] results received
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913824] finished - execution time: 2 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913825] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913825] results received
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913825] finished - execution time: 1 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913826] 
select pg_extension.oid as id,
       pg_extension.xmin as state_number,
       extname as name,
       extversion as version,
       extnamespace as schema_id,
       nspname as schema_name,
       array(select target
             from pg_extension_update_paths(extname)
             where source = extversion and path is not null) as available_updates
from pg_catalog.pg_extension
  join pg_namespace on pg_extension.extnamespace = pg_namespace.oid
where pg_catalog.age(pg_extension.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913826] results received
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913826] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913827] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913827] results received
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913827] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913828] 
select D.objoid id, case
    when 'pg_catalog.pg_am'::regclass = classoid then 'A'
    when 'pg_catalog.pg_foreign_data_wrapper'::regclass = classoid then 'W'
    when 'pg_catalog.pg_foreign_server'::regclass = classoid then 'S'
    when 'pg_catalog.pg_extension'::regclass = classoid then 'E'
    
  end as kind,
  D.objsubid sub_id, D.description
from pg_catalog.pg_description D
where classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913828] results received
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913828] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913829] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913829] results received
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913829] finished - execution time: 1 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913830] 
select 'sequence' as dependent_kind,
       'table' as owner_kind,
       D.objid as dependent_id,
       D.refobjid as owner_id,
       D.refobjsubid as owner_subobject_id
from pg_depend D
  join pg_class C_SEQ on D.objid = C_SEQ.oid
  join pg_class C_TAB on D.refobjid = C_TAB.oid
where C_SEQ.relkind = 'S'
  and C_TAB.relkind = 'r'
  and D.refobjsubid <> 0
  and (D.deptype = 'a' or D.deptype = 'i')
-- ] --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913830] results received
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913830] finished - execution time: 7 ms, fetching time: 6 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913831] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913831] results received
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094433] [statement id: 1356913831] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- 2020-05-21 14:05:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 594094433] disconnected
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 594094434] connected
-- [ --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913832] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913832] results received
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913832] finished - execution time: 8 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913833] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913833] results received
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913833] finished - execution time: 110 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913834] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913834] results received
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913834] finished - execution time: 13 ms, fetching time: 11 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913835] 
select R.oid::bigint as role_id, rolname as role_name,
  rolsuper is_super, rolinherit is_inherit,
  rolcreaterole can_createrole, rolcreatedb can_createdb,
  rolcanlogin can_login, rolreplication /* false */ is_replication,
  rolconnlimit conn_limit, rolvaliduntil valid_until,
  /* rolbypassrls */false  bypass_rls, rolconfig config,
  D.description
from pg_catalog.pg_roles R
  left join pg_catalog.pg_shdescription D on D.objoid = R.oid
-- ] --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913835] results received
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913835] finished - execution time: 6 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913836] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913836] results received
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913836] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913837] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913837] results received
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913837] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913838] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913838] results received
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913838] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913839] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913839] results received
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913839] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913840] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913840] results received
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913840] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913841] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913841] results received
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913841] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913842] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913842] results received
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913842] finished - execution time: 2 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913843] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913843] results received
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913843] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913844] 
select usesuper
from pg_user
where usename = current_user
-- ] --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913844] results received
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913844] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913845] 
select distinct oid
from pg_catalog.pg_am
union
select distinct oid
from pg_catalog.pg_foreign_data_wrapper
union
select distinct oid
from pg_catalog.pg_foreign_server
union
select distinct oid
from pg_catalog.pg_extension

union
select distinct oid
from pg_catalog.pg_user_mapping

-- ] --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913845] results received
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913845] finished - execution time: 7 ms, fetching time: 9 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913846] 
select D.objoid id
from pg_catalog.pg_description D
where D.classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
-- ] --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913846] results received
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913846] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913847] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913847] results received
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913847] finished - execution time: 2 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913848] 
select A.oid as access_method_id,
       A.xmin as state_number,
       A.amname as access_method_name
       /* ,
       A.amhandler::oid as handler_id,
       pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as handler_name,
       A.amtype as access_method_type
       */
from pg_am A
  /* join pg_proc P on A.amhandler::oid = P.oid
  join pg_namespace N on P.pronamespace = N.oid
  */
where pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913848] results received
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913848] finished - execution time: 3 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913849] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913849] results received
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913849] finished - execution time: 2 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913850] 
select fdw.oid as id,
       fdw.xmin as state_number,
       fdw.fdwname as name,
       pr.proname as handler,
       nspc.nspname as handler_schema,
       pr2.proname as validator,
       nspc2.nspname as validator_schema,
       fdw.fdwoptions as options,
       pg_catalog.pg_get_userbyid(fdw.fdwowner) as "owner"
from pg_catalog.pg_foreign_data_wrapper fdw
     left outer join pg_catalog.pg_proc pr on fdw.fdwhandler = pr.oid
     left outer join pg_catalog.pg_namespace nspc on pr.pronamespace = nspc.oid
     left outer join pg_catalog.pg_proc pr2 on fdw.fdwvalidator = pr2.oid
     left outer join pg_catalog.pg_namespace nspc2 on pr2.pronamespace = nspc2.oid
  where pg_catalog.age(fdw.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913850] results received
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913850] finished - execution time: 4 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913851] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913851] results received
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913851] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913852] 
select srv.oid as id,
       srv.srvfdw as fdw_id,
       srv.xmin as state_number,
       srv.srvname as name,
       srv.srvtype as type,
       srv.srvversion as version,
       srv.srvoptions as options,
       pg_catalog.pg_get_userbyid(srv.srvowner) as "owner"
from pg_catalog.pg_foreign_server srv
  where pg_catalog.age(srv.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913852] results received
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913852] finished - execution time: 1 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913853] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913853] results received
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913853] finished - execution time: 1 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913854] 
select pg_extension.oid as id,
       pg_extension.xmin as state_number,
       extname as name,
       extversion as version,
       extnamespace as schema_id,
       nspname as schema_name,
       array(select target
             from pg_extension_update_paths(extname)
             where source = extversion and path is not null) as available_updates
from pg_catalog.pg_extension
  join pg_namespace on pg_extension.extnamespace = pg_namespace.oid
where pg_catalog.age(pg_extension.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913854] results received
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913854] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913855] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913855] results received
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913855] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913856] 
select D.objoid id, case
    when 'pg_catalog.pg_am'::regclass = classoid then 'A'
    when 'pg_catalog.pg_foreign_data_wrapper'::regclass = classoid then 'W'
    when 'pg_catalog.pg_foreign_server'::regclass = classoid then 'S'
    when 'pg_catalog.pg_extension'::regclass = classoid then 'E'
    
  end as kind,
  D.objsubid sub_id, D.description
from pg_catalog.pg_description D
where classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913856] results received
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913856] finished - execution time: 3 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913857] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913857] results received
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913857] finished - execution time: 2 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913858] 
select 'sequence' as dependent_kind,
       'table' as owner_kind,
       D.objid as dependent_id,
       D.refobjid as owner_id,
       D.refobjsubid as owner_subobject_id
from pg_depend D
  join pg_class C_SEQ on D.objid = C_SEQ.oid
  join pg_class C_TAB on D.refobjid = C_TAB.oid
where C_SEQ.relkind = 'S'
  and C_TAB.relkind = 'r'
  and D.refobjsubid <> 0
  and (D.deptype = 'a' or D.deptype = 'i')
-- ] --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913858] results received
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913858] finished - execution time: 7 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913859] 
with saved_age as (select greatest(pg_catalog.age(?::varchar::xid), pg_catalog.age(?::varchar::xid)) as "value")
select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
(
  select X.last_tx as last_tx
  from (
    (
    select xmin as last_tx
      from pg_catalog.pg_type
      where typnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_class
      where relnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_proc
      where pronamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_operator
      where oprnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select A.xmin as last_tx
      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
      where K.relnamespace = ?::oid
      order by pg_catalog.age(A.xmin)
      limit 1
    )
    union all
    (
    select E.xmin as last_tx
      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
      where T.typnamespace = ?::oid
      order by pg_catalog.age(E.xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_constraint
      where connamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select CO.xmin as last_tx
      from pg_catalog.pg_collation CO
      where CO.collnamespace = ?::oid
      order by pg_catalog.age(CO.xmin)
      limit 1
    )
    union all
    
    (
    select IX.xmin as last_tx
      from pg_catalog.pg_index IX,
           pg_catalog.pg_class IC
      where IC.oid = IX.indrelid
        and IC.relnamespace = ?::oid
        order by pg_catalog.age(IX.xmin)
        limit 1
    )
    union all
    (
    select RU.xmin as last_tx
      from pg_catalog.pg_rewrite RU,
           pg_catalog.pg_class RC
      where RC.oid = RU.ev_class
        and RC.relnamespace = ?::oid
        order by pg_catalog.age(RU.xmin)
        limit 1
    )
    union all
    (
    select TG.xmin as last_tx
      from pg_catalog.pg_trigger TG,
           pg_catalog.pg_class TC
      where TC.oid = TG.tgrelid
        and TC.relnamespace = ?::oid
        order by pg_catalog.age(TG.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_class C on C.oid = D.objoid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_constraint C on C.oid = D.objoid
      where C.connamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_trigger T on T.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = T.tgrelid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_rewrite R on R.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = R.ev_class
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_proc P on P.oid = D.objoid
      where P.pronamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_type T on T.oid = D.objoid
      where T.typnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_operator O on O.oid = D.objoid
      where O.oprnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_collation C on C.oid = D.objoid
      where C.collnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    
  ) X
  order by pg_catalog.age(X.last_tx)
  limit 1
) C, saved_age SA
-- ] --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913859] results received
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913859] finished - execution time: 21 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913860] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913860] results received
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913860] finished - execution time: 2 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913861] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913861] results received
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913861] finished - execution time: 2 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913862] 
select distinct oid
from pg_catalog.pg_type
where typnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_class
where relnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_proc
where pronamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_operator
where oprnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_constraint
where connamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_collation
where collnamespace = ?::oid
union

select distinct IX.indexrelid
from pg_catalog.pg_index IX,
     pg_catalog.pg_class IC
where IC.oid = IX.indrelid
  and IC.relnamespace = ?::oid
union
select distinct RU.oid
from pg_catalog.pg_rewrite RU,
     pg_catalog.pg_class RC
where RC.oid = RU.ev_class
  and RC.relnamespace = ?::oid
  and not RU.rulename = '_RETURN'
union
select distinct TG.oid
from pg_catalog.pg_trigger TG,
     pg_catalog.pg_class TC
where TC.oid = TG.tgrelid
  and TC.relnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913862] results received
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913862] finished - execution time: 4 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913863] 
select D.objoid id, pg_catalog.array_agg(D.objsubid) sub_ids
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
group by D.objoid
union all
select T.oid id, pg_catalog.array_agg(D.objsubid)
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
group by T.oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913863] results received
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913863] finished - execution time: 6 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913864] 
with saved_age as (select greatest(pg_catalog.age(?::varchar::xid), pg_catalog.age(?::varchar::xid)) as "value")
select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
(
  select X.last_tx as last_tx
  from (
    (
    select xmin as last_tx
      from pg_catalog.pg_type
      where typnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_class
      where relnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_proc
      where pronamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_operator
      where oprnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select A.xmin as last_tx
      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
      where K.relnamespace = ?::oid
      order by pg_catalog.age(A.xmin)
      limit 1
    )
    union all
    (
    select E.xmin as last_tx
      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
      where T.typnamespace = ?::oid
      order by pg_catalog.age(E.xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_constraint
      where connamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select CO.xmin as last_tx
      from pg_catalog.pg_collation CO
      where CO.collnamespace = ?::oid
      order by pg_catalog.age(CO.xmin)
      limit 1
    )
    union all
    
    (
    select IX.xmin as last_tx
      from pg_catalog.pg_index IX,
           pg_catalog.pg_class IC
      where IC.oid = IX.indrelid
        and IC.relnamespace = ?::oid
        order by pg_catalog.age(IX.xmin)
        limit 1
    )
    union all
    (
    select RU.xmin as last_tx
      from pg_catalog.pg_rewrite RU,
           pg_catalog.pg_class RC
      where RC.oid = RU.ev_class
        and RC.relnamespace = ?::oid
        order by pg_catalog.age(RU.xmin)
        limit 1
    )
    union all
    (
    select TG.xmin as last_tx
      from pg_catalog.pg_trigger TG,
           pg_catalog.pg_class TC
      where TC.oid = TG.tgrelid
        and TC.relnamespace = ?::oid
        order by pg_catalog.age(TG.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_class C on C.oid = D.objoid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_constraint C on C.oid = D.objoid
      where C.connamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_trigger T on T.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = T.tgrelid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_rewrite R on R.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = R.ev_class
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_proc P on P.oid = D.objoid
      where P.pronamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_type T on T.oid = D.objoid
      where T.typnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_operator O on O.oid = D.objoid
      where O.oprnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_collation C on C.oid = D.objoid
      where C.collnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    
  ) X
  order by pg_catalog.age(X.last_tx)
  limit 1
) C, saved_age SA
-- ] --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913864] results received
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913864] finished - execution time: 15 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913865] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913865] results received
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913865] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913866] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913866] results received
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913866] finished - execution time: 4 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913867] 
select distinct oid
from pg_catalog.pg_type
where typnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_class
where relnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_proc
where pronamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_operator
where oprnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_constraint
where connamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_collation
where collnamespace = ?::oid
union

select distinct IX.indexrelid
from pg_catalog.pg_index IX,
     pg_catalog.pg_class IC
where IC.oid = IX.indrelid
  and IC.relnamespace = ?::oid
union
select distinct RU.oid
from pg_catalog.pg_rewrite RU,
     pg_catalog.pg_class RC
where RC.oid = RU.ev_class
  and RC.relnamespace = ?::oid
  and not RU.rulename = '_RETURN'
union
select distinct TG.oid
from pg_catalog.pg_trigger TG,
     pg_catalog.pg_class TC
where TC.oid = TG.tgrelid
  and TC.relnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913867] results received
-- 2020-05-21 14:05:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913867] finished - execution time: 15 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913868] 
select D.objoid id, pg_catalog.array_agg(D.objsubid) sub_ids
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
group by D.objoid
union all
select T.oid id, pg_catalog.array_agg(D.objsubid)
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
group by T.oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913868] results received
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913868] finished - execution time: 64 ms, fetching time: 43 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913869] 
with saved_age as (select greatest(pg_catalog.age(?::varchar::xid), pg_catalog.age(?::varchar::xid)) as "value")
select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
(
  select X.last_tx as last_tx
  from (
    (
    select xmin as last_tx
      from pg_catalog.pg_type
      where typnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_class
      where relnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_proc
      where pronamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_operator
      where oprnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select A.xmin as last_tx
      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
      where K.relnamespace = ?::oid
      order by pg_catalog.age(A.xmin)
      limit 1
    )
    union all
    (
    select E.xmin as last_tx
      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
      where T.typnamespace = ?::oid
      order by pg_catalog.age(E.xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_constraint
      where connamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select CO.xmin as last_tx
      from pg_catalog.pg_collation CO
      where CO.collnamespace = ?::oid
      order by pg_catalog.age(CO.xmin)
      limit 1
    )
    union all
    
    (
    select IX.xmin as last_tx
      from pg_catalog.pg_index IX,
           pg_catalog.pg_class IC
      where IC.oid = IX.indrelid
        and IC.relnamespace = ?::oid
        order by pg_catalog.age(IX.xmin)
        limit 1
    )
    union all
    (
    select RU.xmin as last_tx
      from pg_catalog.pg_rewrite RU,
           pg_catalog.pg_class RC
      where RC.oid = RU.ev_class
        and RC.relnamespace = ?::oid
        order by pg_catalog.age(RU.xmin)
        limit 1
    )
    union all
    (
    select TG.xmin as last_tx
      from pg_catalog.pg_trigger TG,
           pg_catalog.pg_class TC
      where TC.oid = TG.tgrelid
        and TC.relnamespace = ?::oid
        order by pg_catalog.age(TG.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_class C on C.oid = D.objoid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_constraint C on C.oid = D.objoid
      where C.connamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_trigger T on T.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = T.tgrelid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_rewrite R on R.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = R.ev_class
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_proc P on P.oid = D.objoid
      where P.pronamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_type T on T.oid = D.objoid
      where T.typnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_operator O on O.oid = D.objoid
      where O.oprnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_collation C on C.oid = D.objoid
      where C.collnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    
  ) X
  order by pg_catalog.age(X.last_tx)
  limit 1
) C, saved_age SA
-- ] --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913869] results received
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913869] finished - execution time: 11 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913870] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913870] results received
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913870] finished - execution time: 2 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913871] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913871] results received
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913871] finished - execution time: 6 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913872] 
select distinct oid
from pg_catalog.pg_type
where typnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_class
where relnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_proc
where pronamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_operator
where oprnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_constraint
where connamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_collation
where collnamespace = ?::oid
union

select distinct IX.indexrelid
from pg_catalog.pg_index IX,
     pg_catalog.pg_class IC
where IC.oid = IX.indrelid
  and IC.relnamespace = ?::oid
union
select distinct RU.oid
from pg_catalog.pg_rewrite RU,
     pg_catalog.pg_class RC
where RC.oid = RU.ev_class
  and RC.relnamespace = ?::oid
  and not RU.rulename = '_RETURN'
union
select distinct TG.oid
from pg_catalog.pg_trigger TG,
     pg_catalog.pg_class TC
where TC.oid = TG.tgrelid
  and TC.relnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913872] results received
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913872] finished - execution time: 4 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913873] 
select D.objoid id, pg_catalog.array_agg(D.objsubid) sub_ids
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
group by D.objoid
union all
select T.oid id, pg_catalog.array_agg(D.objsubid)
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
group by T.oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913873] results received
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913873] finished - execution time: 8 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913874] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913874] results received
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913874] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913875] 
with U as (select usesysid from pg_catalog.pg_user where usename = current_user),
          T as (
                select oid as sequence_id,
                       relname as sequence_name,
                       pg_catalog.pg_get_userbyid(relowner) as "owner",
                       case when relowner = (select usesysid from U) then trim(both '()' from pg_catalog.pg_sequence_parameters(oid)::varchar)
                       else null::varchar
                       end as sequence_params,
                       
                       xmin as sequence_state_number
                       from pg_catalog.pg_class
                         where relnamespace = ?::oid
                         and relkind = 'S'
                         and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)
                )
select sequence_id,
       sequence_name,
       pg_catalog.split_part(sequence_params, ',', 1)::bigint as next_value,
       pg_catalog.split_part(sequence_params, ',', 2)::bigint as min_value,
       pg_catalog.split_part(sequence_params, ',', 3)::bigint as max_value,
       pg_catalog.split_part(sequence_params, ',', 4)::bigint as inc_value,
       pg_catalog.lower(pg_catalog.split_part(sequence_params, ',', 5)) LIKE '%t%' as cycle_option,
       
       sequence_state_number,
       "owner"
from T
-- ] --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913875] results received
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913875] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913876] 
select T.oid as type_id,
       T.xmin as type_state_number,
       T.typname as type_name,
       T.typtype as type_sub_kind,
       T.typcategory as type_category,
       T.typrelid as class_id,
       T.typbasetype as base_type_id,
       case when T.typtype in ('c','e') then null
            else pg_catalog.format_type(T.typbasetype, T.typtypmod) end as type_def,
       T.typdefault as default_expression,
       T.typnotnull as mandatory,
       pg_catalog.pg_get_userbyid(T.typowner) as "owner"
from pg_catalog.pg_type T
         left outer join pg_catalog.pg_class C
             on T.typrelid = C.oid
where T.typnamespace = ?::oid
  and pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid)
  and (T.typtype in ('d','e') or C.relkind = 'c'::"char" or T.typtype = 'b' and (T.typelem = 0 OR T.typcategory <> 'A'))
order by 1
-- ] --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913876] results received
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913876] finished - execution time: 4 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913877] 
select T.oid::bigint as type_id,
       C.oid::bigint as constraint_id,
       C.xmin as constraint_state_number,
       C.conname as constraint_name,
       /* pg_catalog.pg_get_expr(C.conbin, 0) */C.consrc  as predicate
from pg_catalog.pg_type T,
     pg_catalog.pg_constraint C
where T.typnamespace = ?::oid
  and T.typtype = 'd'::"char"
  and T.oid = C.contypid
  and (pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(C.xmin) <= pg_catalog.age(?::varchar::xid))
order by constraint_name
-- ] --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913877] results received
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913877] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913878] 
select T.relkind as table_kind,
       T.relname as table_name,
       T.oid as table_id,
       T.xmin as table_state_number,
       /* false */T.relhasoids  as table_with_oids,
       T.relnamespace as tablespace_id,
       T.reloptions as options,
       (select pg_catalog.array_agg(inhparent)::varchar from (select inhparent::bigint from pg_catalog.pg_inherits where T.oid = inhrelid order by inhseqno) as bts) as ancestors,
       (select pg_catalog.array_agg(inhrelid)::varchar from (select inhrelid::bigint from pg_catalog.pg_inherits where T.oid = inhparent order by inhrelid) as its) as successors,
       /* T.relispartition */false  as is_partition,
       /* pg_catalog.pg_get_partkeydef(T.oid) */null  as partition_key,
       /* pg_catalog.pg_get_expr(T.relpartbound, T.oid) */null  as partition_expression,
       pg_catalog.pg_get_userbyid(T.relowner) as "owner"
from pg_catalog.pg_class T
where relnamespace = ?::oid
  and relkind in ('r', 'm', 'v', 'f', 'p')
  and pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid)
order by table_kind, table_id
-- ] --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913878] results received
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913878] finished - execution time: 15 ms, fetching time: 24 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913879] 
select ft.ftrelid as table_id,
       srv.srvname as table_server,
       ft.ftoptions as table_options,
       pg_catalog.pg_get_userbyid(cls.relowner) as "owner"
from pg_catalog.pg_foreign_table ft
     left outer join pg_catalog.pg_foreign_server srv on ft.ftserver = srv.oid
     join pg_catalog.pg_class cls on ft.ftrelid = cls.oid
where cls.relnamespace = ?::oid
  and pg_catalog.age(ft.xmin) <= pg_catalog.age(?::varchar::xid)
order by table_id
-- ] --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913879] results received
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913879] finished - execution time: 39 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913880] 
with schema_procs as (select prorettype, proargtypes, proallargtypes
                      from pg_catalog.pg_proc
                      where pronamespace = ?::oid
                        and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)  ),
     schema_opers as (select oprleft, oprright, oprresult
                      from pg_catalog.pg_operator
                      where oprnamespace = ?::oid
                        and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)  ),
     schema_aggregates as (select A.aggtranstype , A.aggmtranstype 
                           from pg_catalog.pg_aggregate A
                           join pg_catalog.pg_proc P
                             on A.aggfnoid = P.oid
                           where P.pronamespace = ?::oid
                           and (pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(?::varchar::xid)) ),
     schema_arg_types as ( select prorettype as type_id
                           from schema_procs
                           union
                           select distinct unnest(proargtypes) as type_id
                           from schema_procs
                           union
                           select distinct unnest(proallargtypes) as type_id
                           from schema_procs
                           union
                           select oprleft as type_id
                           from schema_opers
                           where oprleft is not null
                           union
                           select oprright as type_id
                           from schema_opers
                           where oprright is not null
                           union
                           select oprresult as type_id
                           from schema_opers
                           where oprresult is not null
                           union
                           select aggtranstype::oid as type_id
                           from schema_aggregates
                           union
                           select aggmtranstype::oid as type_id
                           from schema_aggregates
                           
                           )
select type_id, pg_catalog.format_type(type_id, null) as type_spec
from schema_arg_types
where type_id <> 0
-- ] --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913880] results received
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913880] finished - execution time: 6 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913881] 
with languages as (select oid as lang_oid, lanname as lang
                   from pg_catalog.pg_language),
     routines as (select proname as r_name,
                         prolang as lang_oid,
                         oid as r_id,
                         xmin as r_state_number,
                         proargnames as arg_names,
                         proargmodes as arg_modes,
                         proargtypes::int[] as in_arg_types,
                         proallargtypes::int[] as all_arg_types,
                         pg_catalog.pg_get_expr(proargdefaults, 0) as arg_defaults,
                         provariadic as arg_variadic_id,
                         prorettype as ret_type_id,
                         proretset as ret_set,
                         /* prokind */case when proiswindow then 'w'
                                                when proisagg then 'a'
                                                else 'f'
                                           end  as kind,
                         provolatile as volatile_kind,
                         proisstrict as is_strict,
                         prosecdef as is_security_definer,
                         proconfig as configuration_parameters,
                         procost as cost,
                         pg_catalog.pg_get_userbyid(proowner) as "owner",
                         prorows as rows ,
                         proleakproof as is_leakproof  /* ,
                         proparallel as concurrency_kind */
                  from pg_catalog.pg_proc
                  where pronamespace = ?::oid
                    and not /* (prokind = 'a') */proisagg 
                    and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid) )
select *
from routines natural join languages
-- ] --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913881] results received
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913881] finished - execution time: 4 ms, fetching time: 36 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913882] 
with procedures as (
  select P.oid as function_id,
         pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as function_name,
         P.prorettype as return_type
  from pg_catalog.pg_proc P
  join pg_catalog.pg_namespace N
    on P.pronamespace = N.oid
),
operators as (
  select O.oid as operator_id,
         pg_catalog.quote_ident(N.nspname) || '.' || O.oprname as operator_name
  from pg_catalog.pg_operator O
  join pg_catalog.pg_namespace N
    on O.oprnamespace = N.oid
)
select P.oid as aggregate_id,
       P.xmin as state_number,
       P.proname as aggregate_name,
       P.proargnames as arg_names,
       P.proargmodes as arg_modes,
       P.proargtypes::int[] as in_arg_types,
       P.proallargtypes::int[] as all_arg_types,
       A.aggtransfn::oid as transition_function_id,
       PT.function_name::text as transition_function_name,
       A.aggtranstype as transition_type,
       A.aggfinalfn::oid as final_function_id,
       case when A.aggfinalfn::oid = 0 then null else PF.function_name end as final_function_name,
       case when A.aggfinalfn::oid = 0 then 0 else PF.return_type end as final_return_type,
       A.agginitval as initial_value,
       A.aggsortop as sort_operator_id,
       case when A.aggsortop = 0 then null else O.operator_name end as sort_operator_name,
       pg_catalog.pg_get_userbyid(P.proowner) as "owner"
       ,
       A.aggfinalextra as final_extra,
       A.aggtransspace as state_size,
       A.aggmtransfn::oid as moving_transition_id,
       case when A.aggmtransfn::oid = 0 then null else FTP.function_name end as moving_transition_name,
       A.aggminvtransfn::oid as inverse_transition_id,
       case when A.aggminvtransfn::oid = 0 then null else ITP.function_name end as inverse_transition_name,
       A.aggmtranstype::oid as moving_state_type,
       A.aggmtransspace as moving_state_size,
       A.aggmfinalfn::oid as moving_final_id,
       case when A.aggmfinalfn::oid = 0 then null else FFP.function_name end as moving_final_name,
       A.aggmfinalextra as moving_final_extra,
       A.aggminitval as moving_initial_value,
       A.aggkind as aggregate_kind,
       A.aggnumdirectargs as direct_args
       
       /* ,
       A.aggcombinefn::oid as combine_function_id,
       case when A.aggcombinefn::oid = 0 then null else CP.function_name end as combine_function_name,
       A.aggserialfn::oid as serialization_function_id,
       case when A.aggserialfn::oid = 0 then null else SP.function_name end as serialization_function_name,
       A.aggdeserialfn::oid as deserialization_function_id,
       case when A.aggdeserialfn::oid = 0 then null else DP.function_name end as deserialization_function_name,
       P.proparallel as concurrency_kind
       */
from pg_catalog.pg_aggregate A
join pg_catalog.pg_proc P
  on A.aggfnoid = P.oid
join procedures PT
  on A.aggtransfn::oid = PT.function_id
left outer join procedures PF
  on A.aggfinalfn::oid = PF.function_id
left outer join operators O
  on A.aggsortop = O.operator_id
left outer join procedures FTP
  on A.aggmtransfn = FTP.function_id
left outer join procedures ITP
  on A.aggminvtransfn = ITP.function_id
left outer join procedures FFP
  on A.aggmfinalfn = FFP.function_id

/* left outer join procedures CP
  on A.aggcombinefn = CP.function_id
left outer join procedures SP
  on A.aggserialfn = SP.function_id
left outer join procedures DP
  on A.aggdeserialfn = DP.function_id
*/
where P.pronamespace = ?::oid
and (pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(?::varchar::xid))
order by P.oid
-- ] --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913882] results received
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913882] finished - execution time: 12 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913883] 
select O.oid as op_id,
       O.xmin as state_number,
       oprname as op_name,
       oprkind as op_kind,
       oprleft as arg_left_type_id,
       oprright as arg_right_type_id,
       oprresult as arg_result_type_id,
       oprcode as func_main,
       pg_catalog.pg_get_userbyid(O.oprowner) as "owner"
from pg_catalog.pg_operator O
where oprnamespace = ?::oid
  and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913883] results received
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913883] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913884] 
select oid as id,
       xmin as state_number,
       collname as name,
       collcollate as lc_collate,
       collctype as lc_ctype,
       pg_catalog.pg_get_userbyid(collowner) as "owner"
from pg_catalog.pg_collation
where collnamespace = ?::oid
  and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913884] results received
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913884] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913885] 
with types      as (select distinct
                           T.oid as type_id,
                           C.oid as class_id
                    from pg_catalog.pg_type T
                    join pg_catalog.pg_class C
                      on T.typrelid = C.oid
                    join pg_catalog.pg_attribute A
                      on C.oid = A.attrelid
                    where T.typnamespace = ?::oid
                      and pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid)
                      and T.typtype = 'c'::"char"
                      and C.relkind = 'c'::"char"),
     attributes as (select A.attrelid as class_id,
                           A.attnum   as att_position,
                           A.attname  as att_name,
                           pg_catalog.format_type(A.atttypid, A.atttypmod) as att_type,
                           A.attisdropped as att_dropped
                    from pg_catalog.pg_attribute A)
select type_id, att_position, att_name, att_type, att_dropped
from types natural join attributes
order by type_id::bigint, att_position
-- ] --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913885] results received
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913885] finished - execution time: 4 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913886] 
with types as (select distinct T.oid as type_id
               from pg_catalog.pg_type T
               join pg_catalog.pg_enum E
                 on T.oid = E.enumtypid
               where T.typnamespace = ?::oid
                 and T.typtype = 'e'::"char"
               and pg_catalog.age(E.xmin) <= pg_catalog.age(?::varchar::xid)
               )
select T.type_id as enum_id,
       pg_catalog.array_agg(E.enumlabel::varchar order by E.enumsortorder ) as enum_labels
from types T
join pg_catalog.pg_enum E
  on T.type_id = E.enumtypid
group by T.type_id
-- ] --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913886] results received
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913886] finished - execution time: 5 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913887] 
with T as ( select distinct T.oid as table_id, T.relname as table_name
            from pg_catalog.pg_class T,
                 pg_catalog.pg_attribute A
            where T.relnamespace = ?::oid
              and T.relkind in ('r', 'm', 'v', 'f', 'p')
              and (pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid))
              and A.attrelid = T.oid )
select T.table_id,
       C.attnum as column_position,
       C.attname as column_name,
       C.xmin as column_state_number,
       C.atttypmod as type_mod,
       C.attndims as dimensions_number,
       pg_catalog.format_type(C.atttypid, C.atttypmod) as type_spec,
       C.atttypid as type_id,
       C.attnotnull as mandatory,
       /* pg_catalog.pg_get_expr(D.adbin, 'pg_catalog.pg_attrdef'::regclass::oid) */D.adsrc  as column_default_expression,
       not C.attislocal as column_is_inherited,
       C.attfdwoptions as options,
       C.attisdropped as column_is_dropped,
       /* C.attidentity */null  as identity_kind
from T
  inner join pg_catalog.pg_attribute C on T.table_id = C.attrelid
  left outer join pg_catalog.pg_attrdef D on (C.attrelid, C.attnum) = (D.adrelid, D.adnum)
where attnum > 0
order by table_id, attnum
-- ] --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913887] results received
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913887] finished - execution time: 10 ms, fetching time: 7 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913888] 
with tab as ( select relnamespace as schema_id,
                     oid as table_id,
                     relkind as table_kind
              from pg_catalog.pg_class
              where relnamespace = ?::oid
                and relkind in ('r','m','v','p')),
    ind_head as ( select indrelid as table_id,
                         indexrelid as index_id,
                         indisunique as is_unique,
                         indisprimary as is_primary,
                         indkey as column_positions,
                         indclass as column_operators,
                         indoption as column_options,
                         pg_catalog.pg_get_expr(indpred, indrelid) as condition,
                         case when indexprs is not null
                             then pg_catalog.array_to_string(array(
                                      select case when indkey[k] = 0
                                             then chr(27) || pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
                                             else pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
                                             end
                                      from pg_catalog.generate_subscripts(indkey, 1) as k
                                      order by k),
                                  chr(28))
                             else null end as expressions
                  from pg_catalog.pg_index ),
    ind_stor as ( select cls.relnamespace as schema_id,
                         cls.oid as index_id,
                         cls.xmin as state_number,
                         cls.relname as index_name,
                         /* pg_catalog.pg_indexam_has_property(cls.relam, 'can_order') */am.amcanorder  as can_order
                  from pg_catalog.pg_class cls
                    /* */join pg_catalog.pg_am am on (cls.relam = am.oid)
                  where cls.relkind = 'i'
                    and pg_catalog.age(cls.xmin) <= pg_catalog.age(?::varchar::xid) )
select table_id, table_kind,
       index_name, index_id, state_number,
       is_unique, is_primary,
       column_positions, column_operators, column_options,
       condition, expressions, can_order
from tab natural join ind_head natural join ind_stor
-- ] --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913888] results received
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913888] finished - execution time: 35 ms, fetching time: 7 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913889] 
with T as ( select oid as table_id,
                   relkind as table_kind,
                   xmin as table_state_id
            from pg_catalog.pg_class
            where relkind in ('r','v','f','p')
              and relnamespace = ?::oid ),
     C as ( select conrelid as table_id,
                   oid::bigint as con_id,
                   xmin as con_state_id,
                   conname as con_name,
                   contype as con_kind,
                   conkey as con_columns,
                   conindid as index_id,
                   confrelid as ref_table_id,
                   confkey as ref_columns,
                   condeferrable as is_deferrable,
                   condeferred as is_init_deferred,
                   confupdtype as on_update,
                   confdeltype as on_delete,
                   /* conbin */consrc 
            from pg_catalog.pg_constraint
            where contype in ('p','u','f','c')
              and connamespace = ?::oid )
select table_id,
       table_kind,
       con_id,
       con_state_id::varchar::bigint as con_state_id,
       con_name,
       con_kind,
       con_columns,
       index_id,
       ref_table_id,
       is_deferrable,
       is_init_deferred,
       on_update,
       on_delete,
       /* pg_catalog.pg_get_expr(conbin, table_id) */consrc  as con_expression,
       ref_columns
from T natural join C
where pg_catalog.age(table_state_id) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(con_state_id) <= pg_catalog.age(?::varchar::xid)
order by pg_catalog.strpos('pufc', con_kind)
-- ] --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913889] results received
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913889] finished - execution time: 42 ms, fetching time: 7 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913890] 
select R.ev_class as table_id,
       R.oid as rule_id,
       R.xmin as rule_state_number,
       R.rulename as rule_name,
       pg_catalog.translate(ev_type,'1234','SUID') as rule_event_code,
       R.ev_enabled as rule_fire_mode,
       R.is_instead as rule_is_instead
from pg_catalog.pg_rewrite R
where R.ev_class in (select oid
                     from pg_catalog.pg_class
                     where relnamespace = ?::oid)
  and pg_catalog.age(R.xmin) <= pg_catalog.age(?::varchar::xid)
  and R.rulename != '_RETURN'::name
order by R.ev_class::bigint, ev_type
-- ] --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913890] results received
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913890] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913891] 
select T.tgrelid as table_id,
       T.oid as trigger_id,
       T.xmin as trigger_state_number,
       T.tgname as trigger_name,
       T.tgfoid as function_id,
       T.tgtype & 31 as bits,
       T.tgdeferrable as is_deferrable,
       T.tginitdeferred as is_init_deferred,
       T.tgenabled as trigger_fire_mode
from pg_catalog.pg_trigger T
where T.tgrelid in (select oid
                    from pg_catalog.pg_class
                    where relnamespace = ?::oid)
  and pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid)
  and not T.tgisinternal
-- ] --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913891] results received
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913891] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913892] 
select D.objoid id, C.relkind as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select T.oid id, 'T' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, pg_catalog.translate(C.contype, 'pufc', 'kkxz') as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, 't' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, 'R' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, 'F' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, 'O' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, 'C' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)

-- ] --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913892] results received
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913892] finished - execution time: 7 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913893] 
select distinct
       T.relkind as view_kind,
       T.oid as view_id,
       pg_catalog.pg_get_viewdef(T.oid) as source_text
from pg_catalog.pg_class T
  join pg_catalog.pg_namespace N on T.relnamespace = N.oid
  left outer join pg_catalog.pg_attribute A on (A.attrelid = T.oid)
where N.oid = ?::oid
  and T.relkind in ('m','v')
  and (pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid))
-- ] --------------------------------------------------
-- 2020-05-21 14:05:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913893] results received
-- 2020-05-21 14:05:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913893] finished - execution time: 503 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913894] 
with A as ( select oid as table_id, pg_catalog.upper(relkind) as table_kind
            from pg_catalog.pg_class
            where relnamespace = ?::oid
              and relkind in ('r', 'm', 'v', 'f', 'p') )
select table_kind,
       table_id,
       R.oid as rule_id,
       pg_catalog.pg_get_ruledef(R.oid) as source_text
from A join pg_catalog.pg_rewrite R
        on A.table_id = R.ev_class
where R.rulename != '_RETURN'::name
  and pg_catalog.age(R.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-21 14:05:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913894] results received
-- 2020-05-21 14:05:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913894] finished - execution time: 9 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913895] 
with system_languages as ( select oid as lang
                           from pg_catalog.pg_language
                           where lanname in ('c','internal') )
select oid as id,
       pg_catalog.pg_get_function_arguments(oid) as arguments_def,
       pg_catalog.pg_get_function_result(oid) as result_def,
       prosrc as source_text
from pg_catalog.pg_proc
where pronamespace = ?::oid
  and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)
  and not /* (prokind = 'a') */proisagg 
  and prolang not in (select lang from system_languages)
  and prosrc is not null
-- ] --------------------------------------------------
-- 2020-05-21 14:05:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913895] results received
-- 2020-05-21 14:05:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913895] finished - execution time: 6 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913896] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-05-21 14:05:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913896] results received
-- 2020-05-21 14:05:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913896] finished - execution time: 5 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913897] 
with U as (select usesysid from pg_catalog.pg_user where usename = current_user),
          T as (
                select oid as sequence_id,
                       relname as sequence_name,
                       pg_catalog.pg_get_userbyid(relowner) as "owner",
                       case when relowner = (select usesysid from U) then trim(both '()' from pg_catalog.pg_sequence_parameters(oid)::varchar)
                       else null::varchar
                       end as sequence_params,
                       
                       xmin as sequence_state_number
                       from pg_catalog.pg_class
                         where relnamespace = ?::oid
                         and relkind = 'S'
                         and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)
                )
select sequence_id,
       sequence_name,
       pg_catalog.split_part(sequence_params, ',', 1)::bigint as next_value,
       pg_catalog.split_part(sequence_params, ',', 2)::bigint as min_value,
       pg_catalog.split_part(sequence_params, ',', 3)::bigint as max_value,
       pg_catalog.split_part(sequence_params, ',', 4)::bigint as inc_value,
       pg_catalog.lower(pg_catalog.split_part(sequence_params, ',', 5)) LIKE '%t%' as cycle_option,
       
       sequence_state_number,
       "owner"
from T
-- ] --------------------------------------------------
-- 2020-05-21 14:05:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913897] results received
-- 2020-05-21 14:05:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913897] finished - execution time: 11 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913898] 
select T.oid as type_id,
       T.xmin as type_state_number,
       T.typname as type_name,
       T.typtype as type_sub_kind,
       T.typcategory as type_category,
       T.typrelid as class_id,
       T.typbasetype as base_type_id,
       case when T.typtype in ('c','e') then null
            else pg_catalog.format_type(T.typbasetype, T.typtypmod) end as type_def,
       T.typdefault as default_expression,
       T.typnotnull as mandatory,
       pg_catalog.pg_get_userbyid(T.typowner) as "owner"
from pg_catalog.pg_type T
         left outer join pg_catalog.pg_class C
             on T.typrelid = C.oid
where T.typnamespace = ?::oid
  and pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid)
  and (T.typtype in ('d','e') or C.relkind = 'c'::"char" or T.typtype = 'b' and (T.typelem = 0 OR T.typcategory <> 'A'))
order by 1
-- ] --------------------------------------------------
-- 2020-05-21 14:05:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913898] results received
-- 2020-05-21 14:05:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913898] finished - execution time: 3 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913899] 
select T.relkind as table_kind,
       T.relname as table_name,
       T.oid as table_id,
       T.xmin as table_state_number,
       /* false */T.relhasoids  as table_with_oids,
       T.relnamespace as tablespace_id,
       T.reloptions as options,
       (select pg_catalog.array_agg(inhparent)::varchar from (select inhparent::bigint from pg_catalog.pg_inherits where T.oid = inhrelid order by inhseqno) as bts) as ancestors,
       (select pg_catalog.array_agg(inhrelid)::varchar from (select inhrelid::bigint from pg_catalog.pg_inherits where T.oid = inhparent order by inhrelid) as its) as successors,
       /* T.relispartition */false  as is_partition,
       /* pg_catalog.pg_get_partkeydef(T.oid) */null  as partition_key,
       /* pg_catalog.pg_get_expr(T.relpartbound, T.oid) */null  as partition_expression,
       pg_catalog.pg_get_userbyid(T.relowner) as "owner"
from pg_catalog.pg_class T
where relnamespace = ?::oid
  and relkind in ('r', 'm', 'v', 'f', 'p')
  and pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid)
order by table_kind, table_id
-- ] --------------------------------------------------
-- 2020-05-21 14:05:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913899] results received
-- 2020-05-21 14:05:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913899] finished - execution time: 4 ms, fetching time: 8 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913900] 
select ft.ftrelid as table_id,
       srv.srvname as table_server,
       ft.ftoptions as table_options,
       pg_catalog.pg_get_userbyid(cls.relowner) as "owner"
from pg_catalog.pg_foreign_table ft
     left outer join pg_catalog.pg_foreign_server srv on ft.ftserver = srv.oid
     join pg_catalog.pg_class cls on ft.ftrelid = cls.oid
where cls.relnamespace = ?::oid
  and pg_catalog.age(ft.xmin) <= pg_catalog.age(?::varchar::xid)
order by table_id
-- ] --------------------------------------------------
-- 2020-05-21 14:05:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913900] results received
-- 2020-05-21 14:05:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913900] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913901] 
with schema_procs as (select prorettype, proargtypes, proallargtypes
                      from pg_catalog.pg_proc
                      where pronamespace = ?::oid
                        and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)  ),
     schema_opers as (select oprleft, oprright, oprresult
                      from pg_catalog.pg_operator
                      where oprnamespace = ?::oid
                        and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)  ),
     schema_aggregates as (select A.aggtranstype , A.aggmtranstype 
                           from pg_catalog.pg_aggregate A
                           join pg_catalog.pg_proc P
                             on A.aggfnoid = P.oid
                           where P.pronamespace = ?::oid
                           and (pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(?::varchar::xid)) ),
     schema_arg_types as ( select prorettype as type_id
                           from schema_procs
                           union
                           select distinct unnest(proargtypes) as type_id
                           from schema_procs
                           union
                           select distinct unnest(proallargtypes) as type_id
                           from schema_procs
                           union
                           select oprleft as type_id
                           from schema_opers
                           where oprleft is not null
                           union
                           select oprright as type_id
                           from schema_opers
                           where oprright is not null
                           union
                           select oprresult as type_id
                           from schema_opers
                           where oprresult is not null
                           union
                           select aggtranstype::oid as type_id
                           from schema_aggregates
                           union
                           select aggmtranstype::oid as type_id
                           from schema_aggregates
                           
                           )
select type_id, pg_catalog.format_type(type_id, null) as type_spec
from schema_arg_types
where type_id <> 0
-- ] --------------------------------------------------
-- 2020-05-21 14:05:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913901] results received
-- 2020-05-21 14:05:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913901] finished - execution time: 15 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913902] 
with languages as (select oid as lang_oid, lanname as lang
                   from pg_catalog.pg_language),
     routines as (select proname as r_name,
                         prolang as lang_oid,
                         oid as r_id,
                         xmin as r_state_number,
                         proargnames as arg_names,
                         proargmodes as arg_modes,
                         proargtypes::int[] as in_arg_types,
                         proallargtypes::int[] as all_arg_types,
                         pg_catalog.pg_get_expr(proargdefaults, 0) as arg_defaults,
                         provariadic as arg_variadic_id,
                         prorettype as ret_type_id,
                         proretset as ret_set,
                         /* prokind */case when proiswindow then 'w'
                                                when proisagg then 'a'
                                                else 'f'
                                           end  as kind,
                         provolatile as volatile_kind,
                         proisstrict as is_strict,
                         prosecdef as is_security_definer,
                         proconfig as configuration_parameters,
                         procost as cost,
                         pg_catalog.pg_get_userbyid(proowner) as "owner",
                         prorows as rows ,
                         proleakproof as is_leakproof  /* ,
                         proparallel as concurrency_kind */
                  from pg_catalog.pg_proc
                  where pronamespace = ?::oid
                    and not /* (prokind = 'a') */proisagg 
                    and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid) )
select *
from routines natural join languages
-- ] --------------------------------------------------
-- 2020-05-21 14:05:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913902] results received
-- 2020-05-21 14:05:49 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913902] finished - execution time: 28 ms, fetching time: 681 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:49 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913903] 
with procedures as (
  select P.oid as function_id,
         pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as function_name,
         P.prorettype as return_type
  from pg_catalog.pg_proc P
  join pg_catalog.pg_namespace N
    on P.pronamespace = N.oid
),
operators as (
  select O.oid as operator_id,
         pg_catalog.quote_ident(N.nspname) || '.' || O.oprname as operator_name
  from pg_catalog.pg_operator O
  join pg_catalog.pg_namespace N
    on O.oprnamespace = N.oid
)
select P.oid as aggregate_id,
       P.xmin as state_number,
       P.proname as aggregate_name,
       P.proargnames as arg_names,
       P.proargmodes as arg_modes,
       P.proargtypes::int[] as in_arg_types,
       P.proallargtypes::int[] as all_arg_types,
       A.aggtransfn::oid as transition_function_id,
       PT.function_name::text as transition_function_name,
       A.aggtranstype as transition_type,
       A.aggfinalfn::oid as final_function_id,
       case when A.aggfinalfn::oid = 0 then null else PF.function_name end as final_function_name,
       case when A.aggfinalfn::oid = 0 then 0 else PF.return_type end as final_return_type,
       A.agginitval as initial_value,
       A.aggsortop as sort_operator_id,
       case when A.aggsortop = 0 then null else O.operator_name end as sort_operator_name,
       pg_catalog.pg_get_userbyid(P.proowner) as "owner"
       ,
       A.aggfinalextra as final_extra,
       A.aggtransspace as state_size,
       A.aggmtransfn::oid as moving_transition_id,
       case when A.aggmtransfn::oid = 0 then null else FTP.function_name end as moving_transition_name,
       A.aggminvtransfn::oid as inverse_transition_id,
       case when A.aggminvtransfn::oid = 0 then null else ITP.function_name end as inverse_transition_name,
       A.aggmtranstype::oid as moving_state_type,
       A.aggmtransspace as moving_state_size,
       A.aggmfinalfn::oid as moving_final_id,
       case when A.aggmfinalfn::oid = 0 then null else FFP.function_name end as moving_final_name,
       A.aggmfinalextra as moving_final_extra,
       A.aggminitval as moving_initial_value,
       A.aggkind as aggregate_kind,
       A.aggnumdirectargs as direct_args
       
       /* ,
       A.aggcombinefn::oid as combine_function_id,
       case when A.aggcombinefn::oid = 0 then null else CP.function_name end as combine_function_name,
       A.aggserialfn::oid as serialization_function_id,
       case when A.aggserialfn::oid = 0 then null else SP.function_name end as serialization_function_name,
       A.aggdeserialfn::oid as deserialization_function_id,
       case when A.aggdeserialfn::oid = 0 then null else DP.function_name end as deserialization_function_name,
       P.proparallel as concurrency_kind
       */
from pg_catalog.pg_aggregate A
join pg_catalog.pg_proc P
  on A.aggfnoid = P.oid
join procedures PT
  on A.aggtransfn::oid = PT.function_id
left outer join procedures PF
  on A.aggfinalfn::oid = PF.function_id
left outer join operators O
  on A.aggsortop = O.operator_id
left outer join procedures FTP
  on A.aggmtransfn = FTP.function_id
left outer join procedures ITP
  on A.aggminvtransfn = ITP.function_id
left outer join procedures FFP
  on A.aggmfinalfn = FFP.function_id

/* left outer join procedures CP
  on A.aggcombinefn = CP.function_id
left outer join procedures SP
  on A.aggserialfn = SP.function_id
left outer join procedures DP
  on A.aggdeserialfn = DP.function_id
*/
where P.pronamespace = ?::oid
and (pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(?::varchar::xid))
order by P.oid
-- ] --------------------------------------------------
-- 2020-05-21 14:05:49 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913903] results received
-- 2020-05-21 14:05:49 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913903] finished - execution time: 35 ms, fetching time: 7 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:49 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913904] 
select O.oid as op_id,
       O.xmin as state_number,
       oprname as op_name,
       oprkind as op_kind,
       oprleft as arg_left_type_id,
       oprright as arg_right_type_id,
       oprresult as arg_result_type_id,
       oprcode as func_main,
       pg_catalog.pg_get_userbyid(O.oprowner) as "owner"
from pg_catalog.pg_operator O
where oprnamespace = ?::oid
  and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-21 14:05:49 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913904] results received
-- 2020-05-21 14:05:49 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913904] finished - execution time: 37 ms, fetching time: 23 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:49 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913905] 
select oid as id,
       xmin as state_number,
       collname as name,
       collcollate as lc_collate,
       collctype as lc_ctype,
       pg_catalog.pg_get_userbyid(collowner) as "owner"
from pg_catalog.pg_collation
where collnamespace = ?::oid
  and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-21 14:05:49 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913905] results received
-- 2020-05-21 14:05:49 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913905] finished - execution time: 2 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:49 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913906] 
with types      as (select distinct
                           T.oid as type_id,
                           C.oid as class_id
                    from pg_catalog.pg_type T
                    join pg_catalog.pg_class C
                      on T.typrelid = C.oid
                    join pg_catalog.pg_attribute A
                      on C.oid = A.attrelid
                    where T.typnamespace = ?::oid
                      and pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid)
                      and T.typtype = 'c'::"char"
                      and C.relkind = 'c'::"char"),
     attributes as (select A.attrelid as class_id,
                           A.attnum   as att_position,
                           A.attname  as att_name,
                           pg_catalog.format_type(A.atttypid, A.atttypmod) as att_type,
                           A.attisdropped as att_dropped
                    from pg_catalog.pg_attribute A)
select type_id, att_position, att_name, att_type, att_dropped
from types natural join attributes
order by type_id::bigint, att_position
-- ] --------------------------------------------------
-- 2020-05-21 14:05:49 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913906] results received
-- 2020-05-21 14:05:49 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913906] finished - execution time: 6 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:49 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913907] 
with types as (select distinct T.oid as type_id
               from pg_catalog.pg_type T
               join pg_catalog.pg_enum E
                 on T.oid = E.enumtypid
               where T.typnamespace = ?::oid
                 and T.typtype = 'e'::"char"
               and pg_catalog.age(E.xmin) <= pg_catalog.age(?::varchar::xid)
               )
select T.type_id as enum_id,
       pg_catalog.array_agg(E.enumlabel::varchar order by E.enumsortorder ) as enum_labels
from types T
join pg_catalog.pg_enum E
  on T.type_id = E.enumtypid
group by T.type_id
-- ] --------------------------------------------------
-- 2020-05-21 14:05:49 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913907] results received
-- 2020-05-21 14:05:49 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913907] finished - execution time: 3 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:49 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913908] 
with T as ( select distinct T.oid as table_id, T.relname as table_name
            from pg_catalog.pg_class T,
                 pg_catalog.pg_attribute A
            where T.relnamespace = ?::oid
              and T.relkind in ('r', 'm', 'v', 'f', 'p')
              and (pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid))
              and A.attrelid = T.oid )
select T.table_id,
       C.attnum as column_position,
       C.attname as column_name,
       C.xmin as column_state_number,
       C.atttypmod as type_mod,
       C.attndims as dimensions_number,
       pg_catalog.format_type(C.atttypid, C.atttypmod) as type_spec,
       C.atttypid as type_id,
       C.attnotnull as mandatory,
       /* pg_catalog.pg_get_expr(D.adbin, 'pg_catalog.pg_attrdef'::regclass::oid) */D.adsrc  as column_default_expression,
       not C.attislocal as column_is_inherited,
       C.attfdwoptions as options,
       C.attisdropped as column_is_dropped,
       /* C.attidentity */null  as identity_kind
from T
  inner join pg_catalog.pg_attribute C on T.table_id = C.attrelid
  left outer join pg_catalog.pg_attrdef D on (C.attrelid, C.attnum) = (D.adrelid, D.adnum)
where attnum > 0
order by table_id, attnum
-- ] --------------------------------------------------
-- 2020-05-21 14:05:49 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913908] results received
-- 2020-05-21 14:05:49 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913908] finished - execution time: 7 ms, fetching time: 19 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:49 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913909] 
with tab as ( select relnamespace as schema_id,
                     oid as table_id,
                     relkind as table_kind
              from pg_catalog.pg_class
              where relnamespace = ?::oid
                and relkind in ('r','m','v','p')),
    ind_head as ( select indrelid as table_id,
                         indexrelid as index_id,
                         indisunique as is_unique,
                         indisprimary as is_primary,
                         indkey as column_positions,
                         indclass as column_operators,
                         indoption as column_options,
                         pg_catalog.pg_get_expr(indpred, indrelid) as condition,
                         case when indexprs is not null
                             then pg_catalog.array_to_string(array(
                                      select case when indkey[k] = 0
                                             then chr(27) || pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
                                             else pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
                                             end
                                      from pg_catalog.generate_subscripts(indkey, 1) as k
                                      order by k),
                                  chr(28))
                             else null end as expressions
                  from pg_catalog.pg_index ),
    ind_stor as ( select cls.relnamespace as schema_id,
                         cls.oid as index_id,
                         cls.xmin as state_number,
                         cls.relname as index_name,
                         /* pg_catalog.pg_indexam_has_property(cls.relam, 'can_order') */am.amcanorder  as can_order
                  from pg_catalog.pg_class cls
                    /* */join pg_catalog.pg_am am on (cls.relam = am.oid)
                  where cls.relkind = 'i'
                    and pg_catalog.age(cls.xmin) <= pg_catalog.age(?::varchar::xid) )
select table_id, table_kind,
       index_name, index_id, state_number,
       is_unique, is_primary,
       column_positions, column_operators, column_options,
       condition, expressions, can_order
from tab natural join ind_head natural join ind_stor
-- ] --------------------------------------------------
-- 2020-05-21 14:05:49 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913909] results received
-- 2020-05-21 14:05:49 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913909] finished - execution time: 62 ms, fetching time: 37 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:49 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913910] 
with T as ( select oid as table_id,
                   relkind as table_kind,
                   xmin as table_state_id
            from pg_catalog.pg_class
            where relkind in ('r','v','f','p')
              and relnamespace = ?::oid ),
     C as ( select conrelid as table_id,
                   oid::bigint as con_id,
                   xmin as con_state_id,
                   conname as con_name,
                   contype as con_kind,
                   conkey as con_columns,
                   conindid as index_id,
                   confrelid as ref_table_id,
                   confkey as ref_columns,
                   condeferrable as is_deferrable,
                   condeferred as is_init_deferred,
                   confupdtype as on_update,
                   confdeltype as on_delete,
                   /* conbin */consrc 
            from pg_catalog.pg_constraint
            where contype in ('p','u','f','c')
              and connamespace = ?::oid )
select table_id,
       table_kind,
       con_id,
       con_state_id::varchar::bigint as con_state_id,
       con_name,
       con_kind,
       con_columns,
       index_id,
       ref_table_id,
       is_deferrable,
       is_init_deferred,
       on_update,
       on_delete,
       /* pg_catalog.pg_get_expr(conbin, table_id) */consrc  as con_expression,
       ref_columns
from T natural join C
where pg_catalog.age(table_state_id) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(con_state_id) <= pg_catalog.age(?::varchar::xid)
order by pg_catalog.strpos('pufc', con_kind)
-- ] --------------------------------------------------
-- 2020-05-21 14:05:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913910] results received
-- 2020-05-21 14:05:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913910] finished - execution time: 77 ms, fetching time: 32 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913911] 
select R.ev_class as table_id,
       R.oid as rule_id,
       R.xmin as rule_state_number,
       R.rulename as rule_name,
       pg_catalog.translate(ev_type,'1234','SUID') as rule_event_code,
       R.ev_enabled as rule_fire_mode,
       R.is_instead as rule_is_instead
from pg_catalog.pg_rewrite R
where R.ev_class in (select oid
                     from pg_catalog.pg_class
                     where relnamespace = ?::oid)
  and pg_catalog.age(R.xmin) <= pg_catalog.age(?::varchar::xid)
  and R.rulename != '_RETURN'::name
order by R.ev_class::bigint, ev_type
-- ] --------------------------------------------------
-- 2020-05-21 14:05:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913911] results received
-- 2020-05-21 14:05:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913911] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913912] 
select T.tgrelid as table_id,
       T.oid as trigger_id,
       T.xmin as trigger_state_number,
       T.tgname as trigger_name,
       T.tgfoid as function_id,
       T.tgtype & 31 as bits,
       T.tgdeferrable as is_deferrable,
       T.tginitdeferred as is_init_deferred,
       T.tgenabled as trigger_fire_mode
from pg_catalog.pg_trigger T
where T.tgrelid in (select oid
                    from pg_catalog.pg_class
                    where relnamespace = ?::oid)
  and pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid)
  and not T.tgisinternal
-- ] --------------------------------------------------
-- 2020-05-21 14:05:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913912] results received
-- 2020-05-21 14:05:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913912] finished - execution time: 7 ms, fetching time: 17 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913913] 
select D.objoid id, C.relkind as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select T.oid id, 'T' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, pg_catalog.translate(C.contype, 'pufc', 'kkxz') as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, 't' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, 'R' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, 'F' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, 'O' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, 'C' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)

-- ] --------------------------------------------------
-- 2020-05-21 14:05:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913913] results received
-- 2020-05-21 14:05:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913913] finished - execution time: 22 ms, fetching time: 17 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913914] 
select distinct
       T.relkind as view_kind,
       T.oid as view_id,
       pg_catalog.pg_get_viewdef(T.oid) as source_text
from pg_catalog.pg_class T
  join pg_catalog.pg_namespace N on T.relnamespace = N.oid
  left outer join pg_catalog.pg_attribute A on (A.attrelid = T.oid)
where N.oid = ?::oid
  and T.relkind in ('m','v')
  and (pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid))
-- ] --------------------------------------------------
-- 2020-05-21 14:05:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913914] results received
-- 2020-05-21 14:05:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913914] finished - execution time: 357 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913915] 
with A as ( select oid as table_id, pg_catalog.upper(relkind) as table_kind
            from pg_catalog.pg_class
            where relnamespace = ?::oid
              and relkind in ('r', 'm', 'v', 'f', 'p') )
select table_kind,
       table_id,
       R.oid as rule_id,
       pg_catalog.pg_get_ruledef(R.oid) as source_text
from A join pg_catalog.pg_rewrite R
        on A.table_id = R.ev_class
where R.rulename != '_RETURN'::name
  and pg_catalog.age(R.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-21 14:05:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913915] results received
-- 2020-05-21 14:05:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913915] finished - execution time: 3 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913916] 
with system_languages as ( select oid as lang
                           from pg_catalog.pg_language
                           where lanname in ('c','internal') )
select oid as id,
       pg_catalog.pg_get_function_arguments(oid) as arguments_def,
       pg_catalog.pg_get_function_result(oid) as result_def,
       prosrc as source_text
from pg_catalog.pg_proc
where pronamespace = ?::oid
  and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)
  and not /* (prokind = 'a') */proisagg 
  and prolang not in (select lang from system_languages)
  and prosrc is not null
-- ] --------------------------------------------------
-- 2020-05-21 14:05:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913916] results received
-- 2020-05-21 14:05:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913916] finished - execution time: 4 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:05:52 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913917] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-05-21 14:05:52 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913917] results received
-- 2020-05-21 14:05:52 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 594094434] [statement id: 1356913917] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- 2020-05-21 14:05:52 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 594094434] disconnected
-- 2020-05-21 14:12:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 594094435] connected
-- [ --------------------------------------------------
-- 2020-05-21 14:12:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [quick documentation] [session id: 594094435] [statement id: 1356913918] 
set search_path = "public"
-- ] --------------------------------------------------
-- 2020-05-21 14:12:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [quick documentation] [session id: 594094435] [statement id: 1356913918] finished - execution time: 1 ms
-- [ --------------------------------------------------
-- 2020-05-21 14:12:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [quick documentation] [session id: 594094435] [statement id: 1356913919] 
SELECT CAST(reltuples as INT) as rows FROM pg_catalog.pg_class C
  LEFT JOIN pg_catalog.pg_namespace N ON (N.oid = C.relnamespace)
WHERE (relkind = 'r' OR relkind = 'v') AND nspname LIKE 'public' ESCAPE '#' AND relname LIKE 'base#_drg' ESCAPE '#'
-- ] --------------------------------------------------
-- 2020-05-21 14:12:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [quick documentation] [session id: 594094435] [statement id: 1356913919] results received
-- 2020-05-21 14:12:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [quick documentation] [session id: 594094435] [statement id: 1356913919] finished - execution time: 8 ms, fetching time: 9 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:12:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [quick documentation] [session id: 594094435] [statement id: 1356913920] 
SELECT CAST(reltuples as INT) as rows FROM pg_catalog.pg_class C
  LEFT JOIN pg_catalog.pg_namespace N ON (N.oid = C.relnamespace)
WHERE (relkind = 'r' OR relkind = 'v') AND nspname LIKE 'public' ESCAPE '#' AND relname LIKE 'base#_drg' ESCAPE '#'
-- ] --------------------------------------------------
-- 2020-05-21 14:12:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [quick documentation] [session id: 594094435] [statement id: 1356913920] results received
-- 2020-05-21 14:12:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [quick documentation] [session id: 594094435] [statement id: 1356913920] finished - execution time: 1 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:15:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [quick documentation] [session id: 594094435] [statement id: 1356913921] 
SELECT CAST(reltuples as INT) as rows FROM pg_catalog.pg_class C
  LEFT JOIN pg_catalog.pg_namespace N ON (N.oid = C.relnamespace)
WHERE (relkind = 'r' OR relkind = 'v') AND nspname LIKE 'public' ESCAPE '#' AND relname LIKE 'base#_drg' ESCAPE '#'
-- ] --------------------------------------------------
-- 2020-05-21 14:15:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [quick documentation] [session id: 594094435] [statement id: 1356913921] results received
-- 2020-05-21 14:15:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [quick documentation] [session id: 594094435] [statement id: 1356913921] finished - execution time: 2 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-21 14:15:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [quick documentation] [session id: 594094435] [statement id: 1356913922] 
SELECT CAST(reltuples as INT) as rows FROM pg_catalog.pg_class C
  LEFT JOIN pg_catalog.pg_namespace N ON (N.oid = C.relnamespace)
WHERE (relkind = 'r' OR relkind = 'v') AND nspname LIKE 'public' ESCAPE '#' AND relname LIKE 'base#_drg' ESCAPE '#'
-- ] --------------------------------------------------
-- 2020-05-21 14:15:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [quick documentation] [session id: 594094435] [statement id: 1356913922] results received
-- 2020-05-21 14:15:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [quick documentation] [session id: 594094435] [statement id: 1356913922] finished - execution time: 2 ms, fetching time: 6 ms, total result sets count: 1
-- 2020-05-21 14:17:30 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 594094435] disconnected
-- 2020-05-25 21:46:34 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 1095253610] connected
-- [ --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279796] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279796] results received
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279796] finished - execution time: 90 ms, fetching time: 29 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279797] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279797] results received
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279797] finished - execution time: 25 ms, fetching time: 9 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279798] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279798] results received
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279798] finished - execution time: 19 ms, fetching time: 25 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279799] 
select R.oid::bigint as role_id, rolname as role_name,
  rolsuper is_super, rolinherit is_inherit,
  rolcreaterole can_createrole, rolcreatedb can_createdb,
  rolcanlogin can_login, rolreplication /* false */ is_replication,
  rolconnlimit conn_limit, rolvaliduntil valid_until,
  /* rolbypassrls */false  bypass_rls, rolconfig config,
  D.description
from pg_catalog.pg_roles R
  left join pg_catalog.pg_shdescription D on D.objoid = R.oid
-- ] --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279799] results received
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279799] finished - execution time: 35 ms, fetching time: 9 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279800] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279800] results received
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279800] finished - execution time: 3 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279801] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279801] results received
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279801] finished - execution time: 4 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279802] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279802] results received
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279802] finished - execution time: 3 ms, fetching time: 8 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279803] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279803] results received
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279803] finished - execution time: 5 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279804] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279804] results received
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279804] finished - execution time: 3 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279805] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279805] results received
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279805] finished - execution time: 3 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279806] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279806] results received
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279806] finished - execution time: 16 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279807] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279807] results received
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279807] finished - execution time: 3 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279808] 
select usesuper
from pg_user
where usename = current_user
-- ] --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279808] results received
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279808] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279809] 
select distinct oid
from pg_catalog.pg_am
union
select distinct oid
from pg_catalog.pg_foreign_data_wrapper
union
select distinct oid
from pg_catalog.pg_foreign_server
union
select distinct oid
from pg_catalog.pg_extension

union
select distinct oid
from pg_catalog.pg_user_mapping

-- ] --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279809] results received
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279809] finished - execution time: 51 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279810] 
select D.objoid id
from pg_catalog.pg_description D
where D.classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
-- ] --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279810] results received
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279810] finished - execution time: 4 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279811] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279811] results received
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279811] finished - execution time: 4 ms, fetching time: 6 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279812] 
select A.oid as access_method_id,
       A.xmin as state_number,
       A.amname as access_method_name
       /* ,
       A.amhandler::oid as handler_id,
       pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as handler_name,
       A.amtype as access_method_type
       */
from pg_am A
  /* join pg_proc P on A.amhandler::oid = P.oid
  join pg_namespace N on P.pronamespace = N.oid
  */
where pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279812] results received
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279812] finished - execution time: 3 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279813] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279813] results received
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279813] finished - execution time: 3 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279814] 
select fdw.oid as id,
       fdw.xmin as state_number,
       fdw.fdwname as name,
       pr.proname as handler,
       nspc.nspname as handler_schema,
       pr2.proname as validator,
       nspc2.nspname as validator_schema,
       fdw.fdwoptions as options,
       pg_catalog.pg_get_userbyid(fdw.fdwowner) as "owner"
from pg_catalog.pg_foreign_data_wrapper fdw
     left outer join pg_catalog.pg_proc pr on fdw.fdwhandler = pr.oid
     left outer join pg_catalog.pg_namespace nspc on pr.pronamespace = nspc.oid
     left outer join pg_catalog.pg_proc pr2 on fdw.fdwvalidator = pr2.oid
     left outer join pg_catalog.pg_namespace nspc2 on pr2.pronamespace = nspc2.oid
  where pg_catalog.age(fdw.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279814] results received
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279814] finished - execution time: 5 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279815] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279815] results received
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279815] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279816] 
select srv.oid as id,
       srv.srvfdw as fdw_id,
       srv.xmin as state_number,
       srv.srvname as name,
       srv.srvtype as type,
       srv.srvversion as version,
       srv.srvoptions as options,
       pg_catalog.pg_get_userbyid(srv.srvowner) as "owner"
from pg_catalog.pg_foreign_server srv
  where pg_catalog.age(srv.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279816] results received
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279816] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279817] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279817] results received
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279817] finished - execution time: 3 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279818] 
select pg_extension.oid as id,
       pg_extension.xmin as state_number,
       extname as name,
       extversion as version,
       extnamespace as schema_id,
       nspname as schema_name,
       array(select target
             from pg_extension_update_paths(extname)
             where source = extversion and path is not null) as available_updates
from pg_catalog.pg_extension
  join pg_namespace on pg_extension.extnamespace = pg_namespace.oid
where pg_catalog.age(pg_extension.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279818] results received
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279818] finished - execution time: 4 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279819] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279819] results received
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279819] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279820] 
select D.objoid id, case
    when 'pg_catalog.pg_am'::regclass = classoid then 'A'
    when 'pg_catalog.pg_foreign_data_wrapper'::regclass = classoid then 'W'
    when 'pg_catalog.pg_foreign_server'::regclass = classoid then 'S'
    when 'pg_catalog.pg_extension'::regclass = classoid then 'E'
    
  end as kind,
  D.objsubid sub_id, D.description
from pg_catalog.pg_description D
where classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279820] results received
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279820] finished - execution time: 3 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279821] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279821] results received
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279821] finished - execution time: 3 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279822] 
select 'sequence' as dependent_kind,
       'table' as owner_kind,
       D.objid as dependent_id,
       D.refobjid as owner_id,
       D.refobjsubid as owner_subobject_id
from pg_depend D
  join pg_class C_SEQ on D.objid = C_SEQ.oid
  join pg_class C_TAB on D.refobjid = C_TAB.oid
where C_SEQ.relkind = 'S'
  and C_TAB.relkind = 'r'
  and D.refobjsubid <> 0
  and (D.deptype = 'a' or D.deptype = 'i')
-- ] --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279822] results received
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279822] finished - execution time: 27 ms, fetching time: 9 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:35 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279823] 
with saved_age as (select greatest(pg_catalog.age(?::varchar::xid), pg_catalog.age(?::varchar::xid)) as "value")
select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
(
  select X.last_tx as last_tx
  from (
    (
    select xmin as last_tx
      from pg_catalog.pg_type
      where typnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_class
      where relnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_proc
      where pronamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_operator
      where oprnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select A.xmin as last_tx
      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
      where K.relnamespace = ?::oid
      order by pg_catalog.age(A.xmin)
      limit 1
    )
    union all
    (
    select E.xmin as last_tx
      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
      where T.typnamespace = ?::oid
      order by pg_catalog.age(E.xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_constraint
      where connamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select CO.xmin as last_tx
      from pg_catalog.pg_collation CO
      where CO.collnamespace = ?::oid
      order by pg_catalog.age(CO.xmin)
      limit 1
    )
    union all
    
    (
    select IX.xmin as last_tx
      from pg_catalog.pg_index IX,
           pg_catalog.pg_class IC
      where IC.oid = IX.indrelid
        and IC.relnamespace = ?::oid
        order by pg_catalog.age(IX.xmin)
        limit 1
    )
    union all
    (
    select RU.xmin as last_tx
      from pg_catalog.pg_rewrite RU,
           pg_catalog.pg_class RC
      where RC.oid = RU.ev_class
        and RC.relnamespace = ?::oid
        order by pg_catalog.age(RU.xmin)
        limit 1
    )
    union all
    (
    select TG.xmin as last_tx
      from pg_catalog.pg_trigger TG,
           pg_catalog.pg_class TC
      where TC.oid = TG.tgrelid
        and TC.relnamespace = ?::oid
        order by pg_catalog.age(TG.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_class C on C.oid = D.objoid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_constraint C on C.oid = D.objoid
      where C.connamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_trigger T on T.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = T.tgrelid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_rewrite R on R.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = R.ev_class
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_proc P on P.oid = D.objoid
      where P.pronamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_type T on T.oid = D.objoid
      where T.typnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_operator O on O.oid = D.objoid
      where O.oprnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_collation C on C.oid = D.objoid
      where C.collnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    
  ) X
  order by pg_catalog.age(X.last_tx)
  limit 1
) C, saved_age SA
-- ] --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279823] results received
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279823] finished - execution time: 138 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279824] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279824] results received
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279824] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279825] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279825] results received
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279825] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279826] 
select distinct oid
from pg_catalog.pg_type
where typnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_class
where relnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_proc
where pronamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_operator
where oprnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_constraint
where connamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_collation
where collnamespace = ?::oid
union

select distinct IX.indexrelid
from pg_catalog.pg_index IX,
     pg_catalog.pg_class IC
where IC.oid = IX.indrelid
  and IC.relnamespace = ?::oid
union
select distinct RU.oid
from pg_catalog.pg_rewrite RU,
     pg_catalog.pg_class RC
where RC.oid = RU.ev_class
  and RC.relnamespace = ?::oid
  and not RU.rulename = '_RETURN'
union
select distinct TG.oid
from pg_catalog.pg_trigger TG,
     pg_catalog.pg_class TC
where TC.oid = TG.tgrelid
  and TC.relnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279826] results received
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279826] finished - execution time: 10 ms, fetching time: 6 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279827] 
select D.objoid id, pg_catalog.array_agg(D.objsubid) sub_ids
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
group by D.objoid
union all
select T.oid id, pg_catalog.array_agg(D.objsubid)
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
group by T.oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279827] results received
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279827] finished - execution time: 10 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279828] 
with saved_age as (select greatest(pg_catalog.age(?::varchar::xid), pg_catalog.age(?::varchar::xid)) as "value")
select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
(
  select X.last_tx as last_tx
  from (
    (
    select xmin as last_tx
      from pg_catalog.pg_type
      where typnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_class
      where relnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_proc
      where pronamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_operator
      where oprnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select A.xmin as last_tx
      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
      where K.relnamespace = ?::oid
      order by pg_catalog.age(A.xmin)
      limit 1
    )
    union all
    (
    select E.xmin as last_tx
      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
      where T.typnamespace = ?::oid
      order by pg_catalog.age(E.xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_constraint
      where connamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select CO.xmin as last_tx
      from pg_catalog.pg_collation CO
      where CO.collnamespace = ?::oid
      order by pg_catalog.age(CO.xmin)
      limit 1
    )
    union all
    
    (
    select IX.xmin as last_tx
      from pg_catalog.pg_index IX,
           pg_catalog.pg_class IC
      where IC.oid = IX.indrelid
        and IC.relnamespace = ?::oid
        order by pg_catalog.age(IX.xmin)
        limit 1
    )
    union all
    (
    select RU.xmin as last_tx
      from pg_catalog.pg_rewrite RU,
           pg_catalog.pg_class RC
      where RC.oid = RU.ev_class
        and RC.relnamespace = ?::oid
        order by pg_catalog.age(RU.xmin)
        limit 1
    )
    union all
    (
    select TG.xmin as last_tx
      from pg_catalog.pg_trigger TG,
           pg_catalog.pg_class TC
      where TC.oid = TG.tgrelid
        and TC.relnamespace = ?::oid
        order by pg_catalog.age(TG.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_class C on C.oid = D.objoid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_constraint C on C.oid = D.objoid
      where C.connamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_trigger T on T.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = T.tgrelid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_rewrite R on R.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = R.ev_class
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_proc P on P.oid = D.objoid
      where P.pronamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_type T on T.oid = D.objoid
      where T.typnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_operator O on O.oid = D.objoid
      where O.oprnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_collation C on C.oid = D.objoid
      where C.collnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    
  ) X
  order by pg_catalog.age(X.last_tx)
  limit 1
) C, saved_age SA
-- ] --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279828] results received
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279828] finished - execution time: 15 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279829] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279829] results received
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279829] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279830] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279830] results received
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279830] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279831] 
select distinct oid
from pg_catalog.pg_type
where typnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_class
where relnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_proc
where pronamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_operator
where oprnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_constraint
where connamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_collation
where collnamespace = ?::oid
union

select distinct IX.indexrelid
from pg_catalog.pg_index IX,
     pg_catalog.pg_class IC
where IC.oid = IX.indrelid
  and IC.relnamespace = ?::oid
union
select distinct RU.oid
from pg_catalog.pg_rewrite RU,
     pg_catalog.pg_class RC
where RC.oid = RU.ev_class
  and RC.relnamespace = ?::oid
  and not RU.rulename = '_RETURN'
union
select distinct TG.oid
from pg_catalog.pg_trigger TG,
     pg_catalog.pg_class TC
where TC.oid = TG.tgrelid
  and TC.relnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279831] results received
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279831] finished - execution time: 8 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279832] 
select D.objoid id, pg_catalog.array_agg(D.objsubid) sub_ids
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
group by D.objoid
union all
select T.oid id, pg_catalog.array_agg(D.objsubid)
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
group by T.oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279832] results received
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279832] finished - execution time: 13 ms, fetching time: 78 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279833] 
with saved_age as (select greatest(pg_catalog.age(?::varchar::xid), pg_catalog.age(?::varchar::xid)) as "value")
select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
(
  select X.last_tx as last_tx
  from (
    (
    select xmin as last_tx
      from pg_catalog.pg_type
      where typnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_class
      where relnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_proc
      where pronamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_operator
      where oprnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select A.xmin as last_tx
      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
      where K.relnamespace = ?::oid
      order by pg_catalog.age(A.xmin)
      limit 1
    )
    union all
    (
    select E.xmin as last_tx
      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
      where T.typnamespace = ?::oid
      order by pg_catalog.age(E.xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_constraint
      where connamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select CO.xmin as last_tx
      from pg_catalog.pg_collation CO
      where CO.collnamespace = ?::oid
      order by pg_catalog.age(CO.xmin)
      limit 1
    )
    union all
    
    (
    select IX.xmin as last_tx
      from pg_catalog.pg_index IX,
           pg_catalog.pg_class IC
      where IC.oid = IX.indrelid
        and IC.relnamespace = ?::oid
        order by pg_catalog.age(IX.xmin)
        limit 1
    )
    union all
    (
    select RU.xmin as last_tx
      from pg_catalog.pg_rewrite RU,
           pg_catalog.pg_class RC
      where RC.oid = RU.ev_class
        and RC.relnamespace = ?::oid
        order by pg_catalog.age(RU.xmin)
        limit 1
    )
    union all
    (
    select TG.xmin as last_tx
      from pg_catalog.pg_trigger TG,
           pg_catalog.pg_class TC
      where TC.oid = TG.tgrelid
        and TC.relnamespace = ?::oid
        order by pg_catalog.age(TG.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_class C on C.oid = D.objoid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_constraint C on C.oid = D.objoid
      where C.connamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_trigger T on T.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = T.tgrelid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_rewrite R on R.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = R.ev_class
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_proc P on P.oid = D.objoid
      where P.pronamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_type T on T.oid = D.objoid
      where T.typnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_operator O on O.oid = D.objoid
      where O.oprnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_collation C on C.oid = D.objoid
      where C.collnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    
  ) X
  order by pg_catalog.age(X.last_tx)
  limit 1
) C, saved_age SA
-- ] --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279833] results received
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279833] finished - execution time: 16 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279834] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279834] results received
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279834] finished - execution time: 225 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279835] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279835] results received
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279835] finished - execution time: 10 ms, fetching time: 42 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279836] 
select distinct oid
from pg_catalog.pg_type
where typnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_class
where relnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_proc
where pronamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_operator
where oprnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_constraint
where connamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_collation
where collnamespace = ?::oid
union

select distinct IX.indexrelid
from pg_catalog.pg_index IX,
     pg_catalog.pg_class IC
where IC.oid = IX.indrelid
  and IC.relnamespace = ?::oid
union
select distinct RU.oid
from pg_catalog.pg_rewrite RU,
     pg_catalog.pg_class RC
where RC.oid = RU.ev_class
  and RC.relnamespace = ?::oid
  and not RU.rulename = '_RETURN'
union
select distinct TG.oid
from pg_catalog.pg_trigger TG,
     pg_catalog.pg_class TC
where TC.oid = TG.tgrelid
  and TC.relnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279836] results received
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279836] finished - execution time: 5 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279837] 
select D.objoid id, pg_catalog.array_agg(D.objsubid) sub_ids
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
group by D.objoid
union all
select T.oid id, pg_catalog.array_agg(D.objsubid)
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
group by T.oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279837] results received
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279837] finished - execution time: 13 ms, fetching time: 37 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279838] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279838] results received
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279838] finished - execution time: 6 ms, fetching time: 10 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279839] 
with U as (select usesysid from pg_catalog.pg_user where usename = current_user),
          T as (
                select oid as sequence_id,
                       relname as sequence_name,
                       pg_catalog.pg_get_userbyid(relowner) as "owner",
                       case when relowner = (select usesysid from U) then trim(both '()' from pg_catalog.pg_sequence_parameters(oid)::varchar)
                       else null::varchar
                       end as sequence_params,
                       
                       xmin as sequence_state_number
                       from pg_catalog.pg_class
                         where relnamespace = ?::oid
                         and relkind = 'S'
                         and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)
                )
select sequence_id,
       sequence_name,
       pg_catalog.split_part(sequence_params, ',', 1)::bigint as next_value,
       pg_catalog.split_part(sequence_params, ',', 2)::bigint as min_value,
       pg_catalog.split_part(sequence_params, ',', 3)::bigint as max_value,
       pg_catalog.split_part(sequence_params, ',', 4)::bigint as inc_value,
       pg_catalog.lower(pg_catalog.split_part(sequence_params, ',', 5)) LIKE '%t%' as cycle_option,
       
       sequence_state_number,
       "owner"
from T
-- ] --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279839] results received
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279839] finished - execution time: 4 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279840] 
select T.oid as type_id,
       T.xmin as type_state_number,
       T.typname as type_name,
       T.typtype as type_sub_kind,
       T.typcategory as type_category,
       T.typrelid as class_id,
       T.typbasetype as base_type_id,
       case when T.typtype in ('c','e') then null
            else pg_catalog.format_type(T.typbasetype, T.typtypmod) end as type_def,
       T.typdefault as default_expression,
       T.typnotnull as mandatory,
       pg_catalog.pg_get_userbyid(T.typowner) as "owner"
from pg_catalog.pg_type T
         left outer join pg_catalog.pg_class C
             on T.typrelid = C.oid
where T.typnamespace = ?::oid
  and pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid)
  and (T.typtype in ('d','e') or C.relkind = 'c'::"char" or T.typtype = 'b' and (T.typelem = 0 OR T.typcategory <> 'A'))
order by 1
-- ] --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279840] results received
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279840] finished - execution time: 3 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279841] 
select T.oid::bigint as type_id,
       C.oid::bigint as constraint_id,
       C.xmin as constraint_state_number,
       C.conname as constraint_name,
       /* pg_catalog.pg_get_expr(C.conbin, 0) */C.consrc  as predicate
from pg_catalog.pg_type T,
     pg_catalog.pg_constraint C
where T.typnamespace = ?::oid
  and T.typtype = 'd'::"char"
  and T.oid = C.contypid
  and (pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(C.xmin) <= pg_catalog.age(?::varchar::xid))
order by constraint_name
-- ] --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279841] results received
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279841] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279842] 
select T.relkind as table_kind,
       T.relname as table_name,
       T.oid as table_id,
       T.xmin as table_state_number,
       /* false */T.relhasoids  as table_with_oids,
       T.relnamespace as tablespace_id,
       T.reloptions as options,
       (select pg_catalog.array_agg(inhparent)::varchar from (select inhparent::bigint from pg_catalog.pg_inherits where T.oid = inhrelid order by inhseqno) as bts) as ancestors,
       (select pg_catalog.array_agg(inhrelid)::varchar from (select inhrelid::bigint from pg_catalog.pg_inherits where T.oid = inhparent order by inhrelid) as its) as successors,
       /* T.relispartition */false  as is_partition,
       /* pg_catalog.pg_get_partkeydef(T.oid) */null  as partition_key,
       /* pg_catalog.pg_get_expr(T.relpartbound, T.oid) */null  as partition_expression,
       pg_catalog.pg_get_userbyid(T.relowner) as "owner"
from pg_catalog.pg_class T
where relnamespace = ?::oid
  and relkind in ('r', 'm', 'v', 'f', 'p')
  and pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid)
order by table_kind, table_id
-- ] --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279842] results received
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279842] finished - execution time: 21 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279843] 
select ft.ftrelid as table_id,
       srv.srvname as table_server,
       ft.ftoptions as table_options,
       pg_catalog.pg_get_userbyid(cls.relowner) as "owner"
from pg_catalog.pg_foreign_table ft
     left outer join pg_catalog.pg_foreign_server srv on ft.ftserver = srv.oid
     join pg_catalog.pg_class cls on ft.ftrelid = cls.oid
where cls.relnamespace = ?::oid
  and pg_catalog.age(ft.xmin) <= pg_catalog.age(?::varchar::xid)
order by table_id
-- ] --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279843] results received
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279843] finished - execution time: 13 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279844] 
with schema_procs as (select prorettype, proargtypes, proallargtypes
                      from pg_catalog.pg_proc
                      where pronamespace = ?::oid
                        and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)  ),
     schema_opers as (select oprleft, oprright, oprresult
                      from pg_catalog.pg_operator
                      where oprnamespace = ?::oid
                        and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)  ),
     schema_aggregates as (select A.aggtranstype , A.aggmtranstype 
                           from pg_catalog.pg_aggregate A
                           join pg_catalog.pg_proc P
                             on A.aggfnoid = P.oid
                           where P.pronamespace = ?::oid
                           and (pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(?::varchar::xid)) ),
     schema_arg_types as ( select prorettype as type_id
                           from schema_procs
                           union
                           select distinct unnest(proargtypes) as type_id
                           from schema_procs
                           union
                           select distinct unnest(proallargtypes) as type_id
                           from schema_procs
                           union
                           select oprleft as type_id
                           from schema_opers
                           where oprleft is not null
                           union
                           select oprright as type_id
                           from schema_opers
                           where oprright is not null
                           union
                           select oprresult as type_id
                           from schema_opers
                           where oprresult is not null
                           union
                           select aggtranstype::oid as type_id
                           from schema_aggregates
                           union
                           select aggmtranstype::oid as type_id
                           from schema_aggregates
                           
                           )
select type_id, pg_catalog.format_type(type_id, null) as type_spec
from schema_arg_types
where type_id <> 0
-- ] --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279844] results received
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279844] finished - execution time: 26 ms, fetching time: 7 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279845] 
with languages as (select oid as lang_oid, lanname as lang
                   from pg_catalog.pg_language),
     routines as (select proname as r_name,
                         prolang as lang_oid,
                         oid as r_id,
                         xmin as r_state_number,
                         proargnames as arg_names,
                         proargmodes as arg_modes,
                         proargtypes::int[] as in_arg_types,
                         proallargtypes::int[] as all_arg_types,
                         pg_catalog.pg_get_expr(proargdefaults, 0) as arg_defaults,
                         provariadic as arg_variadic_id,
                         prorettype as ret_type_id,
                         proretset as ret_set,
                         /* prokind */case when proiswindow then 'w'
                                                when proisagg then 'a'
                                                else 'f'
                                           end  as kind,
                         provolatile as volatile_kind,
                         proisstrict as is_strict,
                         prosecdef as is_security_definer,
                         proconfig as configuration_parameters,
                         procost as cost,
                         pg_catalog.pg_get_userbyid(proowner) as "owner",
                         prorows as rows ,
                         proleakproof as is_leakproof  /* ,
                         proparallel as concurrency_kind */
                  from pg_catalog.pg_proc
                  where pronamespace = ?::oid
                    and not /* (prokind = 'a') */proisagg 
                    and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid) )
select *
from routines natural join languages
-- ] --------------------------------------------------
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279845] results received
-- 2020-05-25 21:46:36 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279845] finished - execution time: 26 ms, fetching time: 17 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:37 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279846] 
with procedures as (
  select P.oid as function_id,
         pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as function_name,
         P.prorettype as return_type
  from pg_catalog.pg_proc P
  join pg_catalog.pg_namespace N
    on P.pronamespace = N.oid
),
operators as (
  select O.oid as operator_id,
         pg_catalog.quote_ident(N.nspname) || '.' || O.oprname as operator_name
  from pg_catalog.pg_operator O
  join pg_catalog.pg_namespace N
    on O.oprnamespace = N.oid
)
select P.oid as aggregate_id,
       P.xmin as state_number,
       P.proname as aggregate_name,
       P.proargnames as arg_names,
       P.proargmodes as arg_modes,
       P.proargtypes::int[] as in_arg_types,
       P.proallargtypes::int[] as all_arg_types,
       A.aggtransfn::oid as transition_function_id,
       PT.function_name::text as transition_function_name,
       A.aggtranstype as transition_type,
       A.aggfinalfn::oid as final_function_id,
       case when A.aggfinalfn::oid = 0 then null else PF.function_name end as final_function_name,
       case when A.aggfinalfn::oid = 0 then 0 else PF.return_type end as final_return_type,
       A.agginitval as initial_value,
       A.aggsortop as sort_operator_id,
       case when A.aggsortop = 0 then null else O.operator_name end as sort_operator_name,
       pg_catalog.pg_get_userbyid(P.proowner) as "owner"
       ,
       A.aggfinalextra as final_extra,
       A.aggtransspace as state_size,
       A.aggmtransfn::oid as moving_transition_id,
       case when A.aggmtransfn::oid = 0 then null else FTP.function_name end as moving_transition_name,
       A.aggminvtransfn::oid as inverse_transition_id,
       case when A.aggminvtransfn::oid = 0 then null else ITP.function_name end as inverse_transition_name,
       A.aggmtranstype::oid as moving_state_type,
       A.aggmtransspace as moving_state_size,
       A.aggmfinalfn::oid as moving_final_id,
       case when A.aggmfinalfn::oid = 0 then null else FFP.function_name end as moving_final_name,
       A.aggmfinalextra as moving_final_extra,
       A.aggminitval as moving_initial_value,
       A.aggkind as aggregate_kind,
       A.aggnumdirectargs as direct_args
       
       /* ,
       A.aggcombinefn::oid as combine_function_id,
       case when A.aggcombinefn::oid = 0 then null else CP.function_name end as combine_function_name,
       A.aggserialfn::oid as serialization_function_id,
       case when A.aggserialfn::oid = 0 then null else SP.function_name end as serialization_function_name,
       A.aggdeserialfn::oid as deserialization_function_id,
       case when A.aggdeserialfn::oid = 0 then null else DP.function_name end as deserialization_function_name,
       P.proparallel as concurrency_kind
       */
from pg_catalog.pg_aggregate A
join pg_catalog.pg_proc P
  on A.aggfnoid = P.oid
join procedures PT
  on A.aggtransfn::oid = PT.function_id
left outer join procedures PF
  on A.aggfinalfn::oid = PF.function_id
left outer join operators O
  on A.aggsortop = O.operator_id
left outer join procedures FTP
  on A.aggmtransfn = FTP.function_id
left outer join procedures ITP
  on A.aggminvtransfn = ITP.function_id
left outer join procedures FFP
  on A.aggmfinalfn = FFP.function_id

/* left outer join procedures CP
  on A.aggcombinefn = CP.function_id
left outer join procedures SP
  on A.aggserialfn = SP.function_id
left outer join procedures DP
  on A.aggdeserialfn = DP.function_id
*/
where P.pronamespace = ?::oid
and (pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(?::varchar::xid))
order by P.oid
-- ] --------------------------------------------------
-- 2020-05-25 21:46:37 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279846] results received
-- 2020-05-25 21:46:37 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279846] finished - execution time: 39 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:37 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279847] 
select O.oid as op_id,
       O.xmin as state_number,
       oprname as op_name,
       oprkind as op_kind,
       oprleft as arg_left_type_id,
       oprright as arg_right_type_id,
       oprresult as arg_result_type_id,
       oprcode as func_main,
       pg_catalog.pg_get_userbyid(O.oprowner) as "owner"
from pg_catalog.pg_operator O
where oprnamespace = ?::oid
  and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-25 21:46:37 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279847] results received
-- 2020-05-25 21:46:37 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279847] finished - execution time: 3 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:37 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279848] 
select oid as id,
       xmin as state_number,
       collname as name,
       collcollate as lc_collate,
       collctype as lc_ctype,
       pg_catalog.pg_get_userbyid(collowner) as "owner"
from pg_catalog.pg_collation
where collnamespace = ?::oid
  and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-25 21:46:37 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279848] results received
-- 2020-05-25 21:46:37 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279848] finished - execution time: 3 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:37 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279849] 
with types      as (select distinct
                           T.oid as type_id,
                           C.oid as class_id
                    from pg_catalog.pg_type T
                    join pg_catalog.pg_class C
                      on T.typrelid = C.oid
                    join pg_catalog.pg_attribute A
                      on C.oid = A.attrelid
                    where T.typnamespace = ?::oid
                      and pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid)
                      and T.typtype = 'c'::"char"
                      and C.relkind = 'c'::"char"),
     attributes as (select A.attrelid as class_id,
                           A.attnum   as att_position,
                           A.attname  as att_name,
                           pg_catalog.format_type(A.atttypid, A.atttypmod) as att_type,
                           A.attisdropped as att_dropped
                    from pg_catalog.pg_attribute A)
select type_id, att_position, att_name, att_type, att_dropped
from types natural join attributes
order by type_id::bigint, att_position
-- ] --------------------------------------------------
-- 2020-05-25 21:46:37 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279849] results received
-- 2020-05-25 21:46:37 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279849] finished - execution time: 21 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:37 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279850] 
with types as (select distinct T.oid as type_id
               from pg_catalog.pg_type T
               join pg_catalog.pg_enum E
                 on T.oid = E.enumtypid
               where T.typnamespace = ?::oid
                 and T.typtype = 'e'::"char"
               and pg_catalog.age(E.xmin) <= pg_catalog.age(?::varchar::xid)
               )
select T.type_id as enum_id,
       pg_catalog.array_agg(E.enumlabel::varchar order by E.enumsortorder ) as enum_labels
from types T
join pg_catalog.pg_enum E
  on T.type_id = E.enumtypid
group by T.type_id
-- ] --------------------------------------------------
-- 2020-05-25 21:46:37 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279850] results received
-- 2020-05-25 21:46:37 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279850] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:37 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279851] 
with T as ( select distinct T.oid as table_id, T.relname as table_name
            from pg_catalog.pg_class T,
                 pg_catalog.pg_attribute A
            where T.relnamespace = ?::oid
              and T.relkind in ('r', 'm', 'v', 'f', 'p')
              and (pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid))
              and A.attrelid = T.oid )
select T.table_id,
       C.attnum as column_position,
       C.attname as column_name,
       C.xmin as column_state_number,
       C.atttypmod as type_mod,
       C.attndims as dimensions_number,
       pg_catalog.format_type(C.atttypid, C.atttypmod) as type_spec,
       C.atttypid as type_id,
       C.attnotnull as mandatory,
       /* pg_catalog.pg_get_expr(D.adbin, 'pg_catalog.pg_attrdef'::regclass::oid) */D.adsrc  as column_default_expression,
       not C.attislocal as column_is_inherited,
       C.attfdwoptions as options,
       C.attisdropped as column_is_dropped,
       /* C.attidentity */null  as identity_kind
from T
  inner join pg_catalog.pg_attribute C on T.table_id = C.attrelid
  left outer join pg_catalog.pg_attrdef D on (C.attrelid, C.attnum) = (D.adrelid, D.adnum)
where attnum > 0
order by table_id, attnum
-- ] --------------------------------------------------
-- 2020-05-25 21:46:37 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279851] results received
-- 2020-05-25 21:46:37 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279851] finished - execution time: 43 ms, fetching time: 18 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:37 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279852] 
with tab as ( select relnamespace as schema_id,
                     oid as table_id,
                     relkind as table_kind
              from pg_catalog.pg_class
              where relnamespace = ?::oid
                and relkind in ('r','m','v','p')),
    ind_head as ( select indrelid as table_id,
                         indexrelid as index_id,
                         indisunique as is_unique,
                         indisprimary as is_primary,
                         indkey as column_positions,
                         indclass as column_operators,
                         indoption as column_options,
                         pg_catalog.pg_get_expr(indpred, indrelid) as condition,
                         case when indexprs is not null
                             then pg_catalog.array_to_string(array(
                                      select case when indkey[k] = 0
                                             then chr(27) || pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
                                             else pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
                                             end
                                      from pg_catalog.generate_subscripts(indkey, 1) as k
                                      order by k),
                                  chr(28))
                             else null end as expressions
                  from pg_catalog.pg_index ),
    ind_stor as ( select cls.relnamespace as schema_id,
                         cls.oid as index_id,
                         cls.xmin as state_number,
                         cls.relname as index_name,
                         /* pg_catalog.pg_indexam_has_property(cls.relam, 'can_order') */am.amcanorder  as can_order
                  from pg_catalog.pg_class cls
                    /* */join pg_catalog.pg_am am on (cls.relam = am.oid)
                  where cls.relkind = 'i'
                    and pg_catalog.age(cls.xmin) <= pg_catalog.age(?::varchar::xid) )
select table_id, table_kind,
       index_name, index_id, state_number,
       is_unique, is_primary,
       column_positions, column_operators, column_options,
       condition, expressions, can_order
from tab natural join ind_head natural join ind_stor
-- ] --------------------------------------------------
-- 2020-05-25 21:46:37 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279852] results received
-- 2020-05-25 21:46:37 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279852] finished - execution time: 6 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:37 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279853] 
with T as ( select oid as table_id,
                   relkind as table_kind,
                   xmin as table_state_id
            from pg_catalog.pg_class
            where relkind in ('r','v','f','p')
              and relnamespace = ?::oid ),
     C as ( select conrelid as table_id,
                   oid::bigint as con_id,
                   xmin as con_state_id,
                   conname as con_name,
                   contype as con_kind,
                   conkey as con_columns,
                   conindid as index_id,
                   confrelid as ref_table_id,
                   confkey as ref_columns,
                   condeferrable as is_deferrable,
                   condeferred as is_init_deferred,
                   confupdtype as on_update,
                   confdeltype as on_delete,
                   /* conbin */consrc 
            from pg_catalog.pg_constraint
            where contype in ('p','u','f','c')
              and connamespace = ?::oid )
select table_id,
       table_kind,
       con_id,
       con_state_id::varchar::bigint as con_state_id,
       con_name,
       con_kind,
       con_columns,
       index_id,
       ref_table_id,
       is_deferrable,
       is_init_deferred,
       on_update,
       on_delete,
       /* pg_catalog.pg_get_expr(conbin, table_id) */consrc  as con_expression,
       ref_columns
from T natural join C
where pg_catalog.age(table_state_id) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(con_state_id) <= pg_catalog.age(?::varchar::xid)
order by pg_catalog.strpos('pufc', con_kind)
-- ] --------------------------------------------------
-- 2020-05-25 21:46:37 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279853] results received
-- 2020-05-25 21:46:37 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279853] finished - execution time: 4 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:37 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279854] 
select R.ev_class as table_id,
       R.oid as rule_id,
       R.xmin as rule_state_number,
       R.rulename as rule_name,
       pg_catalog.translate(ev_type,'1234','SUID') as rule_event_code,
       R.ev_enabled as rule_fire_mode,
       R.is_instead as rule_is_instead
from pg_catalog.pg_rewrite R
where R.ev_class in (select oid
                     from pg_catalog.pg_class
                     where relnamespace = ?::oid)
  and pg_catalog.age(R.xmin) <= pg_catalog.age(?::varchar::xid)
  and R.rulename != '_RETURN'::name
order by R.ev_class::bigint, ev_type
-- ] --------------------------------------------------
-- 2020-05-25 21:46:37 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279854] results received
-- 2020-05-25 21:46:37 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279854] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:37 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279855] 
select T.tgrelid as table_id,
       T.oid as trigger_id,
       T.xmin as trigger_state_number,
       T.tgname as trigger_name,
       T.tgfoid as function_id,
       T.tgtype & 31 as bits,
       T.tgdeferrable as is_deferrable,
       T.tginitdeferred as is_init_deferred,
       T.tgenabled as trigger_fire_mode
from pg_catalog.pg_trigger T
where T.tgrelid in (select oid
                    from pg_catalog.pg_class
                    where relnamespace = ?::oid)
  and pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid)
  and not T.tgisinternal
-- ] --------------------------------------------------
-- 2020-05-25 21:46:37 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279855] results received
-- 2020-05-25 21:46:37 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279855] finished - execution time: 5 ms, fetching time: 11 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:37 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279856] 
select D.objoid id, C.relkind as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select T.oid id, 'T' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, pg_catalog.translate(C.contype, 'pufc', 'kkxz') as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, 't' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, 'R' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, 'F' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, 'O' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, 'C' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)

-- ] --------------------------------------------------
-- 2020-05-25 21:46:37 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279856] results received
-- 2020-05-25 21:46:37 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279856] finished - execution time: 18 ms, fetching time: 22 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:37 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279857] 
select distinct
       T.relkind as view_kind,
       T.oid as view_id,
       pg_catalog.pg_get_viewdef(T.oid) as source_text
from pg_catalog.pg_class T
  join pg_catalog.pg_namespace N on T.relnamespace = N.oid
  left outer join pg_catalog.pg_attribute A on (A.attrelid = T.oid)
where N.oid = ?::oid
  and T.relkind in ('m','v')
  and (pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid))
-- ] --------------------------------------------------
-- 2020-05-25 21:46:37 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279857] results received
-- 2020-05-25 21:46:37 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279857] finished - execution time: 399 ms, fetching time: 12 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279858] 
with A as ( select oid as table_id, pg_catalog.upper(relkind) as table_kind
            from pg_catalog.pg_class
            where relnamespace = ?::oid
              and relkind in ('r', 'm', 'v', 'f', 'p') )
select table_kind,
       table_id,
       R.oid as rule_id,
       pg_catalog.pg_get_ruledef(R.oid) as source_text
from A join pg_catalog.pg_rewrite R
        on A.table_id = R.ev_class
where R.rulename != '_RETURN'::name
  and pg_catalog.age(R.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279858] results received
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279858] finished - execution time: 17 ms, fetching time: 6 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279859] 
with system_languages as ( select oid as lang
                           from pg_catalog.pg_language
                           where lanname in ('c','internal') )
select oid as id,
       pg_catalog.pg_get_function_arguments(oid) as arguments_def,
       pg_catalog.pg_get_function_result(oid) as result_def,
       prosrc as source_text
from pg_catalog.pg_proc
where pronamespace = ?::oid
  and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)
  and not /* (prokind = 'a') */proisagg 
  and prolang not in (select lang from system_languages)
  and prosrc is not null
-- ] --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279859] results received
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279859] finished - execution time: 4 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279860] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279860] results received
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279860] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279861] 
with U as (select usesysid from pg_catalog.pg_user where usename = current_user),
          T as (
                select oid as sequence_id,
                       relname as sequence_name,
                       pg_catalog.pg_get_userbyid(relowner) as "owner",
                       case when relowner = (select usesysid from U) then trim(both '()' from pg_catalog.pg_sequence_parameters(oid)::varchar)
                       else null::varchar
                       end as sequence_params,
                       
                       xmin as sequence_state_number
                       from pg_catalog.pg_class
                         where relnamespace = ?::oid
                         and relkind = 'S'
                         and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)
                )
select sequence_id,
       sequence_name,
       pg_catalog.split_part(sequence_params, ',', 1)::bigint as next_value,
       pg_catalog.split_part(sequence_params, ',', 2)::bigint as min_value,
       pg_catalog.split_part(sequence_params, ',', 3)::bigint as max_value,
       pg_catalog.split_part(sequence_params, ',', 4)::bigint as inc_value,
       pg_catalog.lower(pg_catalog.split_part(sequence_params, ',', 5)) LIKE '%t%' as cycle_option,
       
       sequence_state_number,
       "owner"
from T
-- ] --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279861] results received
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279861] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279862] 
select T.oid as type_id,
       T.xmin as type_state_number,
       T.typname as type_name,
       T.typtype as type_sub_kind,
       T.typcategory as type_category,
       T.typrelid as class_id,
       T.typbasetype as base_type_id,
       case when T.typtype in ('c','e') then null
            else pg_catalog.format_type(T.typbasetype, T.typtypmod) end as type_def,
       T.typdefault as default_expression,
       T.typnotnull as mandatory,
       pg_catalog.pg_get_userbyid(T.typowner) as "owner"
from pg_catalog.pg_type T
         left outer join pg_catalog.pg_class C
             on T.typrelid = C.oid
where T.typnamespace = ?::oid
  and pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid)
  and (T.typtype in ('d','e') or C.relkind = 'c'::"char" or T.typtype = 'b' and (T.typelem = 0 OR T.typcategory <> 'A'))
order by 1
-- ] --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279862] results received
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279862] finished - execution time: 3 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279863] 
select T.relkind as table_kind,
       T.relname as table_name,
       T.oid as table_id,
       T.xmin as table_state_number,
       /* false */T.relhasoids  as table_with_oids,
       T.relnamespace as tablespace_id,
       T.reloptions as options,
       (select pg_catalog.array_agg(inhparent)::varchar from (select inhparent::bigint from pg_catalog.pg_inherits where T.oid = inhrelid order by inhseqno) as bts) as ancestors,
       (select pg_catalog.array_agg(inhrelid)::varchar from (select inhrelid::bigint from pg_catalog.pg_inherits where T.oid = inhparent order by inhrelid) as its) as successors,
       /* T.relispartition */false  as is_partition,
       /* pg_catalog.pg_get_partkeydef(T.oid) */null  as partition_key,
       /* pg_catalog.pg_get_expr(T.relpartbound, T.oid) */null  as partition_expression,
       pg_catalog.pg_get_userbyid(T.relowner) as "owner"
from pg_catalog.pg_class T
where relnamespace = ?::oid
  and relkind in ('r', 'm', 'v', 'f', 'p')
  and pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid)
order by table_kind, table_id
-- ] --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279863] results received
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279863] finished - execution time: 5 ms, fetching time: 6 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279864] 
select ft.ftrelid as table_id,
       srv.srvname as table_server,
       ft.ftoptions as table_options,
       pg_catalog.pg_get_userbyid(cls.relowner) as "owner"
from pg_catalog.pg_foreign_table ft
     left outer join pg_catalog.pg_foreign_server srv on ft.ftserver = srv.oid
     join pg_catalog.pg_class cls on ft.ftrelid = cls.oid
where cls.relnamespace = ?::oid
  and pg_catalog.age(ft.xmin) <= pg_catalog.age(?::varchar::xid)
order by table_id
-- ] --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279864] results received
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279864] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279865] 
with schema_procs as (select prorettype, proargtypes, proallargtypes
                      from pg_catalog.pg_proc
                      where pronamespace = ?::oid
                        and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)  ),
     schema_opers as (select oprleft, oprright, oprresult
                      from pg_catalog.pg_operator
                      where oprnamespace = ?::oid
                        and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)  ),
     schema_aggregates as (select A.aggtranstype , A.aggmtranstype 
                           from pg_catalog.pg_aggregate A
                           join pg_catalog.pg_proc P
                             on A.aggfnoid = P.oid
                           where P.pronamespace = ?::oid
                           and (pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(?::varchar::xid)) ),
     schema_arg_types as ( select prorettype as type_id
                           from schema_procs
                           union
                           select distinct unnest(proargtypes) as type_id
                           from schema_procs
                           union
                           select distinct unnest(proallargtypes) as type_id
                           from schema_procs
                           union
                           select oprleft as type_id
                           from schema_opers
                           where oprleft is not null
                           union
                           select oprright as type_id
                           from schema_opers
                           where oprright is not null
                           union
                           select oprresult as type_id
                           from schema_opers
                           where oprresult is not null
                           union
                           select aggtranstype::oid as type_id
                           from schema_aggregates
                           union
                           select aggmtranstype::oid as type_id
                           from schema_aggregates
                           
                           )
select type_id, pg_catalog.format_type(type_id, null) as type_spec
from schema_arg_types
where type_id <> 0
-- ] --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279865] results received
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279865] finished - execution time: 10 ms, fetching time: 9 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279866] 
with languages as (select oid as lang_oid, lanname as lang
                   from pg_catalog.pg_language),
     routines as (select proname as r_name,
                         prolang as lang_oid,
                         oid as r_id,
                         xmin as r_state_number,
                         proargnames as arg_names,
                         proargmodes as arg_modes,
                         proargtypes::int[] as in_arg_types,
                         proallargtypes::int[] as all_arg_types,
                         pg_catalog.pg_get_expr(proargdefaults, 0) as arg_defaults,
                         provariadic as arg_variadic_id,
                         prorettype as ret_type_id,
                         proretset as ret_set,
                         /* prokind */case when proiswindow then 'w'
                                                when proisagg then 'a'
                                                else 'f'
                                           end  as kind,
                         provolatile as volatile_kind,
                         proisstrict as is_strict,
                         prosecdef as is_security_definer,
                         proconfig as configuration_parameters,
                         procost as cost,
                         pg_catalog.pg_get_userbyid(proowner) as "owner",
                         prorows as rows ,
                         proleakproof as is_leakproof  /* ,
                         proparallel as concurrency_kind */
                  from pg_catalog.pg_proc
                  where pronamespace = ?::oid
                    and not /* (prokind = 'a') */proisagg 
                    and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid) )
select *
from routines natural join languages
-- ] --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279866] results received
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279866] finished - execution time: 18 ms, fetching time: 78 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279867] 
with procedures as (
  select P.oid as function_id,
         pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as function_name,
         P.prorettype as return_type
  from pg_catalog.pg_proc P
  join pg_catalog.pg_namespace N
    on P.pronamespace = N.oid
),
operators as (
  select O.oid as operator_id,
         pg_catalog.quote_ident(N.nspname) || '.' || O.oprname as operator_name
  from pg_catalog.pg_operator O
  join pg_catalog.pg_namespace N
    on O.oprnamespace = N.oid
)
select P.oid as aggregate_id,
       P.xmin as state_number,
       P.proname as aggregate_name,
       P.proargnames as arg_names,
       P.proargmodes as arg_modes,
       P.proargtypes::int[] as in_arg_types,
       P.proallargtypes::int[] as all_arg_types,
       A.aggtransfn::oid as transition_function_id,
       PT.function_name::text as transition_function_name,
       A.aggtranstype as transition_type,
       A.aggfinalfn::oid as final_function_id,
       case when A.aggfinalfn::oid = 0 then null else PF.function_name end as final_function_name,
       case when A.aggfinalfn::oid = 0 then 0 else PF.return_type end as final_return_type,
       A.agginitval as initial_value,
       A.aggsortop as sort_operator_id,
       case when A.aggsortop = 0 then null else O.operator_name end as sort_operator_name,
       pg_catalog.pg_get_userbyid(P.proowner) as "owner"
       ,
       A.aggfinalextra as final_extra,
       A.aggtransspace as state_size,
       A.aggmtransfn::oid as moving_transition_id,
       case when A.aggmtransfn::oid = 0 then null else FTP.function_name end as moving_transition_name,
       A.aggminvtransfn::oid as inverse_transition_id,
       case when A.aggminvtransfn::oid = 0 then null else ITP.function_name end as inverse_transition_name,
       A.aggmtranstype::oid as moving_state_type,
       A.aggmtransspace as moving_state_size,
       A.aggmfinalfn::oid as moving_final_id,
       case when A.aggmfinalfn::oid = 0 then null else FFP.function_name end as moving_final_name,
       A.aggmfinalextra as moving_final_extra,
       A.aggminitval as moving_initial_value,
       A.aggkind as aggregate_kind,
       A.aggnumdirectargs as direct_args
       
       /* ,
       A.aggcombinefn::oid as combine_function_id,
       case when A.aggcombinefn::oid = 0 then null else CP.function_name end as combine_function_name,
       A.aggserialfn::oid as serialization_function_id,
       case when A.aggserialfn::oid = 0 then null else SP.function_name end as serialization_function_name,
       A.aggdeserialfn::oid as deserialization_function_id,
       case when A.aggdeserialfn::oid = 0 then null else DP.function_name end as deserialization_function_name,
       P.proparallel as concurrency_kind
       */
from pg_catalog.pg_aggregate A
join pg_catalog.pg_proc P
  on A.aggfnoid = P.oid
join procedures PT
  on A.aggtransfn::oid = PT.function_id
left outer join procedures PF
  on A.aggfinalfn::oid = PF.function_id
left outer join operators O
  on A.aggsortop = O.operator_id
left outer join procedures FTP
  on A.aggmtransfn = FTP.function_id
left outer join procedures ITP
  on A.aggminvtransfn = ITP.function_id
left outer join procedures FFP
  on A.aggmfinalfn = FFP.function_id

/* left outer join procedures CP
  on A.aggcombinefn = CP.function_id
left outer join procedures SP
  on A.aggserialfn = SP.function_id
left outer join procedures DP
  on A.aggdeserialfn = DP.function_id
*/
where P.pronamespace = ?::oid
and (pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(?::varchar::xid))
order by P.oid
-- ] --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279867] results received
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279867] finished - execution time: 16 ms, fetching time: 6 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279868] 
select O.oid as op_id,
       O.xmin as state_number,
       oprname as op_name,
       oprkind as op_kind,
       oprleft as arg_left_type_id,
       oprright as arg_right_type_id,
       oprresult as arg_result_type_id,
       oprcode as func_main,
       pg_catalog.pg_get_userbyid(O.oprowner) as "owner"
from pg_catalog.pg_operator O
where oprnamespace = ?::oid
  and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279868] results received
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279868] finished - execution time: 14 ms, fetching time: 10 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279869] 
select oid as id,
       xmin as state_number,
       collname as name,
       collcollate as lc_collate,
       collctype as lc_ctype,
       pg_catalog.pg_get_userbyid(collowner) as "owner"
from pg_catalog.pg_collation
where collnamespace = ?::oid
  and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279869] results received
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279869] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279870] 
with types      as (select distinct
                           T.oid as type_id,
                           C.oid as class_id
                    from pg_catalog.pg_type T
                    join pg_catalog.pg_class C
                      on T.typrelid = C.oid
                    join pg_catalog.pg_attribute A
                      on C.oid = A.attrelid
                    where T.typnamespace = ?::oid
                      and pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid)
                      and T.typtype = 'c'::"char"
                      and C.relkind = 'c'::"char"),
     attributes as (select A.attrelid as class_id,
                           A.attnum   as att_position,
                           A.attname  as att_name,
                           pg_catalog.format_type(A.atttypid, A.atttypmod) as att_type,
                           A.attisdropped as att_dropped
                    from pg_catalog.pg_attribute A)
select type_id, att_position, att_name, att_type, att_dropped
from types natural join attributes
order by type_id::bigint, att_position
-- ] --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279870] results received
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279870] finished - execution time: 7 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279871] 
with types as (select distinct T.oid as type_id
               from pg_catalog.pg_type T
               join pg_catalog.pg_enum E
                 on T.oid = E.enumtypid
               where T.typnamespace = ?::oid
                 and T.typtype = 'e'::"char"
               and pg_catalog.age(E.xmin) <= pg_catalog.age(?::varchar::xid)
               )
select T.type_id as enum_id,
       pg_catalog.array_agg(E.enumlabel::varchar order by E.enumsortorder ) as enum_labels
from types T
join pg_catalog.pg_enum E
  on T.type_id = E.enumtypid
group by T.type_id
-- ] --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279871] results received
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279871] finished - execution time: 3 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279872] 
with T as ( select distinct T.oid as table_id, T.relname as table_name
            from pg_catalog.pg_class T,
                 pg_catalog.pg_attribute A
            where T.relnamespace = ?::oid
              and T.relkind in ('r', 'm', 'v', 'f', 'p')
              and (pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid))
              and A.attrelid = T.oid )
select T.table_id,
       C.attnum as column_position,
       C.attname as column_name,
       C.xmin as column_state_number,
       C.atttypmod as type_mod,
       C.attndims as dimensions_number,
       pg_catalog.format_type(C.atttypid, C.atttypmod) as type_spec,
       C.atttypid as type_id,
       C.attnotnull as mandatory,
       /* pg_catalog.pg_get_expr(D.adbin, 'pg_catalog.pg_attrdef'::regclass::oid) */D.adsrc  as column_default_expression,
       not C.attislocal as column_is_inherited,
       C.attfdwoptions as options,
       C.attisdropped as column_is_dropped,
       /* C.attidentity */null  as identity_kind
from T
  inner join pg_catalog.pg_attribute C on T.table_id = C.attrelid
  left outer join pg_catalog.pg_attrdef D on (C.attrelid, C.attnum) = (D.adrelid, D.adnum)
where attnum > 0
order by table_id, attnum
-- ] --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279872] results received
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279872] finished - execution time: 9 ms, fetching time: 39 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279873] 
with tab as ( select relnamespace as schema_id,
                     oid as table_id,
                     relkind as table_kind
              from pg_catalog.pg_class
              where relnamespace = ?::oid
                and relkind in ('r','m','v','p')),
    ind_head as ( select indrelid as table_id,
                         indexrelid as index_id,
                         indisunique as is_unique,
                         indisprimary as is_primary,
                         indkey as column_positions,
                         indclass as column_operators,
                         indoption as column_options,
                         pg_catalog.pg_get_expr(indpred, indrelid) as condition,
                         case when indexprs is not null
                             then pg_catalog.array_to_string(array(
                                      select case when indkey[k] = 0
                                             then chr(27) || pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
                                             else pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
                                             end
                                      from pg_catalog.generate_subscripts(indkey, 1) as k
                                      order by k),
                                  chr(28))
                             else null end as expressions
                  from pg_catalog.pg_index ),
    ind_stor as ( select cls.relnamespace as schema_id,
                         cls.oid as index_id,
                         cls.xmin as state_number,
                         cls.relname as index_name,
                         /* pg_catalog.pg_indexam_has_property(cls.relam, 'can_order') */am.amcanorder  as can_order
                  from pg_catalog.pg_class cls
                    /* */join pg_catalog.pg_am am on (cls.relam = am.oid)
                  where cls.relkind = 'i'
                    and pg_catalog.age(cls.xmin) <= pg_catalog.age(?::varchar::xid) )
select table_id, table_kind,
       index_name, index_id, state_number,
       is_unique, is_primary,
       column_positions, column_operators, column_options,
       condition, expressions, can_order
from tab natural join ind_head natural join ind_stor
-- ] --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279873] results received
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279873] finished - execution time: 5 ms, fetching time: 17 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279874] 
with T as ( select oid as table_id,
                   relkind as table_kind,
                   xmin as table_state_id
            from pg_catalog.pg_class
            where relkind in ('r','v','f','p')
              and relnamespace = ?::oid ),
     C as ( select conrelid as table_id,
                   oid::bigint as con_id,
                   xmin as con_state_id,
                   conname as con_name,
                   contype as con_kind,
                   conkey as con_columns,
                   conindid as index_id,
                   confrelid as ref_table_id,
                   confkey as ref_columns,
                   condeferrable as is_deferrable,
                   condeferred as is_init_deferred,
                   confupdtype as on_update,
                   confdeltype as on_delete,
                   /* conbin */consrc 
            from pg_catalog.pg_constraint
            where contype in ('p','u','f','c')
              and connamespace = ?::oid )
select table_id,
       table_kind,
       con_id,
       con_state_id::varchar::bigint as con_state_id,
       con_name,
       con_kind,
       con_columns,
       index_id,
       ref_table_id,
       is_deferrable,
       is_init_deferred,
       on_update,
       on_delete,
       /* pg_catalog.pg_get_expr(conbin, table_id) */consrc  as con_expression,
       ref_columns
from T natural join C
where pg_catalog.age(table_state_id) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(con_state_id) <= pg_catalog.age(?::varchar::xid)
order by pg_catalog.strpos('pufc', con_kind)
-- ] --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279874] results received
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279874] finished - execution time: 5 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279875] 
select R.ev_class as table_id,
       R.oid as rule_id,
       R.xmin as rule_state_number,
       R.rulename as rule_name,
       pg_catalog.translate(ev_type,'1234','SUID') as rule_event_code,
       R.ev_enabled as rule_fire_mode,
       R.is_instead as rule_is_instead
from pg_catalog.pg_rewrite R
where R.ev_class in (select oid
                     from pg_catalog.pg_class
                     where relnamespace = ?::oid)
  and pg_catalog.age(R.xmin) <= pg_catalog.age(?::varchar::xid)
  and R.rulename != '_RETURN'::name
order by R.ev_class::bigint, ev_type
-- ] --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279875] results received
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279875] finished - execution time: 3 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279876] 
select T.tgrelid as table_id,
       T.oid as trigger_id,
       T.xmin as trigger_state_number,
       T.tgname as trigger_name,
       T.tgfoid as function_id,
       T.tgtype & 31 as bits,
       T.tgdeferrable as is_deferrable,
       T.tginitdeferred as is_init_deferred,
       T.tgenabled as trigger_fire_mode
from pg_catalog.pg_trigger T
where T.tgrelid in (select oid
                    from pg_catalog.pg_class
                    where relnamespace = ?::oid)
  and pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid)
  and not T.tgisinternal
-- ] --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279876] results received
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279876] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279877] 
select D.objoid id, C.relkind as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select T.oid id, 'T' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, pg_catalog.translate(C.contype, 'pufc', 'kkxz') as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, 't' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, 'R' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, 'F' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, 'O' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, 'C' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)

-- ] --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279877] results received
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279877] finished - execution time: 14 ms, fetching time: 29 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279878] 
select distinct
       T.relkind as view_kind,
       T.oid as view_id,
       pg_catalog.pg_get_viewdef(T.oid) as source_text
from pg_catalog.pg_class T
  join pg_catalog.pg_namespace N on T.relnamespace = N.oid
  left outer join pg_catalog.pg_attribute A on (A.attrelid = T.oid)
where N.oid = ?::oid
  and T.relkind in ('m','v')
  and (pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid))
-- ] --------------------------------------------------
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279878] results received
-- 2020-05-25 21:46:38 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279878] finished - execution time: 101 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279879] 
with A as ( select oid as table_id, pg_catalog.upper(relkind) as table_kind
            from pg_catalog.pg_class
            where relnamespace = ?::oid
              and relkind in ('r', 'm', 'v', 'f', 'p') )
select table_kind,
       table_id,
       R.oid as rule_id,
       pg_catalog.pg_get_ruledef(R.oid) as source_text
from A join pg_catalog.pg_rewrite R
        on A.table_id = R.ev_class
where R.rulename != '_RETURN'::name
  and pg_catalog.age(R.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-25 21:46:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279879] results received
-- 2020-05-25 21:46:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279879] finished - execution time: 4 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279880] 
with system_languages as ( select oid as lang
                           from pg_catalog.pg_language
                           where lanname in ('c','internal') )
select oid as id,
       pg_catalog.pg_get_function_arguments(oid) as arguments_def,
       pg_catalog.pg_get_function_result(oid) as result_def,
       prosrc as source_text
from pg_catalog.pg_proc
where pronamespace = ?::oid
  and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)
  and not /* (prokind = 'a') */proisagg 
  and prolang not in (select lang from system_languages)
  and prosrc is not null
-- ] --------------------------------------------------
-- 2020-05-25 21:46:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279880] results received
-- 2020-05-25 21:46:40 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279880] finished - execution time: 5 ms, fetching time: 17 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:41 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279881] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-05-25 21:46:41 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279881] results received
-- 2020-05-25 21:46:41 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279881] finished - execution time: 3 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:41 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279882] 
with U as (select usesysid from pg_catalog.pg_user where usename = current_user),
          T as (
                select oid as sequence_id,
                       relname as sequence_name,
                       pg_catalog.pg_get_userbyid(relowner) as "owner",
                       case when relowner = (select usesysid from U) then trim(both '()' from pg_catalog.pg_sequence_parameters(oid)::varchar)
                       else null::varchar
                       end as sequence_params,
                       
                       xmin as sequence_state_number
                       from pg_catalog.pg_class
                         where relnamespace = ?::oid
                         and relkind = 'S'
                         and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)
                )
select sequence_id,
       sequence_name,
       pg_catalog.split_part(sequence_params, ',', 1)::bigint as next_value,
       pg_catalog.split_part(sequence_params, ',', 2)::bigint as min_value,
       pg_catalog.split_part(sequence_params, ',', 3)::bigint as max_value,
       pg_catalog.split_part(sequence_params, ',', 4)::bigint as inc_value,
       pg_catalog.lower(pg_catalog.split_part(sequence_params, ',', 5)) LIKE '%t%' as cycle_option,
       
       sequence_state_number,
       "owner"
from T
-- ] --------------------------------------------------
-- 2020-05-25 21:46:41 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279882] results received
-- 2020-05-25 21:46:41 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279882] finished - execution time: 45 ms, fetching time: 12 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:41 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279883] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-05-25 21:46:41 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279883] results received
-- 2020-05-25 21:46:41 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279883] finished - execution time: 9 ms, fetching time: 25 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:41 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279884] 
select T.oid as type_id,
       T.xmin as type_state_number,
       T.typname as type_name,
       T.typtype as type_sub_kind,
       T.typcategory as type_category,
       T.typrelid as class_id,
       T.typbasetype as base_type_id,
       case when T.typtype in ('c','e') then null
            else pg_catalog.format_type(T.typbasetype, T.typtypmod) end as type_def,
       T.typdefault as default_expression,
       T.typnotnull as mandatory,
       pg_catalog.pg_get_userbyid(T.typowner) as "owner"
from pg_catalog.pg_type T
         left outer join pg_catalog.pg_class C
             on T.typrelid = C.oid
where T.typnamespace = ?::oid
  and pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid)
  and (T.typtype in ('d','e') or C.relkind = 'c'::"char" or T.typtype = 'b' and (T.typelem = 0 OR T.typcategory <> 'A'))
order by 1
-- ] --------------------------------------------------
-- 2020-05-25 21:46:41 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279884] results received
-- 2020-05-25 21:46:41 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279884] finished - execution time: 4 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:41 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279885] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-05-25 21:46:41 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279885] results received
-- 2020-05-25 21:46:41 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279885] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:41 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279886] 
select T.relkind as table_kind,
       T.relname as table_name,
       T.oid as table_id,
       T.xmin as table_state_number,
       /* false */T.relhasoids  as table_with_oids,
       T.relnamespace as tablespace_id,
       T.reloptions as options,
       (select pg_catalog.array_agg(inhparent)::varchar from (select inhparent::bigint from pg_catalog.pg_inherits where T.oid = inhrelid order by inhseqno) as bts) as ancestors,
       (select pg_catalog.array_agg(inhrelid)::varchar from (select inhrelid::bigint from pg_catalog.pg_inherits where T.oid = inhparent order by inhrelid) as its) as successors,
       /* T.relispartition */false  as is_partition,
       /* pg_catalog.pg_get_partkeydef(T.oid) */null  as partition_key,
       /* pg_catalog.pg_get_expr(T.relpartbound, T.oid) */null  as partition_expression,
       pg_catalog.pg_get_userbyid(T.relowner) as "owner"
from pg_catalog.pg_class T
where relnamespace = ?::oid
  and relkind in ('r', 'm', 'v', 'f', 'p')
  and pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid)
order by table_kind, table_id
-- ] --------------------------------------------------
-- 2020-05-25 21:46:41 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279886] results received
-- 2020-05-25 21:46:41 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279886] finished - execution time: 5 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279887] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279887] results received
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279887] finished - execution time: 5 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279888] 
select ft.ftrelid as table_id,
       srv.srvname as table_server,
       ft.ftoptions as table_options,
       pg_catalog.pg_get_userbyid(cls.relowner) as "owner"
from pg_catalog.pg_foreign_table ft
     left outer join pg_catalog.pg_foreign_server srv on ft.ftserver = srv.oid
     join pg_catalog.pg_class cls on ft.ftrelid = cls.oid
where cls.relnamespace = ?::oid
  and pg_catalog.age(ft.xmin) <= pg_catalog.age(?::varchar::xid)
order by table_id
-- ] --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279888] results received
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279888] finished - execution time: 10 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279889] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279889] results received
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279889] finished - execution time: 1 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279890] 
with schema_procs as (select prorettype, proargtypes, proallargtypes
                      from pg_catalog.pg_proc
                      where pronamespace = ?::oid
                        and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)  ),
     schema_opers as (select oprleft, oprright, oprresult
                      from pg_catalog.pg_operator
                      where oprnamespace = ?::oid
                        and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)  ),
     schema_aggregates as (select A.aggtranstype , A.aggmtranstype 
                           from pg_catalog.pg_aggregate A
                           join pg_catalog.pg_proc P
                             on A.aggfnoid = P.oid
                           where P.pronamespace = ?::oid
                           and (pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(?::varchar::xid)) ),
     schema_arg_types as ( select prorettype as type_id
                           from schema_procs
                           union
                           select distinct unnest(proargtypes) as type_id
                           from schema_procs
                           union
                           select distinct unnest(proallargtypes) as type_id
                           from schema_procs
                           union
                           select oprleft as type_id
                           from schema_opers
                           where oprleft is not null
                           union
                           select oprright as type_id
                           from schema_opers
                           where oprright is not null
                           union
                           select oprresult as type_id
                           from schema_opers
                           where oprresult is not null
                           union
                           select aggtranstype::oid as type_id
                           from schema_aggregates
                           union
                           select aggmtranstype::oid as type_id
                           from schema_aggregates
                           
                           )
select type_id, pg_catalog.format_type(type_id, null) as type_spec
from schema_arg_types
where type_id <> 0
-- ] --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279890] results received
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279890] finished - execution time: 4 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279891] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279891] results received
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279891] finished - execution time: 1 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279892] 
with languages as (select oid as lang_oid, lanname as lang
                   from pg_catalog.pg_language),
     routines as (select proname as r_name,
                         prolang as lang_oid,
                         oid as r_id,
                         xmin as r_state_number,
                         proargnames as arg_names,
                         proargmodes as arg_modes,
                         proargtypes::int[] as in_arg_types,
                         proallargtypes::int[] as all_arg_types,
                         pg_catalog.pg_get_expr(proargdefaults, 0) as arg_defaults,
                         provariadic as arg_variadic_id,
                         prorettype as ret_type_id,
                         proretset as ret_set,
                         /* prokind */case when proiswindow then 'w'
                                                when proisagg then 'a'
                                                else 'f'
                                           end  as kind,
                         provolatile as volatile_kind,
                         proisstrict as is_strict,
                         prosecdef as is_security_definer,
                         proconfig as configuration_parameters,
                         procost as cost,
                         pg_catalog.pg_get_userbyid(proowner) as "owner",
                         prorows as rows ,
                         proleakproof as is_leakproof  /* ,
                         proparallel as concurrency_kind */
                  from pg_catalog.pg_proc
                  where pronamespace = ?::oid
                    and not /* (prokind = 'a') */proisagg 
                    and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid) )
select *
from routines natural join languages
-- ] --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279892] results received
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279892] finished - execution time: 5 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279893] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279893] results received
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279893] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279894] 
with procedures as (
  select P.oid as function_id,
         pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as function_name,
         P.prorettype as return_type
  from pg_catalog.pg_proc P
  join pg_catalog.pg_namespace N
    on P.pronamespace = N.oid
),
operators as (
  select O.oid as operator_id,
         pg_catalog.quote_ident(N.nspname) || '.' || O.oprname as operator_name
  from pg_catalog.pg_operator O
  join pg_catalog.pg_namespace N
    on O.oprnamespace = N.oid
)
select P.oid as aggregate_id,
       P.xmin as state_number,
       P.proname as aggregate_name,
       P.proargnames as arg_names,
       P.proargmodes as arg_modes,
       P.proargtypes::int[] as in_arg_types,
       P.proallargtypes::int[] as all_arg_types,
       A.aggtransfn::oid as transition_function_id,
       PT.function_name::text as transition_function_name,
       A.aggtranstype as transition_type,
       A.aggfinalfn::oid as final_function_id,
       case when A.aggfinalfn::oid = 0 then null else PF.function_name end as final_function_name,
       case when A.aggfinalfn::oid = 0 then 0 else PF.return_type end as final_return_type,
       A.agginitval as initial_value,
       A.aggsortop as sort_operator_id,
       case when A.aggsortop = 0 then null else O.operator_name end as sort_operator_name,
       pg_catalog.pg_get_userbyid(P.proowner) as "owner"
       ,
       A.aggfinalextra as final_extra,
       A.aggtransspace as state_size,
       A.aggmtransfn::oid as moving_transition_id,
       case when A.aggmtransfn::oid = 0 then null else FTP.function_name end as moving_transition_name,
       A.aggminvtransfn::oid as inverse_transition_id,
       case when A.aggminvtransfn::oid = 0 then null else ITP.function_name end as inverse_transition_name,
       A.aggmtranstype::oid as moving_state_type,
       A.aggmtransspace as moving_state_size,
       A.aggmfinalfn::oid as moving_final_id,
       case when A.aggmfinalfn::oid = 0 then null else FFP.function_name end as moving_final_name,
       A.aggmfinalextra as moving_final_extra,
       A.aggminitval as moving_initial_value,
       A.aggkind as aggregate_kind,
       A.aggnumdirectargs as direct_args
       
       /* ,
       A.aggcombinefn::oid as combine_function_id,
       case when A.aggcombinefn::oid = 0 then null else CP.function_name end as combine_function_name,
       A.aggserialfn::oid as serialization_function_id,
       case when A.aggserialfn::oid = 0 then null else SP.function_name end as serialization_function_name,
       A.aggdeserialfn::oid as deserialization_function_id,
       case when A.aggdeserialfn::oid = 0 then null else DP.function_name end as deserialization_function_name,
       P.proparallel as concurrency_kind
       */
from pg_catalog.pg_aggregate A
join pg_catalog.pg_proc P
  on A.aggfnoid = P.oid
join procedures PT
  on A.aggtransfn::oid = PT.function_id
left outer join procedures PF
  on A.aggfinalfn::oid = PF.function_id
left outer join operators O
  on A.aggsortop = O.operator_id
left outer join procedures FTP
  on A.aggmtransfn = FTP.function_id
left outer join procedures ITP
  on A.aggminvtransfn = ITP.function_id
left outer join procedures FFP
  on A.aggmfinalfn = FFP.function_id

/* left outer join procedures CP
  on A.aggcombinefn = CP.function_id
left outer join procedures SP
  on A.aggserialfn = SP.function_id
left outer join procedures DP
  on A.aggdeserialfn = DP.function_id
*/
where P.pronamespace = ?::oid
and (pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(?::varchar::xid))
order by P.oid
-- ] --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279894] results received
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279894] finished - execution time: 11 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279895] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279895] results received
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279895] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279896] 
select O.oid as op_id,
       O.xmin as state_number,
       oprname as op_name,
       oprkind as op_kind,
       oprleft as arg_left_type_id,
       oprright as arg_right_type_id,
       oprresult as arg_result_type_id,
       oprcode as func_main,
       pg_catalog.pg_get_userbyid(O.oprowner) as "owner"
from pg_catalog.pg_operator O
where oprnamespace = ?::oid
  and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279896] results received
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279896] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279897] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279897] results received
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279897] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279898] 
select oid as id,
       xmin as state_number,
       collname as name,
       collcollate as lc_collate,
       collctype as lc_ctype,
       pg_catalog.pg_get_userbyid(collowner) as "owner"
from pg_catalog.pg_collation
where collnamespace = ?::oid
  and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279898] results received
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279898] finished - execution time: 2 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279899] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279899] results received
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279899] finished - execution time: 1 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279900] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279900] results received
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279900] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279901] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279901] results received
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279901] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279902] 
with T as ( select distinct T.oid as table_id, T.relname as table_name
            from pg_catalog.pg_class T,
                 pg_catalog.pg_attribute A
            where T.relnamespace = ?::oid
              and T.relkind in ('r', 'm', 'v', 'f', 'p')
              and (pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid))
              and A.attrelid = T.oid )
select T.table_id,
       C.attnum as column_position,
       C.attname as column_name,
       C.xmin as column_state_number,
       C.atttypmod as type_mod,
       C.attndims as dimensions_number,
       pg_catalog.format_type(C.atttypid, C.atttypmod) as type_spec,
       C.atttypid as type_id,
       C.attnotnull as mandatory,
       /* pg_catalog.pg_get_expr(D.adbin, 'pg_catalog.pg_attrdef'::regclass::oid) */D.adsrc  as column_default_expression,
       not C.attislocal as column_is_inherited,
       C.attfdwoptions as options,
       C.attisdropped as column_is_dropped,
       /* C.attidentity */null  as identity_kind
from T
  inner join pg_catalog.pg_attribute C on T.table_id = C.attrelid
  left outer join pg_catalog.pg_attrdef D on (C.attrelid, C.attnum) = (D.adrelid, D.adnum)
where attnum > 0
order by table_id, attnum
-- ] --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279902] results received
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279902] finished - execution time: 7 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279903] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279903] results received
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279903] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279904] 
with tab as ( select relnamespace as schema_id,
                     oid as table_id,
                     relkind as table_kind
              from pg_catalog.pg_class
              where relnamespace = ?::oid
                and relkind in ('r','m','v','p')),
    ind_head as ( select indrelid as table_id,
                         indexrelid as index_id,
                         indisunique as is_unique,
                         indisprimary as is_primary,
                         indkey as column_positions,
                         indclass as column_operators,
                         indoption as column_options,
                         pg_catalog.pg_get_expr(indpred, indrelid) as condition,
                         case when indexprs is not null
                             then pg_catalog.array_to_string(array(
                                      select case when indkey[k] = 0
                                             then chr(27) || pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
                                             else pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
                                             end
                                      from pg_catalog.generate_subscripts(indkey, 1) as k
                                      order by k),
                                  chr(28))
                             else null end as expressions
                  from pg_catalog.pg_index ),
    ind_stor as ( select cls.relnamespace as schema_id,
                         cls.oid as index_id,
                         cls.xmin as state_number,
                         cls.relname as index_name,
                         /* pg_catalog.pg_indexam_has_property(cls.relam, 'can_order') */am.amcanorder  as can_order
                  from pg_catalog.pg_class cls
                    /* */join pg_catalog.pg_am am on (cls.relam = am.oid)
                  where cls.relkind = 'i'
                    and pg_catalog.age(cls.xmin) <= pg_catalog.age(?::varchar::xid) )
select table_id, table_kind,
       index_name, index_id, state_number,
       is_unique, is_primary,
       column_positions, column_operators, column_options,
       condition, expressions, can_order
from tab natural join ind_head natural join ind_stor
-- ] --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279904] results received
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279904] finished - execution time: 4 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279905] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279905] results received
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279905] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279906] 
with T as ( select oid as table_id,
                   relkind as table_kind,
                   xmin as table_state_id
            from pg_catalog.pg_class
            where relkind in ('r','v','f','p')
              and relnamespace = ?::oid ),
     C as ( select conrelid as table_id,
                   oid::bigint as con_id,
                   xmin as con_state_id,
                   conname as con_name,
                   contype as con_kind,
                   conkey as con_columns,
                   conindid as index_id,
                   confrelid as ref_table_id,
                   confkey as ref_columns,
                   condeferrable as is_deferrable,
                   condeferred as is_init_deferred,
                   confupdtype as on_update,
                   confdeltype as on_delete,
                   /* conbin */consrc 
            from pg_catalog.pg_constraint
            where contype in ('p','u','f','c')
              and connamespace = ?::oid )
select table_id,
       table_kind,
       con_id,
       con_state_id::varchar::bigint as con_state_id,
       con_name,
       con_kind,
       con_columns,
       index_id,
       ref_table_id,
       is_deferrable,
       is_init_deferred,
       on_update,
       on_delete,
       /* pg_catalog.pg_get_expr(conbin, table_id) */consrc  as con_expression,
       ref_columns
from T natural join C
where pg_catalog.age(table_state_id) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(con_state_id) <= pg_catalog.age(?::varchar::xid)
order by pg_catalog.strpos('pufc', con_kind)
-- ] --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279906] results received
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279906] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279907] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279907] results received
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279907] finished - execution time: 12 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279908] 
select R.ev_class as table_id,
       R.oid as rule_id,
       R.xmin as rule_state_number,
       R.rulename as rule_name,
       pg_catalog.translate(ev_type,'1234','SUID') as rule_event_code,
       R.ev_enabled as rule_fire_mode,
       R.is_instead as rule_is_instead
from pg_catalog.pg_rewrite R
where R.ev_class in (select oid
                     from pg_catalog.pg_class
                     where relnamespace = ?::oid)
  and pg_catalog.age(R.xmin) <= pg_catalog.age(?::varchar::xid)
  and R.rulename != '_RETURN'::name
order by R.ev_class::bigint, ev_type
-- ] --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279908] results received
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279908] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279909] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279909] results received
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279909] finished - execution time: 10 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279910] 
select T.tgrelid as table_id,
       T.oid as trigger_id,
       T.xmin as trigger_state_number,
       T.tgname as trigger_name,
       T.tgfoid as function_id,
       T.tgtype & 31 as bits,
       T.tgdeferrable as is_deferrable,
       T.tginitdeferred as is_init_deferred,
       T.tgenabled as trigger_fire_mode
from pg_catalog.pg_trigger T
where T.tgrelid in (select oid
                    from pg_catalog.pg_class
                    where relnamespace = ?::oid)
  and pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid)
  and not T.tgisinternal
-- ] --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279910] results received
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279910] finished - execution time: 3 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279911] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279911] results received
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279911] finished - execution time: 2 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279912] 
select D.objoid id, C.relkind as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select T.oid id, 'T' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, pg_catalog.translate(C.contype, 'pufc', 'kkxz') as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, 't' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, 'R' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, 'F' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, 'O' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, 'C' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)

-- ] --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279912] results received
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279912] finished - execution time: 8 ms, fetching time: 12 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279913] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279913] results received
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279913] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279914] 
select distinct
       T.relkind as view_kind,
       T.oid as view_id,
       pg_catalog.pg_get_viewdef(T.oid) as source_text
from pg_catalog.pg_class T
  join pg_catalog.pg_namespace N on T.relnamespace = N.oid
  left outer join pg_catalog.pg_attribute A on (A.attrelid = T.oid)
where N.oid = ?::oid
  and T.relkind in ('m','v')
  and (pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid))
-- ] --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279914] results received
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279914] finished - execution time: 3 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279915] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279915] results received
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279915] finished - execution time: 4 ms, fetching time: 6 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279916] 
with A as ( select oid as table_id, pg_catalog.upper(relkind) as table_kind
            from pg_catalog.pg_class
            where relnamespace = ?::oid
              and relkind in ('r', 'm', 'v', 'f', 'p') )
select table_kind,
       table_id,
       R.oid as rule_id,
       pg_catalog.pg_get_ruledef(R.oid) as source_text
from A join pg_catalog.pg_rewrite R
        on A.table_id = R.ev_class
where R.rulename != '_RETURN'::name
  and pg_catalog.age(R.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279916] results received
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279916] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279917] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279917] results received
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279917] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279918] 
with system_languages as ( select oid as lang
                           from pg_catalog.pg_language
                           where lanname in ('c','internal') )
select oid as id,
       pg_catalog.pg_get_function_arguments(oid) as arguments_def,
       pg_catalog.pg_get_function_result(oid) as result_def,
       prosrc as source_text
from pg_catalog.pg_proc
where pronamespace = ?::oid
  and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)
  and not /* (prokind = 'a') */proisagg 
  and prolang not in (select lang from system_languages)
  and prosrc is not null
-- ] --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279918] results received
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279918] finished - execution time: 4 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279919] 
select distinct connamespace as schema_id
from pg_catalog.pg_constraint F,
     pg_catalog.pg_class O
where F.contype = 'f'
  and F.confrelid = O.oid
  and O.relnamespace in (?)
-- ] --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279919] results received
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279919] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279920] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279920] results received
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1095253610] [statement id: 1385279920] finished - execution time: 4 ms, fetching time: 2 ms, total result sets count: 1
-- 2020-05-25 21:46:42 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 1095253610] disconnected
-- 2020-06-01 14:44:49 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 1247375698] connected
-- [ --------------------------------------------------
-- 2020-06-01 14:44:49 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912330] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912330] results received
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912330] finished - execution time: 310 ms, fetching time: 37 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912331] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912331] results received
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912331] finished - execution time: 143 ms, fetching time: 10 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912332] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912332] results received
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912332] finished - execution time: 103 ms, fetching time: 41 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912333] 
select R.oid::bigint as role_id, rolname as role_name,
  rolsuper is_super, rolinherit is_inherit,
  rolcreaterole can_createrole, rolcreatedb can_createdb,
  rolcanlogin can_login, rolreplication /* false */ is_replication,
  rolconnlimit conn_limit, rolvaliduntil valid_until,
  /* rolbypassrls */false  bypass_rls, rolconfig config,
  D.description
from pg_catalog.pg_roles R
  left join pg_catalog.pg_shdescription D on D.objoid = R.oid
-- ] --------------------------------------------------
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912333] results received
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912333] finished - execution time: 34 ms, fetching time: 9 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912334] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912334] results received
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912334] finished - execution time: 4 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912335] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912335] results received
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912335] finished - execution time: 4 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912336] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912336] results received
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912336] finished - execution time: 4 ms, fetching time: 7 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912337] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912337] results received
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912337] finished - execution time: 4 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912338] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912338] results received
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912338] finished - execution time: 4 ms, fetching time: 9 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912339] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912339] results received
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912339] finished - execution time: 3 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912340] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912340] results received
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912340] finished - execution time: 84 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912341] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912341] results received
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912341] finished - execution time: 41 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912342] 
select usesuper
from pg_user
where usename = current_user
-- ] --------------------------------------------------
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912342] results received
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912342] finished - execution time: 4 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912343] 
select distinct oid
from pg_catalog.pg_am
union
select distinct oid
from pg_catalog.pg_foreign_data_wrapper
union
select distinct oid
from pg_catalog.pg_foreign_server
union
select distinct oid
from pg_catalog.pg_extension

union
select distinct oid
from pg_catalog.pg_user_mapping

-- ] --------------------------------------------------
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912343] results received
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912343] finished - execution time: 70 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:50 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912344] 
select D.objoid id
from pg_catalog.pg_description D
where D.classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
-- ] --------------------------------------------------
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912344] results received
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912344] finished - execution time: 270 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912345] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912345] results received
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912345] finished - execution time: 6 ms, fetching time: 6 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912346] 
select A.oid as access_method_id,
       A.xmin as state_number,
       A.amname as access_method_name
       /* ,
       A.amhandler::oid as handler_id,
       pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as handler_name,
       A.amtype as access_method_type
       */
from pg_am A
  /* join pg_proc P on A.amhandler::oid = P.oid
  join pg_namespace N on P.pronamespace = N.oid
  */
where pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912346] results received
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912346] finished - execution time: 3 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912347] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912347] results received
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912347] finished - execution time: 3 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912348] 
select fdw.oid as id,
       fdw.xmin as state_number,
       fdw.fdwname as name,
       pr.proname as handler,
       nspc.nspname as handler_schema,
       pr2.proname as validator,
       nspc2.nspname as validator_schema,
       fdw.fdwoptions as options,
       pg_catalog.pg_get_userbyid(fdw.fdwowner) as "owner"
from pg_catalog.pg_foreign_data_wrapper fdw
     left outer join pg_catalog.pg_proc pr on fdw.fdwhandler = pr.oid
     left outer join pg_catalog.pg_namespace nspc on pr.pronamespace = nspc.oid
     left outer join pg_catalog.pg_proc pr2 on fdw.fdwvalidator = pr2.oid
     left outer join pg_catalog.pg_namespace nspc2 on pr2.pronamespace = nspc2.oid
  where pg_catalog.age(fdw.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912348] results received
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912348] finished - execution time: 30 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912349] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912349] results received
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912349] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912350] 
select srv.oid as id,
       srv.srvfdw as fdw_id,
       srv.xmin as state_number,
       srv.srvname as name,
       srv.srvtype as type,
       srv.srvversion as version,
       srv.srvoptions as options,
       pg_catalog.pg_get_userbyid(srv.srvowner) as "owner"
from pg_catalog.pg_foreign_server srv
  where pg_catalog.age(srv.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912350] results received
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912350] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912351] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912351] results received
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912351] finished - execution time: 3 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912352] 
select pg_extension.oid as id,
       pg_extension.xmin as state_number,
       extname as name,
       extversion as version,
       extnamespace as schema_id,
       nspname as schema_name,
       array(select target
             from pg_extension_update_paths(extname)
             where source = extversion and path is not null) as available_updates
from pg_catalog.pg_extension
  join pg_namespace on pg_extension.extnamespace = pg_namespace.oid
where pg_catalog.age(pg_extension.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912352] results received
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912352] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912353] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912353] results received
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912353] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912354] 
select D.objoid id, case
    when 'pg_catalog.pg_am'::regclass = classoid then 'A'
    when 'pg_catalog.pg_foreign_data_wrapper'::regclass = classoid then 'W'
    when 'pg_catalog.pg_foreign_server'::regclass = classoid then 'S'
    when 'pg_catalog.pg_extension'::regclass = classoid then 'E'
    
  end as kind,
  D.objsubid sub_id, D.description
from pg_catalog.pg_description D
where classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912354] results received
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912354] finished - execution time: 15 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912355] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912355] results received
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912355] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912356] 
select 'sequence' as dependent_kind,
       'table' as owner_kind,
       D.objid as dependent_id,
       D.refobjid as owner_id,
       D.refobjsubid as owner_subobject_id
from pg_depend D
  join pg_class C_SEQ on D.objid = C_SEQ.oid
  join pg_class C_TAB on D.refobjid = C_TAB.oid
where C_SEQ.relkind = 'S'
  and C_TAB.relkind = 'r'
  and D.refobjsubid <> 0
  and (D.deptype = 'a' or D.deptype = 'i')
-- ] --------------------------------------------------
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912356] results received
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912356] finished - execution time: 26 ms, fetching time: 7 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:51 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912357] 
with saved_age as (select greatest(pg_catalog.age(?::varchar::xid), pg_catalog.age(?::varchar::xid)) as "value")
select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
(
  select X.last_tx as last_tx
  from (
    (
    select xmin as last_tx
      from pg_catalog.pg_type
      where typnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_class
      where relnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_proc
      where pronamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_operator
      where oprnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select A.xmin as last_tx
      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
      where K.relnamespace = ?::oid
      order by pg_catalog.age(A.xmin)
      limit 1
    )
    union all
    (
    select E.xmin as last_tx
      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
      where T.typnamespace = ?::oid
      order by pg_catalog.age(E.xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_constraint
      where connamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select CO.xmin as last_tx
      from pg_catalog.pg_collation CO
      where CO.collnamespace = ?::oid
      order by pg_catalog.age(CO.xmin)
      limit 1
    )
    union all
    
    (
    select IX.xmin as last_tx
      from pg_catalog.pg_index IX,
           pg_catalog.pg_class IC
      where IC.oid = IX.indrelid
        and IC.relnamespace = ?::oid
        order by pg_catalog.age(IX.xmin)
        limit 1
    )
    union all
    (
    select RU.xmin as last_tx
      from pg_catalog.pg_rewrite RU,
           pg_catalog.pg_class RC
      where RC.oid = RU.ev_class
        and RC.relnamespace = ?::oid
        order by pg_catalog.age(RU.xmin)
        limit 1
    )
    union all
    (
    select TG.xmin as last_tx
      from pg_catalog.pg_trigger TG,
           pg_catalog.pg_class TC
      where TC.oid = TG.tgrelid
        and TC.relnamespace = ?::oid
        order by pg_catalog.age(TG.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_class C on C.oid = D.objoid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_constraint C on C.oid = D.objoid
      where C.connamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_trigger T on T.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = T.tgrelid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_rewrite R on R.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = R.ev_class
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_proc P on P.oid = D.objoid
      where P.pronamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_type T on T.oid = D.objoid
      where T.typnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_operator O on O.oid = D.objoid
      where O.oprnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_collation C on C.oid = D.objoid
      where C.collnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    
  ) X
  order by pg_catalog.age(X.last_tx)
  limit 1
) C, saved_age SA
-- ] --------------------------------------------------
-- 2020-06-01 14:44:52 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912357] results received
-- 2020-06-01 14:44:52 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912357] finished - execution time: 765 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:52 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912358] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-01 14:44:52 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912358] results received
-- 2020-06-01 14:44:52 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912358] finished - execution time: 3 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:52 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912359] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-01 14:44:52 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912359] results received
-- 2020-06-01 14:44:52 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912359] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:52 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912360] 
select distinct oid
from pg_catalog.pg_type
where typnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_class
where relnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_proc
where pronamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_operator
where oprnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_constraint
where connamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_collation
where collnamespace = ?::oid
union

select distinct IX.indexrelid
from pg_catalog.pg_index IX,
     pg_catalog.pg_class IC
where IC.oid = IX.indrelid
  and IC.relnamespace = ?::oid
union
select distinct RU.oid
from pg_catalog.pg_rewrite RU,
     pg_catalog.pg_class RC
where RC.oid = RU.ev_class
  and RC.relnamespace = ?::oid
  and not RU.rulename = '_RETURN'
union
select distinct TG.oid
from pg_catalog.pg_trigger TG,
     pg_catalog.pg_class TC
where TC.oid = TG.tgrelid
  and TC.relnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-01 14:44:52 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912360] results received
-- 2020-06-01 14:44:52 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912360] finished - execution time: 37 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:52 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912361] 
select D.objoid id, pg_catalog.array_agg(D.objsubid) sub_ids
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
group by D.objoid
union all
select T.oid id, pg_catalog.array_agg(D.objsubid)
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
group by T.oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-01 14:44:52 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912361] results received
-- 2020-06-01 14:44:52 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912361] finished - execution time: 10 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:52 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912362] 
with saved_age as (select greatest(pg_catalog.age(?::varchar::xid), pg_catalog.age(?::varchar::xid)) as "value")
select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
(
  select X.last_tx as last_tx
  from (
    (
    select xmin as last_tx
      from pg_catalog.pg_type
      where typnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_class
      where relnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_proc
      where pronamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_operator
      where oprnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select A.xmin as last_tx
      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
      where K.relnamespace = ?::oid
      order by pg_catalog.age(A.xmin)
      limit 1
    )
    union all
    (
    select E.xmin as last_tx
      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
      where T.typnamespace = ?::oid
      order by pg_catalog.age(E.xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_constraint
      where connamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select CO.xmin as last_tx
      from pg_catalog.pg_collation CO
      where CO.collnamespace = ?::oid
      order by pg_catalog.age(CO.xmin)
      limit 1
    )
    union all
    
    (
    select IX.xmin as last_tx
      from pg_catalog.pg_index IX,
           pg_catalog.pg_class IC
      where IC.oid = IX.indrelid
        and IC.relnamespace = ?::oid
        order by pg_catalog.age(IX.xmin)
        limit 1
    )
    union all
    (
    select RU.xmin as last_tx
      from pg_catalog.pg_rewrite RU,
           pg_catalog.pg_class RC
      where RC.oid = RU.ev_class
        and RC.relnamespace = ?::oid
        order by pg_catalog.age(RU.xmin)
        limit 1
    )
    union all
    (
    select TG.xmin as last_tx
      from pg_catalog.pg_trigger TG,
           pg_catalog.pg_class TC
      where TC.oid = TG.tgrelid
        and TC.relnamespace = ?::oid
        order by pg_catalog.age(TG.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_class C on C.oid = D.objoid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_constraint C on C.oid = D.objoid
      where C.connamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_trigger T on T.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = T.tgrelid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_rewrite R on R.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = R.ev_class
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_proc P on P.oid = D.objoid
      where P.pronamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_type T on T.oid = D.objoid
      where T.typnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_operator O on O.oid = D.objoid
      where O.oprnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_collation C on C.oid = D.objoid
      where C.collnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    
  ) X
  order by pg_catalog.age(X.last_tx)
  limit 1
) C, saved_age SA
-- ] --------------------------------------------------
-- 2020-06-01 14:44:52 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912362] results received
-- 2020-06-01 14:44:52 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912362] finished - execution time: 14 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:52 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912363] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-01 14:44:52 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912363] results received
-- 2020-06-01 14:44:52 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912363] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:52 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912364] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-01 14:44:52 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912364] results received
-- 2020-06-01 14:44:52 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912364] finished - execution time: 3 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:52 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912365] 
select distinct oid
from pg_catalog.pg_type
where typnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_class
where relnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_proc
where pronamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_operator
where oprnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_constraint
where connamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_collation
where collnamespace = ?::oid
union

select distinct IX.indexrelid
from pg_catalog.pg_index IX,
     pg_catalog.pg_class IC
where IC.oid = IX.indrelid
  and IC.relnamespace = ?::oid
union
select distinct RU.oid
from pg_catalog.pg_rewrite RU,
     pg_catalog.pg_class RC
where RC.oid = RU.ev_class
  and RC.relnamespace = ?::oid
  and not RU.rulename = '_RETURN'
union
select distinct TG.oid
from pg_catalog.pg_trigger TG,
     pg_catalog.pg_class TC
where TC.oid = TG.tgrelid
  and TC.relnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-01 14:44:52 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912365] results received
-- 2020-06-01 14:44:52 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912365] finished - execution time: 8 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:52 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912366] 
select D.objoid id, pg_catalog.array_agg(D.objsubid) sub_ids
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
group by D.objoid
union all
select T.oid id, pg_catalog.array_agg(D.objsubid)
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
group by T.oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-01 14:44:52 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912366] results received
-- 2020-06-01 14:44:52 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912366] finished - execution time: 127 ms, fetching time: 64 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912367] 
with saved_age as (select greatest(pg_catalog.age(?::varchar::xid), pg_catalog.age(?::varchar::xid)) as "value")
select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
(
  select X.last_tx as last_tx
  from (
    (
    select xmin as last_tx
      from pg_catalog.pg_type
      where typnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_class
      where relnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_proc
      where pronamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_operator
      where oprnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select A.xmin as last_tx
      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
      where K.relnamespace = ?::oid
      order by pg_catalog.age(A.xmin)
      limit 1
    )
    union all
    (
    select E.xmin as last_tx
      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
      where T.typnamespace = ?::oid
      order by pg_catalog.age(E.xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_constraint
      where connamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select CO.xmin as last_tx
      from pg_catalog.pg_collation CO
      where CO.collnamespace = ?::oid
      order by pg_catalog.age(CO.xmin)
      limit 1
    )
    union all
    
    (
    select IX.xmin as last_tx
      from pg_catalog.pg_index IX,
           pg_catalog.pg_class IC
      where IC.oid = IX.indrelid
        and IC.relnamespace = ?::oid
        order by pg_catalog.age(IX.xmin)
        limit 1
    )
    union all
    (
    select RU.xmin as last_tx
      from pg_catalog.pg_rewrite RU,
           pg_catalog.pg_class RC
      where RC.oid = RU.ev_class
        and RC.relnamespace = ?::oid
        order by pg_catalog.age(RU.xmin)
        limit 1
    )
    union all
    (
    select TG.xmin as last_tx
      from pg_catalog.pg_trigger TG,
           pg_catalog.pg_class TC
      where TC.oid = TG.tgrelid
        and TC.relnamespace = ?::oid
        order by pg_catalog.age(TG.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_class C on C.oid = D.objoid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_constraint C on C.oid = D.objoid
      where C.connamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_trigger T on T.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = T.tgrelid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_rewrite R on R.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = R.ev_class
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_proc P on P.oid = D.objoid
      where P.pronamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_type T on T.oid = D.objoid
      where T.typnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_operator O on O.oid = D.objoid
      where O.oprnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_collation C on C.oid = D.objoid
      where C.collnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    
  ) X
  order by pg_catalog.age(X.last_tx)
  limit 1
) C, saved_age SA
-- ] --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912367] results received
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912367] finished - execution time: 14 ms, fetching time: 9 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912368] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912368] results received
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912368] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912369] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912369] results received
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912369] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912370] 
select distinct oid
from pg_catalog.pg_type
where typnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_class
where relnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_proc
where pronamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_operator
where oprnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_constraint
where connamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_collation
where collnamespace = ?::oid
union

select distinct IX.indexrelid
from pg_catalog.pg_index IX,
     pg_catalog.pg_class IC
where IC.oid = IX.indrelid
  and IC.relnamespace = ?::oid
union
select distinct RU.oid
from pg_catalog.pg_rewrite RU,
     pg_catalog.pg_class RC
where RC.oid = RU.ev_class
  and RC.relnamespace = ?::oid
  and not RU.rulename = '_RETURN'
union
select distinct TG.oid
from pg_catalog.pg_trigger TG,
     pg_catalog.pg_class TC
where TC.oid = TG.tgrelid
  and TC.relnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912370] results received
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912370] finished - execution time: 5 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912371] 
select D.objoid id, pg_catalog.array_agg(D.objsubid) sub_ids
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
group by D.objoid
union all
select T.oid id, pg_catalog.array_agg(D.objsubid)
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
group by T.oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912371] results received
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912371] finished - execution time: 30 ms, fetching time: 6 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912372] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912372] results received
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912372] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912373] 
with U as (select usesysid from pg_catalog.pg_user where usename = current_user),
          T as (
                select oid as sequence_id,
                       relname as sequence_name,
                       pg_catalog.pg_get_userbyid(relowner) as "owner",
                       case when relowner = (select usesysid from U) then trim(both '()' from pg_catalog.pg_sequence_parameters(oid)::varchar)
                       else null::varchar
                       end as sequence_params,
                       
                       xmin as sequence_state_number
                       from pg_catalog.pg_class
                         where relnamespace = ?::oid
                         and relkind = 'S'
                         and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)
                )
select sequence_id,
       sequence_name,
       pg_catalog.split_part(sequence_params, ',', 1)::bigint as next_value,
       pg_catalog.split_part(sequence_params, ',', 2)::bigint as min_value,
       pg_catalog.split_part(sequence_params, ',', 3)::bigint as max_value,
       pg_catalog.split_part(sequence_params, ',', 4)::bigint as inc_value,
       pg_catalog.lower(pg_catalog.split_part(sequence_params, ',', 5)) LIKE '%t%' as cycle_option,
       
       sequence_state_number,
       "owner"
from T
-- ] --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912373] results received
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912373] finished - execution time: 4 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912374] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912374] results received
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912374] finished - execution time: 4 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912375] 
select T.oid as type_id,
       T.xmin as type_state_number,
       T.typname as type_name,
       T.typtype as type_sub_kind,
       T.typcategory as type_category,
       T.typrelid as class_id,
       T.typbasetype as base_type_id,
       case when T.typtype in ('c','e') then null
            else pg_catalog.format_type(T.typbasetype, T.typtypmod) end as type_def,
       T.typdefault as default_expression,
       T.typnotnull as mandatory,
       pg_catalog.pg_get_userbyid(T.typowner) as "owner"
from pg_catalog.pg_type T
         left outer join pg_catalog.pg_class C
             on T.typrelid = C.oid
where T.typnamespace = ?::oid
  and pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid)
  and (T.typtype in ('d','e') or C.relkind = 'c'::"char" or T.typtype = 'b' and (T.typelem = 0 OR T.typcategory <> 'A'))
order by 1
-- ] --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912375] results received
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912375] finished - execution time: 4 ms, fetching time: 7 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912376] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912376] results received
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912376] finished - execution time: 2 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912377] 
select T.relkind as table_kind,
       T.relname as table_name,
       T.oid as table_id,
       T.xmin as table_state_number,
       /* false */T.relhasoids  as table_with_oids,
       T.relnamespace as tablespace_id,
       T.reloptions as options,
       (select pg_catalog.array_agg(inhparent)::varchar from (select inhparent::bigint from pg_catalog.pg_inherits where T.oid = inhrelid order by inhseqno) as bts) as ancestors,
       (select pg_catalog.array_agg(inhrelid)::varchar from (select inhrelid::bigint from pg_catalog.pg_inherits where T.oid = inhparent order by inhrelid) as its) as successors,
       /* T.relispartition */false  as is_partition,
       /* pg_catalog.pg_get_partkeydef(T.oid) */null  as partition_key,
       /* pg_catalog.pg_get_expr(T.relpartbound, T.oid) */null  as partition_expression,
       pg_catalog.pg_get_userbyid(T.relowner) as "owner"
from pg_catalog.pg_class T
where relnamespace = ?::oid
  and relkind in ('r', 'm', 'v', 'f', 'p')
  and pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid)
order by table_kind, table_id
-- ] --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912377] results received
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912377] finished - execution time: 33 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912378] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912378] results received
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912378] finished - execution time: 10 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912379] 
select ft.ftrelid as table_id,
       srv.srvname as table_server,
       ft.ftoptions as table_options,
       pg_catalog.pg_get_userbyid(cls.relowner) as "owner"
from pg_catalog.pg_foreign_table ft
     left outer join pg_catalog.pg_foreign_server srv on ft.ftserver = srv.oid
     join pg_catalog.pg_class cls on ft.ftrelid = cls.oid
where cls.relnamespace = ?::oid
  and pg_catalog.age(ft.xmin) <= pg_catalog.age(?::varchar::xid)
order by table_id
-- ] --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912379] results received
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912379] finished - execution time: 15 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912380] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912380] results received
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912380] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912381] 
with schema_procs as (select prorettype, proargtypes, proallargtypes
                      from pg_catalog.pg_proc
                      where pronamespace = ?::oid
                        and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)  ),
     schema_opers as (select oprleft, oprright, oprresult
                      from pg_catalog.pg_operator
                      where oprnamespace = ?::oid
                        and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)  ),
     schema_aggregates as (select A.aggtranstype , A.aggmtranstype 
                           from pg_catalog.pg_aggregate A
                           join pg_catalog.pg_proc P
                             on A.aggfnoid = P.oid
                           where P.pronamespace = ?::oid
                           and (pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(?::varchar::xid)) ),
     schema_arg_types as ( select prorettype as type_id
                           from schema_procs
                           union
                           select distinct unnest(proargtypes) as type_id
                           from schema_procs
                           union
                           select distinct unnest(proallargtypes) as type_id
                           from schema_procs
                           union
                           select oprleft as type_id
                           from schema_opers
                           where oprleft is not null
                           union
                           select oprright as type_id
                           from schema_opers
                           where oprright is not null
                           union
                           select oprresult as type_id
                           from schema_opers
                           where oprresult is not null
                           union
                           select aggtranstype::oid as type_id
                           from schema_aggregates
                           union
                           select aggmtranstype::oid as type_id
                           from schema_aggregates
                           
                           )
select type_id, pg_catalog.format_type(type_id, null) as type_spec
from schema_arg_types
where type_id <> 0
-- ] --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912381] results received
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912381] finished - execution time: 40 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912382] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912382] results received
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912382] finished - execution time: 3 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912383] 
with languages as (select oid as lang_oid, lanname as lang
                   from pg_catalog.pg_language),
     routines as (select proname as r_name,
                         prolang as lang_oid,
                         oid as r_id,
                         xmin as r_state_number,
                         proargnames as arg_names,
                         proargmodes as arg_modes,
                         proargtypes::int[] as in_arg_types,
                         proallargtypes::int[] as all_arg_types,
                         pg_catalog.pg_get_expr(proargdefaults, 0) as arg_defaults,
                         provariadic as arg_variadic_id,
                         prorettype as ret_type_id,
                         proretset as ret_set,
                         /* prokind */case when proiswindow then 'w'
                                                when proisagg then 'a'
                                                else 'f'
                                           end  as kind,
                         provolatile as volatile_kind,
                         proisstrict as is_strict,
                         prosecdef as is_security_definer,
                         proconfig as configuration_parameters,
                         procost as cost,
                         pg_catalog.pg_get_userbyid(proowner) as "owner",
                         prorows as rows ,
                         proleakproof as is_leakproof  /* ,
                         proparallel as concurrency_kind */
                  from pg_catalog.pg_proc
                  where pronamespace = ?::oid
                    and not /* (prokind = 'a') */proisagg 
                    and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid) )
select *
from routines natural join languages
-- ] --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912383] results received
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912383] finished - execution time: 37 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912384] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912384] results received
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912384] finished - execution time: 3 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912385] 
with procedures as (
  select P.oid as function_id,
         pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as function_name,
         P.prorettype as return_type
  from pg_catalog.pg_proc P
  join pg_catalog.pg_namespace N
    on P.pronamespace = N.oid
),
operators as (
  select O.oid as operator_id,
         pg_catalog.quote_ident(N.nspname) || '.' || O.oprname as operator_name
  from pg_catalog.pg_operator O
  join pg_catalog.pg_namespace N
    on O.oprnamespace = N.oid
)
select P.oid as aggregate_id,
       P.xmin as state_number,
       P.proname as aggregate_name,
       P.proargnames as arg_names,
       P.proargmodes as arg_modes,
       P.proargtypes::int[] as in_arg_types,
       P.proallargtypes::int[] as all_arg_types,
       A.aggtransfn::oid as transition_function_id,
       PT.function_name::text as transition_function_name,
       A.aggtranstype as transition_type,
       A.aggfinalfn::oid as final_function_id,
       case when A.aggfinalfn::oid = 0 then null else PF.function_name end as final_function_name,
       case when A.aggfinalfn::oid = 0 then 0 else PF.return_type end as final_return_type,
       A.agginitval as initial_value,
       A.aggsortop as sort_operator_id,
       case when A.aggsortop = 0 then null else O.operator_name end as sort_operator_name,
       pg_catalog.pg_get_userbyid(P.proowner) as "owner"
       ,
       A.aggfinalextra as final_extra,
       A.aggtransspace as state_size,
       A.aggmtransfn::oid as moving_transition_id,
       case when A.aggmtransfn::oid = 0 then null else FTP.function_name end as moving_transition_name,
       A.aggminvtransfn::oid as inverse_transition_id,
       case when A.aggminvtransfn::oid = 0 then null else ITP.function_name end as inverse_transition_name,
       A.aggmtranstype::oid as moving_state_type,
       A.aggmtransspace as moving_state_size,
       A.aggmfinalfn::oid as moving_final_id,
       case when A.aggmfinalfn::oid = 0 then null else FFP.function_name end as moving_final_name,
       A.aggmfinalextra as moving_final_extra,
       A.aggminitval as moving_initial_value,
       A.aggkind as aggregate_kind,
       A.aggnumdirectargs as direct_args
       
       /* ,
       A.aggcombinefn::oid as combine_function_id,
       case when A.aggcombinefn::oid = 0 then null else CP.function_name end as combine_function_name,
       A.aggserialfn::oid as serialization_function_id,
       case when A.aggserialfn::oid = 0 then null else SP.function_name end as serialization_function_name,
       A.aggdeserialfn::oid as deserialization_function_id,
       case when A.aggdeserialfn::oid = 0 then null else DP.function_name end as deserialization_function_name,
       P.proparallel as concurrency_kind
       */
from pg_catalog.pg_aggregate A
join pg_catalog.pg_proc P
  on A.aggfnoid = P.oid
join procedures PT
  on A.aggtransfn::oid = PT.function_id
left outer join procedures PF
  on A.aggfinalfn::oid = PF.function_id
left outer join operators O
  on A.aggsortop = O.operator_id
left outer join procedures FTP
  on A.aggmtransfn = FTP.function_id
left outer join procedures ITP
  on A.aggminvtransfn = ITP.function_id
left outer join procedures FFP
  on A.aggmfinalfn = FFP.function_id

/* left outer join procedures CP
  on A.aggcombinefn = CP.function_id
left outer join procedures SP
  on A.aggserialfn = SP.function_id
left outer join procedures DP
  on A.aggdeserialfn = DP.function_id
*/
where P.pronamespace = ?::oid
and (pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(?::varchar::xid))
order by P.oid
-- ] --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912385] results received
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912385] finished - execution time: 44 ms, fetching time: 6 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912386] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912386] results received
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912386] finished - execution time: 3 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912387] 
select O.oid as op_id,
       O.xmin as state_number,
       oprname as op_name,
       oprkind as op_kind,
       oprleft as arg_left_type_id,
       oprright as arg_right_type_id,
       oprresult as arg_result_type_id,
       oprcode as func_main,
       pg_catalog.pg_get_userbyid(O.oprowner) as "owner"
from pg_catalog.pg_operator O
where oprnamespace = ?::oid
  and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912387] results received
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912387] finished - execution time: 3 ms, fetching time: 6 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912388] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912388] results received
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912388] finished - execution time: 4 ms, fetching time: 7 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912389] 
select oid as id,
       xmin as state_number,
       collname as name,
       collcollate as lc_collate,
       collctype as lc_ctype,
       pg_catalog.pg_get_userbyid(collowner) as "owner"
from pg_catalog.pg_collation
where collnamespace = ?::oid
  and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912389] results received
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912389] finished - execution time: 71 ms, fetching time: 47 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912390] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912390] results received
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912390] finished - execution time: 31 ms, fetching time: 31 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:53 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912391] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:54 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912391] results received
-- 2020-06-01 14:44:54 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912391] finished - execution time: 48 ms, fetching time: 57 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:54 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912392] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:54 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912392] results received
-- 2020-06-01 14:44:54 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912392] finished - execution time: 10 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:54 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912393] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-06-01 14:44:54 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912393] results received
-- 2020-06-01 14:44:54 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375698] [statement id: 1073912393] finished - execution time: 4 ms, fetching time: 3 ms, total result sets count: 1
-- 2020-06-01 14:44:54 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 1247375699] connected
-- 2020-06-01 14:44:54 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 1247375698] disconnected
-- [ --------------------------------------------------
-- 2020-06-01 14:44:54 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912394] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-06-01 14:44:54 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912394] results received
-- 2020-06-01 14:44:54 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912394] finished - execution time: 22 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:54 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912395] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 14:44:54 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912395] results received
-- 2020-06-01 14:44:54 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912395] finished - execution time: 408 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912396] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912396] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912396] finished - execution time: 218 ms, fetching time: 10 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912397] 
select R.oid::bigint as role_id, rolname as role_name,
  rolsuper is_super, rolinherit is_inherit,
  rolcreaterole can_createrole, rolcreatedb can_createdb,
  rolcanlogin can_login, rolreplication /* false */ is_replication,
  rolconnlimit conn_limit, rolvaliduntil valid_until,
  /* rolbypassrls */false  bypass_rls, rolconfig config,
  D.description
from pg_catalog.pg_roles R
  left join pg_catalog.pg_shdescription D on D.objoid = R.oid
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912397] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912397] finished - execution time: 4 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912398] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912398] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912398] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912399] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912399] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912399] finished - execution time: 3 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912400] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912400] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912400] finished - execution time: 2 ms, fetching time: 10 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912401] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912401] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912401] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912402] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912402] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912402] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912403] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912403] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912403] finished - execution time: 3 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912404] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912404] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912404] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912405] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912405] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912405] finished - execution time: 4 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912406] 
select usesuper
from pg_user
where usename = current_user
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912406] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912406] finished - execution time: 2 ms, fetching time: 6 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912407] 
select distinct oid
from pg_catalog.pg_am
union
select distinct oid
from pg_catalog.pg_foreign_data_wrapper
union
select distinct oid
from pg_catalog.pg_foreign_server
union
select distinct oid
from pg_catalog.pg_extension

union
select distinct oid
from pg_catalog.pg_user_mapping

-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912407] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912407] finished - execution time: 11 ms, fetching time: 12 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912408] 
select D.objoid id
from pg_catalog.pg_description D
where D.classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912408] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912408] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912409] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912409] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912409] finished - execution time: 1 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912410] 
select A.oid as access_method_id,
       A.xmin as state_number,
       A.amname as access_method_name
       /* ,
       A.amhandler::oid as handler_id,
       pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as handler_name,
       A.amtype as access_method_type
       */
from pg_am A
  /* join pg_proc P on A.amhandler::oid = P.oid
  join pg_namespace N on P.pronamespace = N.oid
  */
where pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912410] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912410] finished - execution time: 2 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912411] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912411] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912411] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912412] 
select fdw.oid as id,
       fdw.xmin as state_number,
       fdw.fdwname as name,
       pr.proname as handler,
       nspc.nspname as handler_schema,
       pr2.proname as validator,
       nspc2.nspname as validator_schema,
       fdw.fdwoptions as options,
       pg_catalog.pg_get_userbyid(fdw.fdwowner) as "owner"
from pg_catalog.pg_foreign_data_wrapper fdw
     left outer join pg_catalog.pg_proc pr on fdw.fdwhandler = pr.oid
     left outer join pg_catalog.pg_namespace nspc on pr.pronamespace = nspc.oid
     left outer join pg_catalog.pg_proc pr2 on fdw.fdwvalidator = pr2.oid
     left outer join pg_catalog.pg_namespace nspc2 on pr2.pronamespace = nspc2.oid
  where pg_catalog.age(fdw.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912412] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912412] finished - execution time: 6 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912413] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912413] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912413] finished - execution time: 5 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912414] 
select srv.oid as id,
       srv.srvfdw as fdw_id,
       srv.xmin as state_number,
       srv.srvname as name,
       srv.srvtype as type,
       srv.srvversion as version,
       srv.srvoptions as options,
       pg_catalog.pg_get_userbyid(srv.srvowner) as "owner"
from pg_catalog.pg_foreign_server srv
  where pg_catalog.age(srv.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912414] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912414] finished - execution time: 4 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912415] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912415] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912415] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912416] 
select pg_extension.oid as id,
       pg_extension.xmin as state_number,
       extname as name,
       extversion as version,
       extnamespace as schema_id,
       nspname as schema_name,
       array(select target
             from pg_extension_update_paths(extname)
             where source = extversion and path is not null) as available_updates
from pg_catalog.pg_extension
  join pg_namespace on pg_extension.extnamespace = pg_namespace.oid
where pg_catalog.age(pg_extension.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912416] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912416] finished - execution time: 3 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912417] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912417] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912417] finished - execution time: 1 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912418] 
select D.objoid id, case
    when 'pg_catalog.pg_am'::regclass = classoid then 'A'
    when 'pg_catalog.pg_foreign_data_wrapper'::regclass = classoid then 'W'
    when 'pg_catalog.pg_foreign_server'::regclass = classoid then 'S'
    when 'pg_catalog.pg_extension'::regclass = classoid then 'E'
    
  end as kind,
  D.objsubid sub_id, D.description
from pg_catalog.pg_description D
where classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912418] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912418] finished - execution time: 5 ms, fetching time: 7 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912419] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912419] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912419] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912420] 
select 'sequence' as dependent_kind,
       'table' as owner_kind,
       D.objid as dependent_id,
       D.refobjid as owner_id,
       D.refobjsubid as owner_subobject_id
from pg_depend D
  join pg_class C_SEQ on D.objid = C_SEQ.oid
  join pg_class C_TAB on D.refobjid = C_TAB.oid
where C_SEQ.relkind = 'S'
  and C_TAB.relkind = 'r'
  and D.refobjsubid <> 0
  and (D.deptype = 'a' or D.deptype = 'i')
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912420] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912420] finished - execution time: 8 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912421] 
with saved_age as (select greatest(pg_catalog.age(?::varchar::xid), pg_catalog.age(?::varchar::xid)) as "value")
select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
(
  select X.last_tx as last_tx
  from (
    (
    select xmin as last_tx
      from pg_catalog.pg_type
      where typnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_class
      where relnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_proc
      where pronamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_operator
      where oprnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select A.xmin as last_tx
      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
      where K.relnamespace = ?::oid
      order by pg_catalog.age(A.xmin)
      limit 1
    )
    union all
    (
    select E.xmin as last_tx
      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
      where T.typnamespace = ?::oid
      order by pg_catalog.age(E.xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_constraint
      where connamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select CO.xmin as last_tx
      from pg_catalog.pg_collation CO
      where CO.collnamespace = ?::oid
      order by pg_catalog.age(CO.xmin)
      limit 1
    )
    union all
    
    (
    select IX.xmin as last_tx
      from pg_catalog.pg_index IX,
           pg_catalog.pg_class IC
      where IC.oid = IX.indrelid
        and IC.relnamespace = ?::oid
        order by pg_catalog.age(IX.xmin)
        limit 1
    )
    union all
    (
    select RU.xmin as last_tx
      from pg_catalog.pg_rewrite RU,
           pg_catalog.pg_class RC
      where RC.oid = RU.ev_class
        and RC.relnamespace = ?::oid
        order by pg_catalog.age(RU.xmin)
        limit 1
    )
    union all
    (
    select TG.xmin as last_tx
      from pg_catalog.pg_trigger TG,
           pg_catalog.pg_class TC
      where TC.oid = TG.tgrelid
        and TC.relnamespace = ?::oid
        order by pg_catalog.age(TG.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_class C on C.oid = D.objoid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_constraint C on C.oid = D.objoid
      where C.connamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_trigger T on T.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = T.tgrelid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_rewrite R on R.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = R.ev_class
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_proc P on P.oid = D.objoid
      where P.pronamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_type T on T.oid = D.objoid
      where T.typnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_operator O on O.oid = D.objoid
      where O.oprnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_collation C on C.oid = D.objoid
      where C.collnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    
  ) X
  order by pg_catalog.age(X.last_tx)
  limit 1
) C, saved_age SA
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912421] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912421] finished - execution time: 27 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912422] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912422] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912422] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912423] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912423] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912423] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912424] 
select distinct oid
from pg_catalog.pg_type
where typnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_class
where relnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_proc
where pronamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_operator
where oprnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_constraint
where connamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_collation
where collnamespace = ?::oid
union

select distinct IX.indexrelid
from pg_catalog.pg_index IX,
     pg_catalog.pg_class IC
where IC.oid = IX.indrelid
  and IC.relnamespace = ?::oid
union
select distinct RU.oid
from pg_catalog.pg_rewrite RU,
     pg_catalog.pg_class RC
where RC.oid = RU.ev_class
  and RC.relnamespace = ?::oid
  and not RU.rulename = '_RETURN'
union
select distinct TG.oid
from pg_catalog.pg_trigger TG,
     pg_catalog.pg_class TC
where TC.oid = TG.tgrelid
  and TC.relnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912424] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912424] finished - execution time: 5 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912425] 
select D.objoid id, pg_catalog.array_agg(D.objsubid) sub_ids
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
group by D.objoid
union all
select T.oid id, pg_catalog.array_agg(D.objsubid)
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
group by T.oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912425] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912425] finished - execution time: 6 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912426] 
with saved_age as (select greatest(pg_catalog.age(?::varchar::xid), pg_catalog.age(?::varchar::xid)) as "value")
select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
(
  select X.last_tx as last_tx
  from (
    (
    select xmin as last_tx
      from pg_catalog.pg_type
      where typnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_class
      where relnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_proc
      where pronamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_operator
      where oprnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select A.xmin as last_tx
      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
      where K.relnamespace = ?::oid
      order by pg_catalog.age(A.xmin)
      limit 1
    )
    union all
    (
    select E.xmin as last_tx
      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
      where T.typnamespace = ?::oid
      order by pg_catalog.age(E.xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_constraint
      where connamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select CO.xmin as last_tx
      from pg_catalog.pg_collation CO
      where CO.collnamespace = ?::oid
      order by pg_catalog.age(CO.xmin)
      limit 1
    )
    union all
    
    (
    select IX.xmin as last_tx
      from pg_catalog.pg_index IX,
           pg_catalog.pg_class IC
      where IC.oid = IX.indrelid
        and IC.relnamespace = ?::oid
        order by pg_catalog.age(IX.xmin)
        limit 1
    )
    union all
    (
    select RU.xmin as last_tx
      from pg_catalog.pg_rewrite RU,
           pg_catalog.pg_class RC
      where RC.oid = RU.ev_class
        and RC.relnamespace = ?::oid
        order by pg_catalog.age(RU.xmin)
        limit 1
    )
    union all
    (
    select TG.xmin as last_tx
      from pg_catalog.pg_trigger TG,
           pg_catalog.pg_class TC
      where TC.oid = TG.tgrelid
        and TC.relnamespace = ?::oid
        order by pg_catalog.age(TG.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_class C on C.oid = D.objoid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_constraint C on C.oid = D.objoid
      where C.connamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_trigger T on T.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = T.tgrelid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_rewrite R on R.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = R.ev_class
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_proc P on P.oid = D.objoid
      where P.pronamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_type T on T.oid = D.objoid
      where T.typnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_operator O on O.oid = D.objoid
      where O.oprnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_collation C on C.oid = D.objoid
      where C.collnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    
  ) X
  order by pg_catalog.age(X.last_tx)
  limit 1
) C, saved_age SA
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912426] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912426] finished - execution time: 17 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912427] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912427] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912427] finished - execution time: 2 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912428] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912428] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912428] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912429] 
select distinct oid
from pg_catalog.pg_type
where typnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_class
where relnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_proc
where pronamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_operator
where oprnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_constraint
where connamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_collation
where collnamespace = ?::oid
union

select distinct IX.indexrelid
from pg_catalog.pg_index IX,
     pg_catalog.pg_class IC
where IC.oid = IX.indrelid
  and IC.relnamespace = ?::oid
union
select distinct RU.oid
from pg_catalog.pg_rewrite RU,
     pg_catalog.pg_class RC
where RC.oid = RU.ev_class
  and RC.relnamespace = ?::oid
  and not RU.rulename = '_RETURN'
union
select distinct TG.oid
from pg_catalog.pg_trigger TG,
     pg_catalog.pg_class TC
where TC.oid = TG.tgrelid
  and TC.relnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912429] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912429] finished - execution time: 8 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912430] 
select D.objoid id, pg_catalog.array_agg(D.objsubid) sub_ids
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
group by D.objoid
union all
select T.oid id, pg_catalog.array_agg(D.objsubid)
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
group by T.oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912430] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912430] finished - execution time: 14 ms, fetching time: 65 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912431] 
with saved_age as (select greatest(pg_catalog.age(?::varchar::xid), pg_catalog.age(?::varchar::xid)) as "value")
select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
(
  select X.last_tx as last_tx
  from (
    (
    select xmin as last_tx
      from pg_catalog.pg_type
      where typnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_class
      where relnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_proc
      where pronamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_operator
      where oprnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select A.xmin as last_tx
      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
      where K.relnamespace = ?::oid
      order by pg_catalog.age(A.xmin)
      limit 1
    )
    union all
    (
    select E.xmin as last_tx
      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
      where T.typnamespace = ?::oid
      order by pg_catalog.age(E.xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_constraint
      where connamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select CO.xmin as last_tx
      from pg_catalog.pg_collation CO
      where CO.collnamespace = ?::oid
      order by pg_catalog.age(CO.xmin)
      limit 1
    )
    union all
    
    (
    select IX.xmin as last_tx
      from pg_catalog.pg_index IX,
           pg_catalog.pg_class IC
      where IC.oid = IX.indrelid
        and IC.relnamespace = ?::oid
        order by pg_catalog.age(IX.xmin)
        limit 1
    )
    union all
    (
    select RU.xmin as last_tx
      from pg_catalog.pg_rewrite RU,
           pg_catalog.pg_class RC
      where RC.oid = RU.ev_class
        and RC.relnamespace = ?::oid
        order by pg_catalog.age(RU.xmin)
        limit 1
    )
    union all
    (
    select TG.xmin as last_tx
      from pg_catalog.pg_trigger TG,
           pg_catalog.pg_class TC
      where TC.oid = TG.tgrelid
        and TC.relnamespace = ?::oid
        order by pg_catalog.age(TG.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_class C on C.oid = D.objoid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_constraint C on C.oid = D.objoid
      where C.connamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_trigger T on T.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = T.tgrelid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_rewrite R on R.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = R.ev_class
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_proc P on P.oid = D.objoid
      where P.pronamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_type T on T.oid = D.objoid
      where T.typnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_operator O on O.oid = D.objoid
      where O.oprnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_collation C on C.oid = D.objoid
      where C.collnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    
  ) X
  order by pg_catalog.age(X.last_tx)
  limit 1
) C, saved_age SA
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912431] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912431] finished - execution time: 22 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912432] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912432] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912432] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912433] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912433] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912433] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912434] 
select distinct oid
from pg_catalog.pg_type
where typnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_class
where relnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_proc
where pronamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_operator
where oprnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_constraint
where connamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_collation
where collnamespace = ?::oid
union

select distinct IX.indexrelid
from pg_catalog.pg_index IX,
     pg_catalog.pg_class IC
where IC.oid = IX.indrelid
  and IC.relnamespace = ?::oid
union
select distinct RU.oid
from pg_catalog.pg_rewrite RU,
     pg_catalog.pg_class RC
where RC.oid = RU.ev_class
  and RC.relnamespace = ?::oid
  and not RU.rulename = '_RETURN'
union
select distinct TG.oid
from pg_catalog.pg_trigger TG,
     pg_catalog.pg_class TC
where TC.oid = TG.tgrelid
  and TC.relnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912434] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912434] finished - execution time: 4 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912435] 
select D.objoid id, pg_catalog.array_agg(D.objsubid) sub_ids
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
group by D.objoid
union all
select T.oid id, pg_catalog.array_agg(D.objsubid)
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
group by T.oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912435] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912435] finished - execution time: 8 ms, fetching time: 26 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912436] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912436] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912436] finished - execution time: 25 ms, fetching time: 6 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912437] 
with U as (select usesysid from pg_catalog.pg_user where usename = current_user),
          T as (
                select oid as sequence_id,
                       relname as sequence_name,
                       pg_catalog.pg_get_userbyid(relowner) as "owner",
                       case when relowner = (select usesysid from U) then trim(both '()' from pg_catalog.pg_sequence_parameters(oid)::varchar)
                       else null::varchar
                       end as sequence_params,
                       
                       xmin as sequence_state_number
                       from pg_catalog.pg_class
                         where relnamespace = ?::oid
                         and relkind = 'S'
                         and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)
                )
select sequence_id,
       sequence_name,
       pg_catalog.split_part(sequence_params, ',', 1)::bigint as next_value,
       pg_catalog.split_part(sequence_params, ',', 2)::bigint as min_value,
       pg_catalog.split_part(sequence_params, ',', 3)::bigint as max_value,
       pg_catalog.split_part(sequence_params, ',', 4)::bigint as inc_value,
       pg_catalog.lower(pg_catalog.split_part(sequence_params, ',', 5)) LIKE '%t%' as cycle_option,
       
       sequence_state_number,
       "owner"
from T
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912437] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912437] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912438] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912438] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912438] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912439] 
select T.oid as type_id,
       T.xmin as type_state_number,
       T.typname as type_name,
       T.typtype as type_sub_kind,
       T.typcategory as type_category,
       T.typrelid as class_id,
       T.typbasetype as base_type_id,
       case when T.typtype in ('c','e') then null
            else pg_catalog.format_type(T.typbasetype, T.typtypmod) end as type_def,
       T.typdefault as default_expression,
       T.typnotnull as mandatory,
       pg_catalog.pg_get_userbyid(T.typowner) as "owner"
from pg_catalog.pg_type T
         left outer join pg_catalog.pg_class C
             on T.typrelid = C.oid
where T.typnamespace = ?::oid
  and pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid)
  and (T.typtype in ('d','e') or C.relkind = 'c'::"char" or T.typtype = 'b' and (T.typelem = 0 OR T.typcategory <> 'A'))
order by 1
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912439] results received
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912439] finished - execution time: 3 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912440] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:55 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912440] results received
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912440] finished - execution time: 4 ms, fetching time: 21 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912441] 
select T.relkind as table_kind,
       T.relname as table_name,
       T.oid as table_id,
       T.xmin as table_state_number,
       /* false */T.relhasoids  as table_with_oids,
       T.relnamespace as tablespace_id,
       T.reloptions as options,
       (select pg_catalog.array_agg(inhparent)::varchar from (select inhparent::bigint from pg_catalog.pg_inherits where T.oid = inhrelid order by inhseqno) as bts) as ancestors,
       (select pg_catalog.array_agg(inhrelid)::varchar from (select inhrelid::bigint from pg_catalog.pg_inherits where T.oid = inhparent order by inhrelid) as its) as successors,
       /* T.relispartition */false  as is_partition,
       /* pg_catalog.pg_get_partkeydef(T.oid) */null  as partition_key,
       /* pg_catalog.pg_get_expr(T.relpartbound, T.oid) */null  as partition_expression,
       pg_catalog.pg_get_userbyid(T.relowner) as "owner"
from pg_catalog.pg_class T
where relnamespace = ?::oid
  and relkind in ('r', 'm', 'v', 'f', 'p')
  and pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid)
order by table_kind, table_id
-- ] --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912441] results received
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912441] finished - execution time: 47 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912442] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912442] results received
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912442] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912443] 
select ft.ftrelid as table_id,
       srv.srvname as table_server,
       ft.ftoptions as table_options,
       pg_catalog.pg_get_userbyid(cls.relowner) as "owner"
from pg_catalog.pg_foreign_table ft
     left outer join pg_catalog.pg_foreign_server srv on ft.ftserver = srv.oid
     join pg_catalog.pg_class cls on ft.ftrelid = cls.oid
where cls.relnamespace = ?::oid
  and pg_catalog.age(ft.xmin) <= pg_catalog.age(?::varchar::xid)
order by table_id
-- ] --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912443] results received
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912443] finished - execution time: 3 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912444] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912444] results received
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912444] finished - execution time: 1 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912445] 
with schema_procs as (select prorettype, proargtypes, proallargtypes
                      from pg_catalog.pg_proc
                      where pronamespace = ?::oid
                        and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)  ),
     schema_opers as (select oprleft, oprright, oprresult
                      from pg_catalog.pg_operator
                      where oprnamespace = ?::oid
                        and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)  ),
     schema_aggregates as (select A.aggtranstype , A.aggmtranstype 
                           from pg_catalog.pg_aggregate A
                           join pg_catalog.pg_proc P
                             on A.aggfnoid = P.oid
                           where P.pronamespace = ?::oid
                           and (pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(?::varchar::xid)) ),
     schema_arg_types as ( select prorettype as type_id
                           from schema_procs
                           union
                           select distinct unnest(proargtypes) as type_id
                           from schema_procs
                           union
                           select distinct unnest(proallargtypes) as type_id
                           from schema_procs
                           union
                           select oprleft as type_id
                           from schema_opers
                           where oprleft is not null
                           union
                           select oprright as type_id
                           from schema_opers
                           where oprright is not null
                           union
                           select oprresult as type_id
                           from schema_opers
                           where oprresult is not null
                           union
                           select aggtranstype::oid as type_id
                           from schema_aggregates
                           union
                           select aggmtranstype::oid as type_id
                           from schema_aggregates
                           
                           )
select type_id, pg_catalog.format_type(type_id, null) as type_spec
from schema_arg_types
where type_id <> 0
-- ] --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912445] results received
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912445] finished - execution time: 5 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912446] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912446] results received
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912446] finished - execution time: 1 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912447] 
with languages as (select oid as lang_oid, lanname as lang
                   from pg_catalog.pg_language),
     routines as (select proname as r_name,
                         prolang as lang_oid,
                         oid as r_id,
                         xmin as r_state_number,
                         proargnames as arg_names,
                         proargmodes as arg_modes,
                         proargtypes::int[] as in_arg_types,
                         proallargtypes::int[] as all_arg_types,
                         pg_catalog.pg_get_expr(proargdefaults, 0) as arg_defaults,
                         provariadic as arg_variadic_id,
                         prorettype as ret_type_id,
                         proretset as ret_set,
                         /* prokind */case when proiswindow then 'w'
                                                when proisagg then 'a'
                                                else 'f'
                                           end  as kind,
                         provolatile as volatile_kind,
                         proisstrict as is_strict,
                         prosecdef as is_security_definer,
                         proconfig as configuration_parameters,
                         procost as cost,
                         pg_catalog.pg_get_userbyid(proowner) as "owner",
                         prorows as rows ,
                         proleakproof as is_leakproof  /* ,
                         proparallel as concurrency_kind */
                  from pg_catalog.pg_proc
                  where pronamespace = ?::oid
                    and not /* (prokind = 'a') */proisagg 
                    and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid) )
select *
from routines natural join languages
-- ] --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912447] results received
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912447] finished - execution time: 7 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912448] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912448] results received
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912448] finished - execution time: 2 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912449] 
with procedures as (
  select P.oid as function_id,
         pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as function_name,
         P.prorettype as return_type
  from pg_catalog.pg_proc P
  join pg_catalog.pg_namespace N
    on P.pronamespace = N.oid
),
operators as (
  select O.oid as operator_id,
         pg_catalog.quote_ident(N.nspname) || '.' || O.oprname as operator_name
  from pg_catalog.pg_operator O
  join pg_catalog.pg_namespace N
    on O.oprnamespace = N.oid
)
select P.oid as aggregate_id,
       P.xmin as state_number,
       P.proname as aggregate_name,
       P.proargnames as arg_names,
       P.proargmodes as arg_modes,
       P.proargtypes::int[] as in_arg_types,
       P.proallargtypes::int[] as all_arg_types,
       A.aggtransfn::oid as transition_function_id,
       PT.function_name::text as transition_function_name,
       A.aggtranstype as transition_type,
       A.aggfinalfn::oid as final_function_id,
       case when A.aggfinalfn::oid = 0 then null else PF.function_name end as final_function_name,
       case when A.aggfinalfn::oid = 0 then 0 else PF.return_type end as final_return_type,
       A.agginitval as initial_value,
       A.aggsortop as sort_operator_id,
       case when A.aggsortop = 0 then null else O.operator_name end as sort_operator_name,
       pg_catalog.pg_get_userbyid(P.proowner) as "owner"
       ,
       A.aggfinalextra as final_extra,
       A.aggtransspace as state_size,
       A.aggmtransfn::oid as moving_transition_id,
       case when A.aggmtransfn::oid = 0 then null else FTP.function_name end as moving_transition_name,
       A.aggminvtransfn::oid as inverse_transition_id,
       case when A.aggminvtransfn::oid = 0 then null else ITP.function_name end as inverse_transition_name,
       A.aggmtranstype::oid as moving_state_type,
       A.aggmtransspace as moving_state_size,
       A.aggmfinalfn::oid as moving_final_id,
       case when A.aggmfinalfn::oid = 0 then null else FFP.function_name end as moving_final_name,
       A.aggmfinalextra as moving_final_extra,
       A.aggminitval as moving_initial_value,
       A.aggkind as aggregate_kind,
       A.aggnumdirectargs as direct_args
       
       /* ,
       A.aggcombinefn::oid as combine_function_id,
       case when A.aggcombinefn::oid = 0 then null else CP.function_name end as combine_function_name,
       A.aggserialfn::oid as serialization_function_id,
       case when A.aggserialfn::oid = 0 then null else SP.function_name end as serialization_function_name,
       A.aggdeserialfn::oid as deserialization_function_id,
       case when A.aggdeserialfn::oid = 0 then null else DP.function_name end as deserialization_function_name,
       P.proparallel as concurrency_kind
       */
from pg_catalog.pg_aggregate A
join pg_catalog.pg_proc P
  on A.aggfnoid = P.oid
join procedures PT
  on A.aggtransfn::oid = PT.function_id
left outer join procedures PF
  on A.aggfinalfn::oid = PF.function_id
left outer join operators O
  on A.aggsortop = O.operator_id
left outer join procedures FTP
  on A.aggmtransfn = FTP.function_id
left outer join procedures ITP
  on A.aggminvtransfn = ITP.function_id
left outer join procedures FFP
  on A.aggmfinalfn = FFP.function_id

/* left outer join procedures CP
  on A.aggcombinefn = CP.function_id
left outer join procedures SP
  on A.aggserialfn = SP.function_id
left outer join procedures DP
  on A.aggdeserialfn = DP.function_id
*/
where P.pronamespace = ?::oid
and (pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(?::varchar::xid))
order by P.oid
-- ] --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912449] results received
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912449] finished - execution time: 12 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912450] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912450] results received
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912450] finished - execution time: 8 ms, fetching time: 9 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912451] 
select O.oid as op_id,
       O.xmin as state_number,
       oprname as op_name,
       oprkind as op_kind,
       oprleft as arg_left_type_id,
       oprright as arg_right_type_id,
       oprresult as arg_result_type_id,
       oprcode as func_main,
       pg_catalog.pg_get_userbyid(O.oprowner) as "owner"
from pg_catalog.pg_operator O
where oprnamespace = ?::oid
  and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912451] results received
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912451] finished - execution time: 3 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912452] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912452] results received
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912452] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912453] 
select oid as id,
       xmin as state_number,
       collname as name,
       collcollate as lc_collate,
       collctype as lc_ctype,
       pg_catalog.pg_get_userbyid(collowner) as "owner"
from pg_catalog.pg_collation
where collnamespace = ?::oid
  and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912453] results received
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912453] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912454] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912454] results received
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912454] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912455] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912455] results received
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912455] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912456] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912456] results received
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912456] finished - execution time: 1 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912457] 
with T as ( select distinct T.oid as table_id, T.relname as table_name
            from pg_catalog.pg_class T,
                 pg_catalog.pg_attribute A
            where T.relnamespace = ?::oid
              and T.relkind in ('r', 'm', 'v', 'f', 'p')
              and (pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid))
              and A.attrelid = T.oid )
select T.table_id,
       C.attnum as column_position,
       C.attname as column_name,
       C.xmin as column_state_number,
       C.atttypmod as type_mod,
       C.attndims as dimensions_number,
       pg_catalog.format_type(C.atttypid, C.atttypmod) as type_spec,
       C.atttypid as type_id,
       C.attnotnull as mandatory,
       /* pg_catalog.pg_get_expr(D.adbin, 'pg_catalog.pg_attrdef'::regclass::oid) */D.adsrc  as column_default_expression,
       not C.attislocal as column_is_inherited,
       C.attfdwoptions as options,
       C.attisdropped as column_is_dropped,
       /* C.attidentity */null  as identity_kind
from T
  inner join pg_catalog.pg_attribute C on T.table_id = C.attrelid
  left outer join pg_catalog.pg_attrdef D on (C.attrelid, C.attnum) = (D.adrelid, D.adnum)
where attnum > 0
order by table_id, attnum
-- ] --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912457] results received
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912457] finished - execution time: 189 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912458] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912458] results received
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912458] finished - execution time: 2 ms, fetching time: 6 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912459] 
with tab as ( select relnamespace as schema_id,
                     oid as table_id,
                     relkind as table_kind
              from pg_catalog.pg_class
              where relnamespace = ?::oid
                and relkind in ('r','m','v','p')),
    ind_head as ( select indrelid as table_id,
                         indexrelid as index_id,
                         indisunique as is_unique,
                         indisprimary as is_primary,
                         indkey as column_positions,
                         indclass as column_operators,
                         indoption as column_options,
                         pg_catalog.pg_get_expr(indpred, indrelid) as condition,
                         case when indexprs is not null
                             then pg_catalog.array_to_string(array(
                                      select case when indkey[k] = 0
                                             then chr(27) || pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
                                             else pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
                                             end
                                      from pg_catalog.generate_subscripts(indkey, 1) as k
                                      order by k),
                                  chr(28))
                             else null end as expressions
                  from pg_catalog.pg_index ),
    ind_stor as ( select cls.relnamespace as schema_id,
                         cls.oid as index_id,
                         cls.xmin as state_number,
                         cls.relname as index_name,
                         /* pg_catalog.pg_indexam_has_property(cls.relam, 'can_order') */am.amcanorder  as can_order
                  from pg_catalog.pg_class cls
                    /* */join pg_catalog.pg_am am on (cls.relam = am.oid)
                  where cls.relkind = 'i'
                    and pg_catalog.age(cls.xmin) <= pg_catalog.age(?::varchar::xid) )
select table_id, table_kind,
       index_name, index_id, state_number,
       is_unique, is_primary,
       column_positions, column_operators, column_options,
       condition, expressions, can_order
from tab natural join ind_head natural join ind_stor
-- ] --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912459] results received
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912459] finished - execution time: 14 ms, fetching time: 7 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912460] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912460] results received
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912460] finished - execution time: 3 ms, fetching time: 8 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912461] 
with T as ( select oid as table_id,
                   relkind as table_kind,
                   xmin as table_state_id
            from pg_catalog.pg_class
            where relkind in ('r','v','f','p')
              and relnamespace = ?::oid ),
     C as ( select conrelid as table_id,
                   oid::bigint as con_id,
                   xmin as con_state_id,
                   conname as con_name,
                   contype as con_kind,
                   conkey as con_columns,
                   conindid as index_id,
                   confrelid as ref_table_id,
                   confkey as ref_columns,
                   condeferrable as is_deferrable,
                   condeferred as is_init_deferred,
                   confupdtype as on_update,
                   confdeltype as on_delete,
                   /* conbin */consrc 
            from pg_catalog.pg_constraint
            where contype in ('p','u','f','c')
              and connamespace = ?::oid )
select table_id,
       table_kind,
       con_id,
       con_state_id::varchar::bigint as con_state_id,
       con_name,
       con_kind,
       con_columns,
       index_id,
       ref_table_id,
       is_deferrable,
       is_init_deferred,
       on_update,
       on_delete,
       /* pg_catalog.pg_get_expr(conbin, table_id) */consrc  as con_expression,
       ref_columns
from T natural join C
where pg_catalog.age(table_state_id) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(con_state_id) <= pg_catalog.age(?::varchar::xid)
order by pg_catalog.strpos('pufc', con_kind)
-- ] --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912461] results received
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912461] finished - execution time: 3 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912462] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912462] results received
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912462] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912463] 
select R.ev_class as table_id,
       R.oid as rule_id,
       R.xmin as rule_state_number,
       R.rulename as rule_name,
       pg_catalog.translate(ev_type,'1234','SUID') as rule_event_code,
       R.ev_enabled as rule_fire_mode,
       R.is_instead as rule_is_instead
from pg_catalog.pg_rewrite R
where R.ev_class in (select oid
                     from pg_catalog.pg_class
                     where relnamespace = ?::oid)
  and pg_catalog.age(R.xmin) <= pg_catalog.age(?::varchar::xid)
  and R.rulename != '_RETURN'::name
order by R.ev_class::bigint, ev_type
-- ] --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912463] results received
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912463] finished - execution time: 3 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912464] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912464] results received
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912464] finished - execution time: 1 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912465] 
select T.tgrelid as table_id,
       T.oid as trigger_id,
       T.xmin as trigger_state_number,
       T.tgname as trigger_name,
       T.tgfoid as function_id,
       T.tgtype & 31 as bits,
       T.tgdeferrable as is_deferrable,
       T.tginitdeferred as is_init_deferred,
       T.tgenabled as trigger_fire_mode
from pg_catalog.pg_trigger T
where T.tgrelid in (select oid
                    from pg_catalog.pg_class
                    where relnamespace = ?::oid)
  and pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid)
  and not T.tgisinternal
-- ] --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912465] results received
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912465] finished - execution time: 4 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912466] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912466] results received
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912466] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912467] 
select D.objoid id, C.relkind as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select T.oid id, 'T' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, pg_catalog.translate(C.contype, 'pufc', 'kkxz') as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, 't' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, 'R' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, 'F' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, 'O' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, 'C' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)

-- ] --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912467] results received
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912467] finished - execution time: 9 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912468] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912468] results received
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912468] finished - execution time: 5 ms, fetching time: 6 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912469] 
select distinct
       T.relkind as view_kind,
       T.oid as view_id,
       pg_catalog.pg_get_viewdef(T.oid) as source_text
from pg_catalog.pg_class T
  join pg_catalog.pg_namespace N on T.relnamespace = N.oid
  left outer join pg_catalog.pg_attribute A on (A.attrelid = T.oid)
where N.oid = ?::oid
  and T.relkind in ('m','v')
  and (pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid))
-- ] --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912469] results received
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912469] finished - execution time: 58 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912470] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912470] results received
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912470] finished - execution time: 88 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912471] 
with A as ( select oid as table_id, pg_catalog.upper(relkind) as table_kind
            from pg_catalog.pg_class
            where relnamespace = ?::oid
              and relkind in ('r', 'm', 'v', 'f', 'p') )
select table_kind,
       table_id,
       R.oid as rule_id,
       pg_catalog.pg_get_ruledef(R.oid) as source_text
from A join pg_catalog.pg_rewrite R
        on A.table_id = R.ev_class
where R.rulename != '_RETURN'::name
  and pg_catalog.age(R.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912471] results received
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912471] finished - execution time: 39 ms, fetching time: 9 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912472] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912472] results received
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912472] finished - execution time: 2 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912473] 
with system_languages as ( select oid as lang
                           from pg_catalog.pg_language
                           where lanname in ('c','internal') )
select oid as id,
       pg_catalog.pg_get_function_arguments(oid) as arguments_def,
       pg_catalog.pg_get_function_result(oid) as result_def,
       prosrc as source_text
from pg_catalog.pg_proc
where pronamespace = ?::oid
  and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)
  and not /* (prokind = 'a') */proisagg 
  and prolang not in (select lang from system_languages)
  and prosrc is not null
-- ] --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912473] results received
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912473] finished - execution time: 105 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912474] 
select distinct connamespace as schema_id
from pg_catalog.pg_constraint F,
     pg_catalog.pg_class O
where F.contype = 'f'
  and F.confrelid = O.oid
  and O.relnamespace in (?)
-- ] --------------------------------------------------
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912474] results received
-- 2020-06-01 14:44:56 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912474] finished - execution time: 17 ms, fetching time: 21 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:44:57 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912475] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-06-01 14:44:57 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912475] results received
-- 2020-06-01 14:44:57 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375699] [statement id: 1073912475] finished - execution time: 2 ms, fetching time: 1 ms, total result sets count: 1
-- 2020-06-01 14:44:57 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 1247375699] disconnected
-- 2020-06-01 14:45:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 1247375700] connected
-- [ --------------------------------------------------
-- 2020-06-01 14:45:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912476] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-06-01 14:45:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912476] results received
-- 2020-06-01 14:45:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912476] finished - execution time: 200 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912477] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 14:45:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912477] results received
-- 2020-06-01 14:45:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912477] finished - execution time: 94 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912478] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 14:45:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912478] results received
-- 2020-06-01 14:45:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912478] finished - execution time: 110 ms, fetching time: 72 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912479] 
select R.oid::bigint as role_id, rolname as role_name,
  rolsuper is_super, rolinherit is_inherit,
  rolcreaterole can_createrole, rolcreatedb can_createdb,
  rolcanlogin can_login, rolreplication /* false */ is_replication,
  rolconnlimit conn_limit, rolvaliduntil valid_until,
  /* rolbypassrls */false  bypass_rls, rolconfig config,
  D.description
from pg_catalog.pg_roles R
  left join pg_catalog.pg_shdescription D on D.objoid = R.oid
-- ] --------------------------------------------------
-- 2020-06-01 14:45:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912479] results received
-- 2020-06-01 14:45:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912479] finished - execution time: 29 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912480] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 14:45:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912480] results received
-- 2020-06-01 14:45:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912480] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912481] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 14:45:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912481] results received
-- 2020-06-01 14:45:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912481] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912482] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 14:45:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912482] results received
-- 2020-06-01 14:45:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912482] finished - execution time: 2 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912483] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 14:45:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912483] results received
-- 2020-06-01 14:45:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912483] finished - execution time: 1 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912484] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 14:45:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912484] results received
-- 2020-06-01 14:45:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912484] finished - execution time: 1 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912485] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 14:45:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912485] results received
-- 2020-06-01 14:45:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912485] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912486] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912486] results received
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912486] finished - execution time: 75 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912487] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912487] results received
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912487] finished - execution time: 38 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912488] 
select usesuper
from pg_user
where usename = current_user
-- ] --------------------------------------------------
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912488] results received
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912488] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912489] 
select distinct oid
from pg_catalog.pg_am
union
select distinct oid
from pg_catalog.pg_foreign_data_wrapper
union
select distinct oid
from pg_catalog.pg_foreign_server
union
select distinct oid
from pg_catalog.pg_extension

union
select distinct oid
from pg_catalog.pg_user_mapping

-- ] --------------------------------------------------
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912489] results received
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912489] finished - execution time: 132 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912490] 
select D.objoid id
from pg_catalog.pg_description D
where D.classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
-- ] --------------------------------------------------
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912490] results received
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912490] finished - execution time: 58 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912491] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912491] results received
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912491] finished - execution time: 2 ms, fetching time: 7 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912492] 
select A.oid as access_method_id,
       A.xmin as state_number,
       A.amname as access_method_name
       /* ,
       A.amhandler::oid as handler_id,
       pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as handler_name,
       A.amtype as access_method_type
       */
from pg_am A
  /* join pg_proc P on A.amhandler::oid = P.oid
  join pg_namespace N on P.pronamespace = N.oid
  */
where pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912492] results received
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912492] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912493] 
select fdw.oid as id,
       fdw.xmin as state_number,
       fdw.fdwname as name,
       pr.proname as handler,
       nspc.nspname as handler_schema,
       pr2.proname as validator,
       nspc2.nspname as validator_schema,
       fdw.fdwoptions as options,
       pg_catalog.pg_get_userbyid(fdw.fdwowner) as "owner"
from pg_catalog.pg_foreign_data_wrapper fdw
     left outer join pg_catalog.pg_proc pr on fdw.fdwhandler = pr.oid
     left outer join pg_catalog.pg_namespace nspc on pr.pronamespace = nspc.oid
     left outer join pg_catalog.pg_proc pr2 on fdw.fdwvalidator = pr2.oid
     left outer join pg_catalog.pg_namespace nspc2 on pr2.pronamespace = nspc2.oid
  where pg_catalog.age(fdw.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912493] results received
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912493] finished - execution time: 43 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912494] 
select srv.oid as id,
       srv.srvfdw as fdw_id,
       srv.xmin as state_number,
       srv.srvname as name,
       srv.srvtype as type,
       srv.srvversion as version,
       srv.srvoptions as options,
       pg_catalog.pg_get_userbyid(srv.srvowner) as "owner"
from pg_catalog.pg_foreign_server srv
  where pg_catalog.age(srv.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912494] results received
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912494] finished - execution time: 3 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912495] 
select pg_extension.oid as id,
       pg_extension.xmin as state_number,
       extname as name,
       extversion as version,
       extnamespace as schema_id,
       nspname as schema_name,
       array(select target
             from pg_extension_update_paths(extname)
             where source = extversion and path is not null) as available_updates
from pg_catalog.pg_extension
  join pg_namespace on pg_extension.extnamespace = pg_namespace.oid
where pg_catalog.age(pg_extension.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912495] results received
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912495] finished - execution time: 101 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912496] 
select D.objoid id, case
    when 'pg_catalog.pg_am'::regclass = classoid then 'A'
    when 'pg_catalog.pg_foreign_data_wrapper'::regclass = classoid then 'W'
    when 'pg_catalog.pg_foreign_server'::regclass = classoid then 'S'
    when 'pg_catalog.pg_extension'::regclass = classoid then 'E'
    
  end as kind,
  D.objsubid sub_id, D.description
from pg_catalog.pg_description D
where classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912496] results received
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912496] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912497] 
select 'sequence' as dependent_kind,
       'table' as owner_kind,
       D.objid as dependent_id,
       D.refobjid as owner_id,
       D.refobjsubid as owner_subobject_id
from pg_depend D
  join pg_class C_SEQ on D.objid = C_SEQ.oid
  join pg_class C_TAB on D.refobjid = C_TAB.oid
where C_SEQ.relkind = 'S'
  and C_TAB.relkind = 'r'
  and D.refobjsubid <> 0
  and (D.deptype = 'a' or D.deptype = 'i')
-- ] --------------------------------------------------
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912497] results received
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912497] finished - execution time: 251 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912498] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912498] results received
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375700] [statement id: 1073912498] finished - execution time: 2 ms, fetching time: 1 ms, total result sets count: 1
-- 2020-06-01 14:45:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 1247375700] disconnected
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 1247375701] connected
-- [ --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912499] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912499] results received
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912499] finished - execution time: 4 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912500] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912500] results received
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912500] finished - execution time: 6 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912501] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912501] results received
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912501] finished - execution time: 7 ms, fetching time: 10 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912502] 
select R.oid::bigint as role_id, rolname as role_name,
  rolsuper is_super, rolinherit is_inherit,
  rolcreaterole can_createrole, rolcreatedb can_createdb,
  rolcanlogin can_login, rolreplication /* false */ is_replication,
  rolconnlimit conn_limit, rolvaliduntil valid_until,
  /* rolbypassrls */false  bypass_rls, rolconfig config,
  D.description
from pg_catalog.pg_roles R
  left join pg_catalog.pg_shdescription D on D.objoid = R.oid
-- ] --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912502] results received
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912502] finished - execution time: 7 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912503] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912503] results received
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912503] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912504] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912504] results received
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912504] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912505] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912505] results received
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912505] finished - execution time: 4 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912506] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912506] results received
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912506] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912507] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912507] results received
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912507] finished - execution time: 2 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912508] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912508] results received
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912508] finished - execution time: 5 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912509] 
select usesuper
from pg_user
where usename = current_user
-- ] --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912509] results received
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912509] finished - execution time: 2 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912510] 
select distinct oid
from pg_catalog.pg_am
union
select distinct oid
from pg_catalog.pg_foreign_data_wrapper
union
select distinct oid
from pg_catalog.pg_foreign_server
union
select distinct oid
from pg_catalog.pg_extension

union
select distinct oid
from pg_catalog.pg_user_mapping

-- ] --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912510] results received
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912510] finished - execution time: 14 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912511] 
select D.objoid id
from pg_catalog.pg_description D
where D.classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
-- ] --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912511] results received
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912511] finished - execution time: 5 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912512] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912512] results received
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912512] finished - execution time: 2 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912513] 
select A.oid as access_method_id,
       A.xmin as state_number,
       A.amname as access_method_name
       /* ,
       A.amhandler::oid as handler_id,
       pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as handler_name,
       A.amtype as access_method_type
       */
from pg_am A
  /* join pg_proc P on A.amhandler::oid = P.oid
  join pg_namespace N on P.pronamespace = N.oid
  */
where pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912513] results received
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912513] finished - execution time: 1 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912514] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912514] results received
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912514] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912515] 
select fdw.oid as id,
       fdw.xmin as state_number,
       fdw.fdwname as name,
       pr.proname as handler,
       nspc.nspname as handler_schema,
       pr2.proname as validator,
       nspc2.nspname as validator_schema,
       fdw.fdwoptions as options,
       pg_catalog.pg_get_userbyid(fdw.fdwowner) as "owner"
from pg_catalog.pg_foreign_data_wrapper fdw
     left outer join pg_catalog.pg_proc pr on fdw.fdwhandler = pr.oid
     left outer join pg_catalog.pg_namespace nspc on pr.pronamespace = nspc.oid
     left outer join pg_catalog.pg_proc pr2 on fdw.fdwvalidator = pr2.oid
     left outer join pg_catalog.pg_namespace nspc2 on pr2.pronamespace = nspc2.oid
  where pg_catalog.age(fdw.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912515] results received
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912515] finished - execution time: 4 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912516] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912516] results received
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912516] finished - execution time: 2 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912517] 
select srv.oid as id,
       srv.srvfdw as fdw_id,
       srv.xmin as state_number,
       srv.srvname as name,
       srv.srvtype as type,
       srv.srvversion as version,
       srv.srvoptions as options,
       pg_catalog.pg_get_userbyid(srv.srvowner) as "owner"
from pg_catalog.pg_foreign_server srv
  where pg_catalog.age(srv.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912517] results received
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912517] finished - execution time: 1 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912518] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912518] results received
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912518] finished - execution time: 2 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912519] 
select pg_extension.oid as id,
       pg_extension.xmin as state_number,
       extname as name,
       extversion as version,
       extnamespace as schema_id,
       nspname as schema_name,
       array(select target
             from pg_extension_update_paths(extname)
             where source = extversion and path is not null) as available_updates
from pg_catalog.pg_extension
  join pg_namespace on pg_extension.extnamespace = pg_namespace.oid
where pg_catalog.age(pg_extension.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912519] results received
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912519] finished - execution time: 1 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912520] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912520] results received
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912520] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912521] 
select D.objoid id, case
    when 'pg_catalog.pg_am'::regclass = classoid then 'A'
    when 'pg_catalog.pg_foreign_data_wrapper'::regclass = classoid then 'W'
    when 'pg_catalog.pg_foreign_server'::regclass = classoid then 'S'
    when 'pg_catalog.pg_extension'::regclass = classoid then 'E'
    
  end as kind,
  D.objsubid sub_id, D.description
from pg_catalog.pg_description D
where classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912521] results received
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912521] finished - execution time: 7 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912522] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912522] results received
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912522] finished - execution time: 1 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912523] 
select 'sequence' as dependent_kind,
       'table' as owner_kind,
       D.objid as dependent_id,
       D.refobjid as owner_id,
       D.refobjsubid as owner_subobject_id
from pg_depend D
  join pg_class C_SEQ on D.objid = C_SEQ.oid
  join pg_class C_TAB on D.refobjid = C_TAB.oid
where C_SEQ.relkind = 'S'
  and C_TAB.relkind = 'r'
  and D.refobjsubid <> 0
  and (D.deptype = 'a' or D.deptype = 'i')
-- ] --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912523] results received
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912523] finished - execution time: 12 ms, fetching time: 7 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:46 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912524] 
with saved_age as (select greatest(pg_catalog.age(?::varchar::xid), pg_catalog.age(?::varchar::xid)) as "value")
select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
(
  select X.last_tx as last_tx
  from (
    (
    select xmin as last_tx
      from pg_catalog.pg_type
      where typnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_class
      where relnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_proc
      where pronamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_operator
      where oprnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select A.xmin as last_tx
      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
      where K.relnamespace = ?::oid
      order by pg_catalog.age(A.xmin)
      limit 1
    )
    union all
    (
    select E.xmin as last_tx
      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
      where T.typnamespace = ?::oid
      order by pg_catalog.age(E.xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_constraint
      where connamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select CO.xmin as last_tx
      from pg_catalog.pg_collation CO
      where CO.collnamespace = ?::oid
      order by pg_catalog.age(CO.xmin)
      limit 1
    )
    union all
    
    (
    select IX.xmin as last_tx
      from pg_catalog.pg_index IX,
           pg_catalog.pg_class IC
      where IC.oid = IX.indrelid
        and IC.relnamespace = ?::oid
        order by pg_catalog.age(IX.xmin)
        limit 1
    )
    union all
    (
    select RU.xmin as last_tx
      from pg_catalog.pg_rewrite RU,
           pg_catalog.pg_class RC
      where RC.oid = RU.ev_class
        and RC.relnamespace = ?::oid
        order by pg_catalog.age(RU.xmin)
        limit 1
    )
    union all
    (
    select TG.xmin as last_tx
      from pg_catalog.pg_trigger TG,
           pg_catalog.pg_class TC
      where TC.oid = TG.tgrelid
        and TC.relnamespace = ?::oid
        order by pg_catalog.age(TG.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_class C on C.oid = D.objoid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_constraint C on C.oid = D.objoid
      where C.connamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_trigger T on T.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = T.tgrelid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_rewrite R on R.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = R.ev_class
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_proc P on P.oid = D.objoid
      where P.pronamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_type T on T.oid = D.objoid
      where T.typnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_operator O on O.oid = D.objoid
      where O.oprnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_collation C on C.oid = D.objoid
      where C.collnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    
  ) X
  order by pg_catalog.age(X.last_tx)
  limit 1
) C, saved_age SA
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912524] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912524] finished - execution time: 473 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912525] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912525] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912525] finished - execution time: 1 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912526] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912526] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912526] finished - execution time: 1 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912527] 
with saved_age as (select greatest(pg_catalog.age(?::varchar::xid), pg_catalog.age(?::varchar::xid)) as "value")
select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
(
  select X.last_tx as last_tx
  from (
    (
    select xmin as last_tx
      from pg_catalog.pg_type
      where typnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_class
      where relnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_proc
      where pronamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_operator
      where oprnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select A.xmin as last_tx
      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
      where K.relnamespace = ?::oid
      order by pg_catalog.age(A.xmin)
      limit 1
    )
    union all
    (
    select E.xmin as last_tx
      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
      where T.typnamespace = ?::oid
      order by pg_catalog.age(E.xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_constraint
      where connamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select CO.xmin as last_tx
      from pg_catalog.pg_collation CO
      where CO.collnamespace = ?::oid
      order by pg_catalog.age(CO.xmin)
      limit 1
    )
    union all
    
    (
    select IX.xmin as last_tx
      from pg_catalog.pg_index IX,
           pg_catalog.pg_class IC
      where IC.oid = IX.indrelid
        and IC.relnamespace = ?::oid
        order by pg_catalog.age(IX.xmin)
        limit 1
    )
    union all
    (
    select RU.xmin as last_tx
      from pg_catalog.pg_rewrite RU,
           pg_catalog.pg_class RC
      where RC.oid = RU.ev_class
        and RC.relnamespace = ?::oid
        order by pg_catalog.age(RU.xmin)
        limit 1
    )
    union all
    (
    select TG.xmin as last_tx
      from pg_catalog.pg_trigger TG,
           pg_catalog.pg_class TC
      where TC.oid = TG.tgrelid
        and TC.relnamespace = ?::oid
        order by pg_catalog.age(TG.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_class C on C.oid = D.objoid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_constraint C on C.oid = D.objoid
      where C.connamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_trigger T on T.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = T.tgrelid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_rewrite R on R.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = R.ev_class
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_proc P on P.oid = D.objoid
      where P.pronamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_type T on T.oid = D.objoid
      where T.typnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_operator O on O.oid = D.objoid
      where O.oprnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_collation C on C.oid = D.objoid
      where C.collnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    
  ) X
  order by pg_catalog.age(X.last_tx)
  limit 1
) C, saved_age SA
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912527] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912527] finished - execution time: 338 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912528] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912528] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912528] finished - execution time: 2 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912529] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912529] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912529] finished - execution time: 2 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912530] 
with saved_age as (select greatest(pg_catalog.age(?::varchar::xid), pg_catalog.age(?::varchar::xid)) as "value")
select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
(
  select X.last_tx as last_tx
  from (
    (
    select xmin as last_tx
      from pg_catalog.pg_type
      where typnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_class
      where relnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_proc
      where pronamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_operator
      where oprnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select A.xmin as last_tx
      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
      where K.relnamespace = ?::oid
      order by pg_catalog.age(A.xmin)
      limit 1
    )
    union all
    (
    select E.xmin as last_tx
      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
      where T.typnamespace = ?::oid
      order by pg_catalog.age(E.xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_constraint
      where connamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select CO.xmin as last_tx
      from pg_catalog.pg_collation CO
      where CO.collnamespace = ?::oid
      order by pg_catalog.age(CO.xmin)
      limit 1
    )
    union all
    
    (
    select IX.xmin as last_tx
      from pg_catalog.pg_index IX,
           pg_catalog.pg_class IC
      where IC.oid = IX.indrelid
        and IC.relnamespace = ?::oid
        order by pg_catalog.age(IX.xmin)
        limit 1
    )
    union all
    (
    select RU.xmin as last_tx
      from pg_catalog.pg_rewrite RU,
           pg_catalog.pg_class RC
      where RC.oid = RU.ev_class
        and RC.relnamespace = ?::oid
        order by pg_catalog.age(RU.xmin)
        limit 1
    )
    union all
    (
    select TG.xmin as last_tx
      from pg_catalog.pg_trigger TG,
           pg_catalog.pg_class TC
      where TC.oid = TG.tgrelid
        and TC.relnamespace = ?::oid
        order by pg_catalog.age(TG.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_class C on C.oid = D.objoid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_constraint C on C.oid = D.objoid
      where C.connamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_trigger T on T.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = T.tgrelid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_rewrite R on R.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = R.ev_class
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_proc P on P.oid = D.objoid
      where P.pronamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_type T on T.oid = D.objoid
      where T.typnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_operator O on O.oid = D.objoid
      where O.oprnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_collation C on C.oid = D.objoid
      where C.collnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    
  ) X
  order by pg_catalog.age(X.last_tx)
  limit 1
) C, saved_age SA
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912530] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912530] finished - execution time: 9 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912531] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912531] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912531] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912532] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912532] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912532] finished - execution time: 2 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912533] 
with U as (select usesysid from pg_catalog.pg_user where usename = current_user),
          T as (
                select oid as sequence_id,
                       relname as sequence_name,
                       pg_catalog.pg_get_userbyid(relowner) as "owner",
                       case when relowner = (select usesysid from U) then trim(both '()' from pg_catalog.pg_sequence_parameters(oid)::varchar)
                       else null::varchar
                       end as sequence_params,
                       
                       xmin as sequence_state_number
                       from pg_catalog.pg_class
                         where relnamespace = ?::oid
                         and relkind = 'S'
                         --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
                )
select sequence_id,
       sequence_name,
       pg_catalog.split_part(sequence_params, ',', 1)::bigint as next_value,
       pg_catalog.split_part(sequence_params, ',', 2)::bigint as min_value,
       pg_catalog.split_part(sequence_params, ',', 3)::bigint as max_value,
       pg_catalog.split_part(sequence_params, ',', 4)::bigint as inc_value,
       pg_catalog.lower(pg_catalog.split_part(sequence_params, ',', 5)) LIKE '%t%' as cycle_option,
       
       sequence_state_number,
       "owner"
from T
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912533] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912533] finished - execution time: 145 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912534] 
select T.oid as type_id,
       T.xmin as type_state_number,
       T.typname as type_name,
       T.typtype as type_sub_kind,
       T.typcategory as type_category,
       T.typrelid as class_id,
       T.typbasetype as base_type_id,
       case when T.typtype in ('c','e') then null
            else pg_catalog.format_type(T.typbasetype, T.typtypmod) end as type_def,
       T.typdefault as default_expression,
       T.typnotnull as mandatory,
       pg_catalog.pg_get_userbyid(T.typowner) as "owner"
from pg_catalog.pg_type T
         left outer join pg_catalog.pg_class C
             on T.typrelid = C.oid
where T.typnamespace = ?::oid
  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
  and (T.typtype in ('d','e') or C.relkind = 'c'::"char" or T.typtype = 'b' and (T.typelem = 0 OR T.typcategory <> 'A'))
order by 1
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912534] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912534] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912535] 
select T.relkind as table_kind,
       T.relname as table_name,
       T.oid as table_id,
       T.xmin as table_state_number,
       /* false */T.relhasoids  as table_with_oids,
       T.relnamespace as tablespace_id,
       T.reloptions as options,
       (select pg_catalog.array_agg(inhparent)::varchar from (select inhparent::bigint from pg_catalog.pg_inherits where T.oid = inhrelid order by inhseqno) as bts) as ancestors,
       (select pg_catalog.array_agg(inhrelid)::varchar from (select inhrelid::bigint from pg_catalog.pg_inherits where T.oid = inhparent order by inhrelid) as its) as successors,
       /* T.relispartition */false  as is_partition,
       /* pg_catalog.pg_get_partkeydef(T.oid) */null  as partition_key,
       /* pg_catalog.pg_get_expr(T.relpartbound, T.oid) */null  as partition_expression,
       pg_catalog.pg_get_userbyid(T.relowner) as "owner"
from pg_catalog.pg_class T
where relnamespace = ?::oid
  and relkind in ('r', 'm', 'v', 'f', 'p')
  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
order by table_kind, table_id
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912535] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912535] finished - execution time: 43 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912536] 
select ft.ftrelid as table_id,
       srv.srvname as table_server,
       ft.ftoptions as table_options,
       pg_catalog.pg_get_userbyid(cls.relowner) as "owner"
from pg_catalog.pg_foreign_table ft
     left outer join pg_catalog.pg_foreign_server srv on ft.ftserver = srv.oid
     join pg_catalog.pg_class cls on ft.ftrelid = cls.oid
where cls.relnamespace = ?::oid
  --  and pg_catalog.age(ft.xmin) <= pg_catalog.age(:tx::varchar::xid)
order by table_id
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912536] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912536] finished - execution time: 14 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912537] 
with schema_procs as (select prorettype, proargtypes, proallargtypes
                      from pg_catalog.pg_proc
                      where pronamespace = ?::oid
                        /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */ ),
     schema_opers as (select oprleft, oprright, oprresult
                      from pg_catalog.pg_operator
                      where oprnamespace = ?::oid
                        /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */ ),
     schema_aggregates as (select A.aggtranstype , A.aggmtranstype 
                           from pg_catalog.pg_aggregate A
                           join pg_catalog.pg_proc P
                             on A.aggfnoid = P.oid
                           where P.pronamespace = ?::oid
                           /* and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(:tx::varchar::xid)) */),
     schema_arg_types as ( select prorettype as type_id
                           from schema_procs
                           union
                           select distinct unnest(proargtypes) as type_id
                           from schema_procs
                           union
                           select distinct unnest(proallargtypes) as type_id
                           from schema_procs
                           union
                           select oprleft as type_id
                           from schema_opers
                           where oprleft is not null
                           union
                           select oprright as type_id
                           from schema_opers
                           where oprright is not null
                           union
                           select oprresult as type_id
                           from schema_opers
                           where oprresult is not null
                           union
                           select aggtranstype::oid as type_id
                           from schema_aggregates
                           union
                           select aggmtranstype::oid as type_id
                           from schema_aggregates
                           
                           )
select type_id, pg_catalog.format_type(type_id, null) as type_spec
from schema_arg_types
where type_id <> 0
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912537] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912537] finished - execution time: 21 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912538] 
with languages as (select oid as lang_oid, lanname as lang
                   from pg_catalog.pg_language),
     routines as (select proname as r_name,
                         prolang as lang_oid,
                         oid as r_id,
                         xmin as r_state_number,
                         proargnames as arg_names,
                         proargmodes as arg_modes,
                         proargtypes::int[] as in_arg_types,
                         proallargtypes::int[] as all_arg_types,
                         pg_catalog.pg_get_expr(proargdefaults, 0) as arg_defaults,
                         provariadic as arg_variadic_id,
                         prorettype as ret_type_id,
                         proretset as ret_set,
                         /* prokind */case when proiswindow then 'w'
                                                when proisagg then 'a'
                                                else 'f'
                                           end  as kind,
                         provolatile as volatile_kind,
                         proisstrict as is_strict,
                         prosecdef as is_security_definer,
                         proconfig as configuration_parameters,
                         procost as cost,
                         pg_catalog.pg_get_userbyid(proowner) as "owner",
                         prorows as rows ,
                         proleakproof as is_leakproof  /* ,
                         proparallel as concurrency_kind */
                  from pg_catalog.pg_proc
                  where pronamespace = ?::oid
                    and not /* (prokind = 'a') */proisagg 
                    /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */)
select *
from routines natural join languages
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912538] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912538] finished - execution time: 6 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912539] 
with procedures as (
  select P.oid as function_id,
         pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as function_name,
         P.prorettype as return_type
  from pg_catalog.pg_proc P
  join pg_catalog.pg_namespace N
    on P.pronamespace = N.oid
),
operators as (
  select O.oid as operator_id,
         pg_catalog.quote_ident(N.nspname) || '.' || O.oprname as operator_name
  from pg_catalog.pg_operator O
  join pg_catalog.pg_namespace N
    on O.oprnamespace = N.oid
)
select P.oid as aggregate_id,
       P.xmin as state_number,
       P.proname as aggregate_name,
       P.proargnames as arg_names,
       P.proargmodes as arg_modes,
       P.proargtypes::int[] as in_arg_types,
       P.proallargtypes::int[] as all_arg_types,
       A.aggtransfn::oid as transition_function_id,
       PT.function_name::text as transition_function_name,
       A.aggtranstype as transition_type,
       A.aggfinalfn::oid as final_function_id,
       case when A.aggfinalfn::oid = 0 then null else PF.function_name end as final_function_name,
       case when A.aggfinalfn::oid = 0 then 0 else PF.return_type end as final_return_type,
       A.agginitval as initial_value,
       A.aggsortop as sort_operator_id,
       case when A.aggsortop = 0 then null else O.operator_name end as sort_operator_name,
       pg_catalog.pg_get_userbyid(P.proowner) as "owner"
       ,
       A.aggfinalextra as final_extra,
       A.aggtransspace as state_size,
       A.aggmtransfn::oid as moving_transition_id,
       case when A.aggmtransfn::oid = 0 then null else FTP.function_name end as moving_transition_name,
       A.aggminvtransfn::oid as inverse_transition_id,
       case when A.aggminvtransfn::oid = 0 then null else ITP.function_name end as inverse_transition_name,
       A.aggmtranstype::oid as moving_state_type,
       A.aggmtransspace as moving_state_size,
       A.aggmfinalfn::oid as moving_final_id,
       case when A.aggmfinalfn::oid = 0 then null else FFP.function_name end as moving_final_name,
       A.aggmfinalextra as moving_final_extra,
       A.aggminitval as moving_initial_value,
       A.aggkind as aggregate_kind,
       A.aggnumdirectargs as direct_args
       
       /* ,
       A.aggcombinefn::oid as combine_function_id,
       case when A.aggcombinefn::oid = 0 then null else CP.function_name end as combine_function_name,
       A.aggserialfn::oid as serialization_function_id,
       case when A.aggserialfn::oid = 0 then null else SP.function_name end as serialization_function_name,
       A.aggdeserialfn::oid as deserialization_function_id,
       case when A.aggdeserialfn::oid = 0 then null else DP.function_name end as deserialization_function_name,
       P.proparallel as concurrency_kind
       */
from pg_catalog.pg_aggregate A
join pg_catalog.pg_proc P
  on A.aggfnoid = P.oid
join procedures PT
  on A.aggtransfn::oid = PT.function_id
left outer join procedures PF
  on A.aggfinalfn::oid = PF.function_id
left outer join operators O
  on A.aggsortop = O.operator_id
left outer join procedures FTP
  on A.aggmtransfn = FTP.function_id
left outer join procedures ITP
  on A.aggminvtransfn = ITP.function_id
left outer join procedures FFP
  on A.aggmfinalfn = FFP.function_id

/* left outer join procedures CP
  on A.aggcombinefn = CP.function_id
left outer join procedures SP
  on A.aggserialfn = SP.function_id
left outer join procedures DP
  on A.aggdeserialfn = DP.function_id
*/
where P.pronamespace = ?::oid
--  and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(:tx::varchar::xid))
order by P.oid
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912539] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912539] finished - execution time: 10 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912540] 
select O.oid as op_id,
       O.xmin as state_number,
       oprname as op_name,
       oprkind as op_kind,
       oprleft as arg_left_type_id,
       oprright as arg_right_type_id,
       oprresult as arg_result_type_id,
       oprcode as func_main,
       pg_catalog.pg_get_userbyid(O.oprowner) as "owner"
from pg_catalog.pg_operator O
where oprnamespace = ?::oid
  --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912540] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912540] finished - execution time: 2 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912541] 
select oid as id,
       xmin as state_number,
       collname as name,
       collcollate as lc_collate,
       collctype as lc_ctype,
       pg_catalog.pg_get_userbyid(collowner) as "owner"
from pg_catalog.pg_collation
where collnamespace = ?::oid
  --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912541] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912541] finished - execution time: 2 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912542] 
with T as ( select distinct T.oid as table_id, T.relname as table_name
            from pg_catalog.pg_class T,
                 pg_catalog.pg_attribute A
            where T.relnamespace = ?::oid
              and T.relkind in ('r', 'm', 'v', 'f', 'p')
              --  and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid))
              and A.attrelid = T.oid )
select T.table_id,
       C.attnum as column_position,
       C.attname as column_name,
       C.xmin as column_state_number,
       C.atttypmod as type_mod,
       C.attndims as dimensions_number,
       pg_catalog.format_type(C.atttypid, C.atttypmod) as type_spec,
       C.atttypid as type_id,
       C.attnotnull as mandatory,
       /* pg_catalog.pg_get_expr(D.adbin, 'pg_catalog.pg_attrdef'::regclass::oid) */D.adsrc  as column_default_expression,
       not C.attislocal as column_is_inherited,
       C.attfdwoptions as options,
       C.attisdropped as column_is_dropped,
       /* C.attidentity */null  as identity_kind
from T
  inner join pg_catalog.pg_attribute C on T.table_id = C.attrelid
  left outer join pg_catalog.pg_attrdef D on (C.attrelid, C.attnum) = (D.adrelid, D.adnum)
where attnum > 0
order by table_id, attnum
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912542] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912542] finished - execution time: 13 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912543] 
with tab as ( select relnamespace as schema_id,
                     oid as table_id,
                     relkind as table_kind
              from pg_catalog.pg_class
              where relnamespace = ?::oid
                and relkind in ('r','m','v','p')),
    ind_head as ( select indrelid as table_id,
                         indexrelid as index_id,
                         indisunique as is_unique,
                         indisprimary as is_primary,
                         indkey as column_positions,
                         indclass as column_operators,
                         indoption as column_options,
                         pg_catalog.pg_get_expr(indpred, indrelid) as condition,
                         case when indexprs is not null
                             then pg_catalog.array_to_string(array(
                                      select case when indkey[k] = 0
                                             then chr(27) || pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
                                             else pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
                                             end
                                      from pg_catalog.generate_subscripts(indkey, 1) as k
                                      order by k),
                                  chr(28))
                             else null end as expressions
                  from pg_catalog.pg_index ),
    ind_stor as ( select cls.relnamespace as schema_id,
                         cls.oid as index_id,
                         cls.xmin as state_number,
                         cls.relname as index_name,
                         /* pg_catalog.pg_indexam_has_property(cls.relam, 'can_order') */am.amcanorder  as can_order
                  from pg_catalog.pg_class cls
                    /* */join pg_catalog.pg_am am on (cls.relam = am.oid)
                  where cls.relkind = 'i'
                    /* and pg_catalog.age(cls.xmin) <= pg_catalog.age(:tx::varchar::xid) */)
select table_id, table_kind,
       index_name, index_id, state_number,
       is_unique, is_primary,
       column_positions, column_operators, column_options,
       condition, expressions, can_order
from tab natural join ind_head natural join ind_stor
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912543] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912543] finished - execution time: 4 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912544] 
with T as ( select oid as table_id,
                   relkind as table_kind,
                   xmin as table_state_id
            from pg_catalog.pg_class
            where relkind in ('r','v','f','p')
              and relnamespace = ?::oid ),
     C as ( select conrelid as table_id,
                   oid::bigint as con_id,
                   xmin as con_state_id,
                   conname as con_name,
                   contype as con_kind,
                   conkey as con_columns,
                   conindid as index_id,
                   confrelid as ref_table_id,
                   confkey as ref_columns,
                   condeferrable as is_deferrable,
                   condeferred as is_init_deferred,
                   confupdtype as on_update,
                   confdeltype as on_delete,
                   /* conbin */consrc 
            from pg_catalog.pg_constraint
            where contype in ('p','u','f','c')
              and connamespace = ?::oid )
select table_id,
       table_kind,
       con_id,
       con_state_id::varchar::bigint as con_state_id,
       con_name,
       con_kind,
       con_columns,
       index_id,
       ref_table_id,
       is_deferrable,
       is_init_deferred,
       on_update,
       on_delete,
       /* pg_catalog.pg_get_expr(conbin, table_id) */consrc  as con_expression,
       ref_columns
from T natural join C
--  where pg_catalog.age(table_state_id) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(con_state_id) <= pg_catalog.age(:tx::varchar::xid)
order by pg_catalog.strpos('pufc', con_kind)
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912544] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912544] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912545] 
select R.ev_class as table_id,
       R.oid as rule_id,
       R.xmin as rule_state_number,
       R.rulename as rule_name,
       pg_catalog.translate(ev_type,'1234','SUID') as rule_event_code,
       R.ev_enabled as rule_fire_mode,
       R.is_instead as rule_is_instead
from pg_catalog.pg_rewrite R
where R.ev_class in (select oid
                     from pg_catalog.pg_class
                     where relnamespace = ?::oid)
  --  and pg_catalog.age(R.xmin) <= pg_catalog.age(:tx::varchar::xid)
  and R.rulename != '_RETURN'::name
order by R.ev_class::bigint, ev_type
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912545] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912545] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912546] 
select T.tgrelid as table_id,
       T.oid as trigger_id,
       T.xmin as trigger_state_number,
       T.tgname as trigger_name,
       T.tgfoid as function_id,
       T.tgtype & 31 as bits,
       T.tgdeferrable as is_deferrable,
       T.tginitdeferred as is_init_deferred,
       T.tgenabled as trigger_fire_mode
from pg_catalog.pg_trigger T
where T.tgrelid in (select oid
                    from pg_catalog.pg_class
                    where relnamespace = ?::oid)
  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
  and not T.tgisinternal
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912546] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912546] finished - execution time: 2 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912547] 
select D.objoid id, C.relkind as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select T.oid id, 'T' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, pg_catalog.translate(C.contype, 'pufc', 'kkxz') as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 't' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'R' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'F' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'O' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'C' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)

-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912547] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912547] finished - execution time: 5 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912548] 
select distinct
       T.relkind as view_kind,
       T.oid as view_id,
       pg_catalog.pg_get_viewdef(T.oid) as source_text
from pg_catalog.pg_class T
  join pg_catalog.pg_namespace N on T.relnamespace = N.oid
  left outer join pg_catalog.pg_attribute A on (A.attrelid = T.oid)
where N.oid = ?::oid
  and T.relkind in ('m','v')
  --  and (pg_catalog.age(T.xmin) <= pg_catalog.age(:src_tx::varchar::xid) or pg_catalog.age(A.xmin) <= pg_catalog.age(:src_tx::varchar::xid))
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912548] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912548] finished - execution time: 2 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912549] 
with A as ( select oid as table_id, pg_catalog.upper(relkind) as table_kind
            from pg_catalog.pg_class
            where relnamespace = ?::oid
              and relkind in ('r', 'm', 'v', 'f', 'p') )
select table_kind,
       table_id,
       R.oid as rule_id,
       pg_catalog.pg_get_ruledef(R.oid) as source_text
from A join pg_catalog.pg_rewrite R
        on A.table_id = R.ev_class
where R.rulename != '_RETURN'::name
  --  and pg_catalog.age(R.xmin) <= pg_catalog.age(:src_tx::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912549] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912549] finished - execution time: 2 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912550] 
with system_languages as ( select oid as lang
                           from pg_catalog.pg_language
                           where lanname in ('c','internal') )
select oid as id,
       pg_catalog.pg_get_function_arguments(oid) as arguments_def,
       pg_catalog.pg_get_function_result(oid) as result_def,
       prosrc as source_text
from pg_catalog.pg_proc
where pronamespace = ?::oid
  --  and pg_catalog.age(xmin) <= pg_catalog.age(:src_tx::varchar::xid)
  and not /* (prokind = 'a') */proisagg 
  and prolang not in (select lang from system_languages)
  and prosrc is not null
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912550] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912550] finished - execution time: 3 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912551] 
with U as (select usesysid from pg_catalog.pg_user where usename = current_user),
          T as (
                select oid as sequence_id,
                       relname as sequence_name,
                       pg_catalog.pg_get_userbyid(relowner) as "owner",
                       case when relowner = (select usesysid from U) then trim(both '()' from pg_catalog.pg_sequence_parameters(oid)::varchar)
                       else null::varchar
                       end as sequence_params,
                       
                       xmin as sequence_state_number
                       from pg_catalog.pg_class
                         where relnamespace = ?::oid
                         and relkind = 'S'
                         --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
                )
select sequence_id,
       sequence_name,
       pg_catalog.split_part(sequence_params, ',', 1)::bigint as next_value,
       pg_catalog.split_part(sequence_params, ',', 2)::bigint as min_value,
       pg_catalog.split_part(sequence_params, ',', 3)::bigint as max_value,
       pg_catalog.split_part(sequence_params, ',', 4)::bigint as inc_value,
       pg_catalog.lower(pg_catalog.split_part(sequence_params, ',', 5)) LIKE '%t%' as cycle_option,
       
       sequence_state_number,
       "owner"
from T
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912551] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912551] finished - execution time: 3 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912552] 
select T.oid as type_id,
       T.xmin as type_state_number,
       T.typname as type_name,
       T.typtype as type_sub_kind,
       T.typcategory as type_category,
       T.typrelid as class_id,
       T.typbasetype as base_type_id,
       case when T.typtype in ('c','e') then null
            else pg_catalog.format_type(T.typbasetype, T.typtypmod) end as type_def,
       T.typdefault as default_expression,
       T.typnotnull as mandatory,
       pg_catalog.pg_get_userbyid(T.typowner) as "owner"
from pg_catalog.pg_type T
         left outer join pg_catalog.pg_class C
             on T.typrelid = C.oid
where T.typnamespace = ?::oid
  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
  and (T.typtype in ('d','e') or C.relkind = 'c'::"char" or T.typtype = 'b' and (T.typelem = 0 OR T.typcategory <> 'A'))
order by 1
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912552] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912552] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912553] 
select T.relkind as table_kind,
       T.relname as table_name,
       T.oid as table_id,
       T.xmin as table_state_number,
       /* false */T.relhasoids  as table_with_oids,
       T.relnamespace as tablespace_id,
       T.reloptions as options,
       (select pg_catalog.array_agg(inhparent)::varchar from (select inhparent::bigint from pg_catalog.pg_inherits where T.oid = inhrelid order by inhseqno) as bts) as ancestors,
       (select pg_catalog.array_agg(inhrelid)::varchar from (select inhrelid::bigint from pg_catalog.pg_inherits where T.oid = inhparent order by inhrelid) as its) as successors,
       /* T.relispartition */false  as is_partition,
       /* pg_catalog.pg_get_partkeydef(T.oid) */null  as partition_key,
       /* pg_catalog.pg_get_expr(T.relpartbound, T.oid) */null  as partition_expression,
       pg_catalog.pg_get_userbyid(T.relowner) as "owner"
from pg_catalog.pg_class T
where relnamespace = ?::oid
  and relkind in ('r', 'm', 'v', 'f', 'p')
  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
order by table_kind, table_id
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912553] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912553] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912554] 
select ft.ftrelid as table_id,
       srv.srvname as table_server,
       ft.ftoptions as table_options,
       pg_catalog.pg_get_userbyid(cls.relowner) as "owner"
from pg_catalog.pg_foreign_table ft
     left outer join pg_catalog.pg_foreign_server srv on ft.ftserver = srv.oid
     join pg_catalog.pg_class cls on ft.ftrelid = cls.oid
where cls.relnamespace = ?::oid
  --  and pg_catalog.age(ft.xmin) <= pg_catalog.age(:tx::varchar::xid)
order by table_id
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912554] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912554] finished - execution time: 1 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912555] 
with schema_procs as (select prorettype, proargtypes, proallargtypes
                      from pg_catalog.pg_proc
                      where pronamespace = ?::oid
                        /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */ ),
     schema_opers as (select oprleft, oprright, oprresult
                      from pg_catalog.pg_operator
                      where oprnamespace = ?::oid
                        /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */ ),
     schema_aggregates as (select A.aggtranstype , A.aggmtranstype 
                           from pg_catalog.pg_aggregate A
                           join pg_catalog.pg_proc P
                             on A.aggfnoid = P.oid
                           where P.pronamespace = ?::oid
                           /* and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(:tx::varchar::xid)) */),
     schema_arg_types as ( select prorettype as type_id
                           from schema_procs
                           union
                           select distinct unnest(proargtypes) as type_id
                           from schema_procs
                           union
                           select distinct unnest(proallargtypes) as type_id
                           from schema_procs
                           union
                           select oprleft as type_id
                           from schema_opers
                           where oprleft is not null
                           union
                           select oprright as type_id
                           from schema_opers
                           where oprright is not null
                           union
                           select oprresult as type_id
                           from schema_opers
                           where oprresult is not null
                           union
                           select aggtranstype::oid as type_id
                           from schema_aggregates
                           union
                           select aggmtranstype::oid as type_id
                           from schema_aggregates
                           
                           )
select type_id, pg_catalog.format_type(type_id, null) as type_spec
from schema_arg_types
where type_id <> 0
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912555] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912555] finished - execution time: 3 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912556] 
with languages as (select oid as lang_oid, lanname as lang
                   from pg_catalog.pg_language),
     routines as (select proname as r_name,
                         prolang as lang_oid,
                         oid as r_id,
                         xmin as r_state_number,
                         proargnames as arg_names,
                         proargmodes as arg_modes,
                         proargtypes::int[] as in_arg_types,
                         proallargtypes::int[] as all_arg_types,
                         pg_catalog.pg_get_expr(proargdefaults, 0) as arg_defaults,
                         provariadic as arg_variadic_id,
                         prorettype as ret_type_id,
                         proretset as ret_set,
                         /* prokind */case when proiswindow then 'w'
                                                when proisagg then 'a'
                                                else 'f'
                                           end  as kind,
                         provolatile as volatile_kind,
                         proisstrict as is_strict,
                         prosecdef as is_security_definer,
                         proconfig as configuration_parameters,
                         procost as cost,
                         pg_catalog.pg_get_userbyid(proowner) as "owner",
                         prorows as rows ,
                         proleakproof as is_leakproof  /* ,
                         proparallel as concurrency_kind */
                  from pg_catalog.pg_proc
                  where pronamespace = ?::oid
                    and not /* (prokind = 'a') */proisagg 
                    /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */)
select *
from routines natural join languages
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912556] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912556] finished - execution time: 3 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912557] 
with procedures as (
  select P.oid as function_id,
         pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as function_name,
         P.prorettype as return_type
  from pg_catalog.pg_proc P
  join pg_catalog.pg_namespace N
    on P.pronamespace = N.oid
),
operators as (
  select O.oid as operator_id,
         pg_catalog.quote_ident(N.nspname) || '.' || O.oprname as operator_name
  from pg_catalog.pg_operator O
  join pg_catalog.pg_namespace N
    on O.oprnamespace = N.oid
)
select P.oid as aggregate_id,
       P.xmin as state_number,
       P.proname as aggregate_name,
       P.proargnames as arg_names,
       P.proargmodes as arg_modes,
       P.proargtypes::int[] as in_arg_types,
       P.proallargtypes::int[] as all_arg_types,
       A.aggtransfn::oid as transition_function_id,
       PT.function_name::text as transition_function_name,
       A.aggtranstype as transition_type,
       A.aggfinalfn::oid as final_function_id,
       case when A.aggfinalfn::oid = 0 then null else PF.function_name end as final_function_name,
       case when A.aggfinalfn::oid = 0 then 0 else PF.return_type end as final_return_type,
       A.agginitval as initial_value,
       A.aggsortop as sort_operator_id,
       case when A.aggsortop = 0 then null else O.operator_name end as sort_operator_name,
       pg_catalog.pg_get_userbyid(P.proowner) as "owner"
       ,
       A.aggfinalextra as final_extra,
       A.aggtransspace as state_size,
       A.aggmtransfn::oid as moving_transition_id,
       case when A.aggmtransfn::oid = 0 then null else FTP.function_name end as moving_transition_name,
       A.aggminvtransfn::oid as inverse_transition_id,
       case when A.aggminvtransfn::oid = 0 then null else ITP.function_name end as inverse_transition_name,
       A.aggmtranstype::oid as moving_state_type,
       A.aggmtransspace as moving_state_size,
       A.aggmfinalfn::oid as moving_final_id,
       case when A.aggmfinalfn::oid = 0 then null else FFP.function_name end as moving_final_name,
       A.aggmfinalextra as moving_final_extra,
       A.aggminitval as moving_initial_value,
       A.aggkind as aggregate_kind,
       A.aggnumdirectargs as direct_args
       
       /* ,
       A.aggcombinefn::oid as combine_function_id,
       case when A.aggcombinefn::oid = 0 then null else CP.function_name end as combine_function_name,
       A.aggserialfn::oid as serialization_function_id,
       case when A.aggserialfn::oid = 0 then null else SP.function_name end as serialization_function_name,
       A.aggdeserialfn::oid as deserialization_function_id,
       case when A.aggdeserialfn::oid = 0 then null else DP.function_name end as deserialization_function_name,
       P.proparallel as concurrency_kind
       */
from pg_catalog.pg_aggregate A
join pg_catalog.pg_proc P
  on A.aggfnoid = P.oid
join procedures PT
  on A.aggtransfn::oid = PT.function_id
left outer join procedures PF
  on A.aggfinalfn::oid = PF.function_id
left outer join operators O
  on A.aggsortop = O.operator_id
left outer join procedures FTP
  on A.aggmtransfn = FTP.function_id
left outer join procedures ITP
  on A.aggminvtransfn = ITP.function_id
left outer join procedures FFP
  on A.aggmfinalfn = FFP.function_id

/* left outer join procedures CP
  on A.aggcombinefn = CP.function_id
left outer join procedures SP
  on A.aggserialfn = SP.function_id
left outer join procedures DP
  on A.aggdeserialfn = DP.function_id
*/
where P.pronamespace = ?::oid
--  and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(:tx::varchar::xid))
order by P.oid
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912557] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912557] finished - execution time: 11 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912558] 
select O.oid as op_id,
       O.xmin as state_number,
       oprname as op_name,
       oprkind as op_kind,
       oprleft as arg_left_type_id,
       oprright as arg_right_type_id,
       oprresult as arg_result_type_id,
       oprcode as func_main,
       pg_catalog.pg_get_userbyid(O.oprowner) as "owner"
from pg_catalog.pg_operator O
where oprnamespace = ?::oid
  --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912558] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912558] finished - execution time: 2 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912559] 
select oid as id,
       xmin as state_number,
       collname as name,
       collcollate as lc_collate,
       collctype as lc_ctype,
       pg_catalog.pg_get_userbyid(collowner) as "owner"
from pg_catalog.pg_collation
where collnamespace = ?::oid
  --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912559] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912559] finished - execution time: 2 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912560] 
with T as ( select distinct T.oid as table_id, T.relname as table_name
            from pg_catalog.pg_class T,
                 pg_catalog.pg_attribute A
            where T.relnamespace = ?::oid
              and T.relkind in ('r', 'm', 'v', 'f', 'p')
              --  and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid))
              and A.attrelid = T.oid )
select T.table_id,
       C.attnum as column_position,
       C.attname as column_name,
       C.xmin as column_state_number,
       C.atttypmod as type_mod,
       C.attndims as dimensions_number,
       pg_catalog.format_type(C.atttypid, C.atttypmod) as type_spec,
       C.atttypid as type_id,
       C.attnotnull as mandatory,
       /* pg_catalog.pg_get_expr(D.adbin, 'pg_catalog.pg_attrdef'::regclass::oid) */D.adsrc  as column_default_expression,
       not C.attislocal as column_is_inherited,
       C.attfdwoptions as options,
       C.attisdropped as column_is_dropped,
       /* C.attidentity */null  as identity_kind
from T
  inner join pg_catalog.pg_attribute C on T.table_id = C.attrelid
  left outer join pg_catalog.pg_attrdef D on (C.attrelid, C.attnum) = (D.adrelid, D.adnum)
where attnum > 0
order by table_id, attnum
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912560] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912560] finished - execution time: 4 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912561] 
with tab as ( select relnamespace as schema_id,
                     oid as table_id,
                     relkind as table_kind
              from pg_catalog.pg_class
              where relnamespace = ?::oid
                and relkind in ('r','m','v','p')),
    ind_head as ( select indrelid as table_id,
                         indexrelid as index_id,
                         indisunique as is_unique,
                         indisprimary as is_primary,
                         indkey as column_positions,
                         indclass as column_operators,
                         indoption as column_options,
                         pg_catalog.pg_get_expr(indpred, indrelid) as condition,
                         case when indexprs is not null
                             then pg_catalog.array_to_string(array(
                                      select case when indkey[k] = 0
                                             then chr(27) || pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
                                             else pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
                                             end
                                      from pg_catalog.generate_subscripts(indkey, 1) as k
                                      order by k),
                                  chr(28))
                             else null end as expressions
                  from pg_catalog.pg_index ),
    ind_stor as ( select cls.relnamespace as schema_id,
                         cls.oid as index_id,
                         cls.xmin as state_number,
                         cls.relname as index_name,
                         /* pg_catalog.pg_indexam_has_property(cls.relam, 'can_order') */am.amcanorder  as can_order
                  from pg_catalog.pg_class cls
                    /* */join pg_catalog.pg_am am on (cls.relam = am.oid)
                  where cls.relkind = 'i'
                    /* and pg_catalog.age(cls.xmin) <= pg_catalog.age(:tx::varchar::xid) */)
select table_id, table_kind,
       index_name, index_id, state_number,
       is_unique, is_primary,
       column_positions, column_operators, column_options,
       condition, expressions, can_order
from tab natural join ind_head natural join ind_stor
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912561] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912561] finished - execution time: 3 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912562] 
with T as ( select oid as table_id,
                   relkind as table_kind,
                   xmin as table_state_id
            from pg_catalog.pg_class
            where relkind in ('r','v','f','p')
              and relnamespace = ?::oid ),
     C as ( select conrelid as table_id,
                   oid::bigint as con_id,
                   xmin as con_state_id,
                   conname as con_name,
                   contype as con_kind,
                   conkey as con_columns,
                   conindid as index_id,
                   confrelid as ref_table_id,
                   confkey as ref_columns,
                   condeferrable as is_deferrable,
                   condeferred as is_init_deferred,
                   confupdtype as on_update,
                   confdeltype as on_delete,
                   /* conbin */consrc 
            from pg_catalog.pg_constraint
            where contype in ('p','u','f','c')
              and connamespace = ?::oid )
select table_id,
       table_kind,
       con_id,
       con_state_id::varchar::bigint as con_state_id,
       con_name,
       con_kind,
       con_columns,
       index_id,
       ref_table_id,
       is_deferrable,
       is_init_deferred,
       on_update,
       on_delete,
       /* pg_catalog.pg_get_expr(conbin, table_id) */consrc  as con_expression,
       ref_columns
from T natural join C
--  where pg_catalog.age(table_state_id) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(con_state_id) <= pg_catalog.age(:tx::varchar::xid)
order by pg_catalog.strpos('pufc', con_kind)
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912562] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912562] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912563] 
select R.ev_class as table_id,
       R.oid as rule_id,
       R.xmin as rule_state_number,
       R.rulename as rule_name,
       pg_catalog.translate(ev_type,'1234','SUID') as rule_event_code,
       R.ev_enabled as rule_fire_mode,
       R.is_instead as rule_is_instead
from pg_catalog.pg_rewrite R
where R.ev_class in (select oid
                     from pg_catalog.pg_class
                     where relnamespace = ?::oid)
  --  and pg_catalog.age(R.xmin) <= pg_catalog.age(:tx::varchar::xid)
  and R.rulename != '_RETURN'::name
order by R.ev_class::bigint, ev_type
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912563] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912563] finished - execution time: 2 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912564] 
select T.tgrelid as table_id,
       T.oid as trigger_id,
       T.xmin as trigger_state_number,
       T.tgname as trigger_name,
       T.tgfoid as function_id,
       T.tgtype & 31 as bits,
       T.tgdeferrable as is_deferrable,
       T.tginitdeferred as is_init_deferred,
       T.tgenabled as trigger_fire_mode
from pg_catalog.pg_trigger T
where T.tgrelid in (select oid
                    from pg_catalog.pg_class
                    where relnamespace = ?::oid)
  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
  and not T.tgisinternal
-- ] --------------------------------------------------
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912564] results received
-- 2020-06-01 14:45:47 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912564] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912565] 
select D.objoid id, C.relkind as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select T.oid id, 'T' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, pg_catalog.translate(C.contype, 'pufc', 'kkxz') as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 't' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'R' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'F' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'O' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'C' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)

-- ] --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912565] results received
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912565] finished - execution time: 6 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912566] 
select distinct
       T.relkind as view_kind,
       T.oid as view_id,
       pg_catalog.pg_get_viewdef(T.oid) as source_text
from pg_catalog.pg_class T
  join pg_catalog.pg_namespace N on T.relnamespace = N.oid
  left outer join pg_catalog.pg_attribute A on (A.attrelid = T.oid)
where N.oid = ?::oid
  and T.relkind in ('m','v')
  --  and (pg_catalog.age(T.xmin) <= pg_catalog.age(:src_tx::varchar::xid) or pg_catalog.age(A.xmin) <= pg_catalog.age(:src_tx::varchar::xid))
-- ] --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912566] results received
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912566] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912567] 
with A as ( select oid as table_id, pg_catalog.upper(relkind) as table_kind
            from pg_catalog.pg_class
            where relnamespace = ?::oid
              and relkind in ('r', 'm', 'v', 'f', 'p') )
select table_kind,
       table_id,
       R.oid as rule_id,
       pg_catalog.pg_get_ruledef(R.oid) as source_text
from A join pg_catalog.pg_rewrite R
        on A.table_id = R.ev_class
where R.rulename != '_RETURN'::name
  --  and pg_catalog.age(R.xmin) <= pg_catalog.age(:src_tx::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912567] results received
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912567] finished - execution time: 1 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912568] 
with system_languages as ( select oid as lang
                           from pg_catalog.pg_language
                           where lanname in ('c','internal') )
select oid as id,
       pg_catalog.pg_get_function_arguments(oid) as arguments_def,
       pg_catalog.pg_get_function_result(oid) as result_def,
       prosrc as source_text
from pg_catalog.pg_proc
where pronamespace = ?::oid
  --  and pg_catalog.age(xmin) <= pg_catalog.age(:src_tx::varchar::xid)
  and not /* (prokind = 'a') */proisagg 
  and prolang not in (select lang from system_languages)
  and prosrc is not null
-- ] --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912568] results received
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912568] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912569] 
with U as (select usesysid from pg_catalog.pg_user where usename = current_user),
          T as (
                select oid as sequence_id,
                       relname as sequence_name,
                       pg_catalog.pg_get_userbyid(relowner) as "owner",
                       case when relowner = (select usesysid from U) then trim(both '()' from pg_catalog.pg_sequence_parameters(oid)::varchar)
                       else null::varchar
                       end as sequence_params,
                       
                       xmin as sequence_state_number
                       from pg_catalog.pg_class
                         where relnamespace = ?::oid
                         and relkind = 'S'
                         --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
                )
select sequence_id,
       sequence_name,
       pg_catalog.split_part(sequence_params, ',', 1)::bigint as next_value,
       pg_catalog.split_part(sequence_params, ',', 2)::bigint as min_value,
       pg_catalog.split_part(sequence_params, ',', 3)::bigint as max_value,
       pg_catalog.split_part(sequence_params, ',', 4)::bigint as inc_value,
       pg_catalog.lower(pg_catalog.split_part(sequence_params, ',', 5)) LIKE '%t%' as cycle_option,
       
       sequence_state_number,
       "owner"
from T
-- ] --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912569] results received
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912569] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912570] 
select T.oid as type_id,
       T.xmin as type_state_number,
       T.typname as type_name,
       T.typtype as type_sub_kind,
       T.typcategory as type_category,
       T.typrelid as class_id,
       T.typbasetype as base_type_id,
       case when T.typtype in ('c','e') then null
            else pg_catalog.format_type(T.typbasetype, T.typtypmod) end as type_def,
       T.typdefault as default_expression,
       T.typnotnull as mandatory,
       pg_catalog.pg_get_userbyid(T.typowner) as "owner"
from pg_catalog.pg_type T
         left outer join pg_catalog.pg_class C
             on T.typrelid = C.oid
where T.typnamespace = ?::oid
  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
  and (T.typtype in ('d','e') or C.relkind = 'c'::"char" or T.typtype = 'b' and (T.typelem = 0 OR T.typcategory <> 'A'))
order by 1
-- ] --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912570] results received
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912570] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912571] 
select T.relkind as table_kind,
       T.relname as table_name,
       T.oid as table_id,
       T.xmin as table_state_number,
       /* false */T.relhasoids  as table_with_oids,
       T.relnamespace as tablespace_id,
       T.reloptions as options,
       (select pg_catalog.array_agg(inhparent)::varchar from (select inhparent::bigint from pg_catalog.pg_inherits where T.oid = inhrelid order by inhseqno) as bts) as ancestors,
       (select pg_catalog.array_agg(inhrelid)::varchar from (select inhrelid::bigint from pg_catalog.pg_inherits where T.oid = inhparent order by inhrelid) as its) as successors,
       /* T.relispartition */false  as is_partition,
       /* pg_catalog.pg_get_partkeydef(T.oid) */null  as partition_key,
       /* pg_catalog.pg_get_expr(T.relpartbound, T.oid) */null  as partition_expression,
       pg_catalog.pg_get_userbyid(T.relowner) as "owner"
from pg_catalog.pg_class T
where relnamespace = ?::oid
  and relkind in ('r', 'm', 'v', 'f', 'p')
  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
order by table_kind, table_id
-- ] --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912571] results received
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912571] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912572] 
select ft.ftrelid as table_id,
       srv.srvname as table_server,
       ft.ftoptions as table_options,
       pg_catalog.pg_get_userbyid(cls.relowner) as "owner"
from pg_catalog.pg_foreign_table ft
     left outer join pg_catalog.pg_foreign_server srv on ft.ftserver = srv.oid
     join pg_catalog.pg_class cls on ft.ftrelid = cls.oid
where cls.relnamespace = ?::oid
  --  and pg_catalog.age(ft.xmin) <= pg_catalog.age(:tx::varchar::xid)
order by table_id
-- ] --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912572] results received
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912572] finished - execution time: 1 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912573] 
with schema_procs as (select prorettype, proargtypes, proallargtypes
                      from pg_catalog.pg_proc
                      where pronamespace = ?::oid
                        /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */ ),
     schema_opers as (select oprleft, oprright, oprresult
                      from pg_catalog.pg_operator
                      where oprnamespace = ?::oid
                        /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */ ),
     schema_aggregates as (select A.aggtranstype , A.aggmtranstype 
                           from pg_catalog.pg_aggregate A
                           join pg_catalog.pg_proc P
                             on A.aggfnoid = P.oid
                           where P.pronamespace = ?::oid
                           /* and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(:tx::varchar::xid)) */),
     schema_arg_types as ( select prorettype as type_id
                           from schema_procs
                           union
                           select distinct unnest(proargtypes) as type_id
                           from schema_procs
                           union
                           select distinct unnest(proallargtypes) as type_id
                           from schema_procs
                           union
                           select oprleft as type_id
                           from schema_opers
                           where oprleft is not null
                           union
                           select oprright as type_id
                           from schema_opers
                           where oprright is not null
                           union
                           select oprresult as type_id
                           from schema_opers
                           where oprresult is not null
                           union
                           select aggtranstype::oid as type_id
                           from schema_aggregates
                           union
                           select aggmtranstype::oid as type_id
                           from schema_aggregates
                           
                           )
select type_id, pg_catalog.format_type(type_id, null) as type_spec
from schema_arg_types
where type_id <> 0
-- ] --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912573] results received
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912573] finished - execution time: 3 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912574] 
with languages as (select oid as lang_oid, lanname as lang
                   from pg_catalog.pg_language),
     routines as (select proname as r_name,
                         prolang as lang_oid,
                         oid as r_id,
                         xmin as r_state_number,
                         proargnames as arg_names,
                         proargmodes as arg_modes,
                         proargtypes::int[] as in_arg_types,
                         proallargtypes::int[] as all_arg_types,
                         pg_catalog.pg_get_expr(proargdefaults, 0) as arg_defaults,
                         provariadic as arg_variadic_id,
                         prorettype as ret_type_id,
                         proretset as ret_set,
                         /* prokind */case when proiswindow then 'w'
                                                when proisagg then 'a'
                                                else 'f'
                                           end  as kind,
                         provolatile as volatile_kind,
                         proisstrict as is_strict,
                         prosecdef as is_security_definer,
                         proconfig as configuration_parameters,
                         procost as cost,
                         pg_catalog.pg_get_userbyid(proowner) as "owner",
                         prorows as rows ,
                         proleakproof as is_leakproof  /* ,
                         proparallel as concurrency_kind */
                  from pg_catalog.pg_proc
                  where pronamespace = ?::oid
                    and not /* (prokind = 'a') */proisagg 
                    /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */)
select *
from routines natural join languages
-- ] --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912574] results received
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912574] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912575] 
with procedures as (
  select P.oid as function_id,
         pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as function_name,
         P.prorettype as return_type
  from pg_catalog.pg_proc P
  join pg_catalog.pg_namespace N
    on P.pronamespace = N.oid
),
operators as (
  select O.oid as operator_id,
         pg_catalog.quote_ident(N.nspname) || '.' || O.oprname as operator_name
  from pg_catalog.pg_operator O
  join pg_catalog.pg_namespace N
    on O.oprnamespace = N.oid
)
select P.oid as aggregate_id,
       P.xmin as state_number,
       P.proname as aggregate_name,
       P.proargnames as arg_names,
       P.proargmodes as arg_modes,
       P.proargtypes::int[] as in_arg_types,
       P.proallargtypes::int[] as all_arg_types,
       A.aggtransfn::oid as transition_function_id,
       PT.function_name::text as transition_function_name,
       A.aggtranstype as transition_type,
       A.aggfinalfn::oid as final_function_id,
       case when A.aggfinalfn::oid = 0 then null else PF.function_name end as final_function_name,
       case when A.aggfinalfn::oid = 0 then 0 else PF.return_type end as final_return_type,
       A.agginitval as initial_value,
       A.aggsortop as sort_operator_id,
       case when A.aggsortop = 0 then null else O.operator_name end as sort_operator_name,
       pg_catalog.pg_get_userbyid(P.proowner) as "owner"
       ,
       A.aggfinalextra as final_extra,
       A.aggtransspace as state_size,
       A.aggmtransfn::oid as moving_transition_id,
       case when A.aggmtransfn::oid = 0 then null else FTP.function_name end as moving_transition_name,
       A.aggminvtransfn::oid as inverse_transition_id,
       case when A.aggminvtransfn::oid = 0 then null else ITP.function_name end as inverse_transition_name,
       A.aggmtranstype::oid as moving_state_type,
       A.aggmtransspace as moving_state_size,
       A.aggmfinalfn::oid as moving_final_id,
       case when A.aggmfinalfn::oid = 0 then null else FFP.function_name end as moving_final_name,
       A.aggmfinalextra as moving_final_extra,
       A.aggminitval as moving_initial_value,
       A.aggkind as aggregate_kind,
       A.aggnumdirectargs as direct_args
       
       /* ,
       A.aggcombinefn::oid as combine_function_id,
       case when A.aggcombinefn::oid = 0 then null else CP.function_name end as combine_function_name,
       A.aggserialfn::oid as serialization_function_id,
       case when A.aggserialfn::oid = 0 then null else SP.function_name end as serialization_function_name,
       A.aggdeserialfn::oid as deserialization_function_id,
       case when A.aggdeserialfn::oid = 0 then null else DP.function_name end as deserialization_function_name,
       P.proparallel as concurrency_kind
       */
from pg_catalog.pg_aggregate A
join pg_catalog.pg_proc P
  on A.aggfnoid = P.oid
join procedures PT
  on A.aggtransfn::oid = PT.function_id
left outer join procedures PF
  on A.aggfinalfn::oid = PF.function_id
left outer join operators O
  on A.aggsortop = O.operator_id
left outer join procedures FTP
  on A.aggmtransfn = FTP.function_id
left outer join procedures ITP
  on A.aggminvtransfn = ITP.function_id
left outer join procedures FFP
  on A.aggmfinalfn = FFP.function_id

/* left outer join procedures CP
  on A.aggcombinefn = CP.function_id
left outer join procedures SP
  on A.aggserialfn = SP.function_id
left outer join procedures DP
  on A.aggdeserialfn = DP.function_id
*/
where P.pronamespace = ?::oid
--  and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(:tx::varchar::xid))
order by P.oid
-- ] --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912575] results received
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912575] finished - execution time: 10 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912576] 
select O.oid as op_id,
       O.xmin as state_number,
       oprname as op_name,
       oprkind as op_kind,
       oprleft as arg_left_type_id,
       oprright as arg_right_type_id,
       oprresult as arg_result_type_id,
       oprcode as func_main,
       pg_catalog.pg_get_userbyid(O.oprowner) as "owner"
from pg_catalog.pg_operator O
where oprnamespace = ?::oid
  --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912576] results received
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912576] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912577] 
select oid as id,
       xmin as state_number,
       collname as name,
       collcollate as lc_collate,
       collctype as lc_ctype,
       pg_catalog.pg_get_userbyid(collowner) as "owner"
from pg_catalog.pg_collation
where collnamespace = ?::oid
  --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912577] results received
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912577] finished - execution time: 1 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912578] 
with T as ( select distinct T.oid as table_id, T.relname as table_name
            from pg_catalog.pg_class T,
                 pg_catalog.pg_attribute A
            where T.relnamespace = ?::oid
              and T.relkind in ('r', 'm', 'v', 'f', 'p')
              --  and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid))
              and A.attrelid = T.oid )
select T.table_id,
       C.attnum as column_position,
       C.attname as column_name,
       C.xmin as column_state_number,
       C.atttypmod as type_mod,
       C.attndims as dimensions_number,
       pg_catalog.format_type(C.atttypid, C.atttypmod) as type_spec,
       C.atttypid as type_id,
       C.attnotnull as mandatory,
       /* pg_catalog.pg_get_expr(D.adbin, 'pg_catalog.pg_attrdef'::regclass::oid) */D.adsrc  as column_default_expression,
       not C.attislocal as column_is_inherited,
       C.attfdwoptions as options,
       C.attisdropped as column_is_dropped,
       /* C.attidentity */null  as identity_kind
from T
  inner join pg_catalog.pg_attribute C on T.table_id = C.attrelid
  left outer join pg_catalog.pg_attrdef D on (C.attrelid, C.attnum) = (D.adrelid, D.adnum)
where attnum > 0
order by table_id, attnum
-- ] --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912578] results received
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912578] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912579] 
with tab as ( select relnamespace as schema_id,
                     oid as table_id,
                     relkind as table_kind
              from pg_catalog.pg_class
              where relnamespace = ?::oid
                and relkind in ('r','m','v','p')),
    ind_head as ( select indrelid as table_id,
                         indexrelid as index_id,
                         indisunique as is_unique,
                         indisprimary as is_primary,
                         indkey as column_positions,
                         indclass as column_operators,
                         indoption as column_options,
                         pg_catalog.pg_get_expr(indpred, indrelid) as condition,
                         case when indexprs is not null
                             then pg_catalog.array_to_string(array(
                                      select case when indkey[k] = 0
                                             then chr(27) || pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
                                             else pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
                                             end
                                      from pg_catalog.generate_subscripts(indkey, 1) as k
                                      order by k),
                                  chr(28))
                             else null end as expressions
                  from pg_catalog.pg_index ),
    ind_stor as ( select cls.relnamespace as schema_id,
                         cls.oid as index_id,
                         cls.xmin as state_number,
                         cls.relname as index_name,
                         /* pg_catalog.pg_indexam_has_property(cls.relam, 'can_order') */am.amcanorder  as can_order
                  from pg_catalog.pg_class cls
                    /* */join pg_catalog.pg_am am on (cls.relam = am.oid)
                  where cls.relkind = 'i'
                    /* and pg_catalog.age(cls.xmin) <= pg_catalog.age(:tx::varchar::xid) */)
select table_id, table_kind,
       index_name, index_id, state_number,
       is_unique, is_primary,
       column_positions, column_operators, column_options,
       condition, expressions, can_order
from tab natural join ind_head natural join ind_stor
-- ] --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912579] results received
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912579] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912580] 
with T as ( select oid as table_id,
                   relkind as table_kind,
                   xmin as table_state_id
            from pg_catalog.pg_class
            where relkind in ('r','v','f','p')
              and relnamespace = ?::oid ),
     C as ( select conrelid as table_id,
                   oid::bigint as con_id,
                   xmin as con_state_id,
                   conname as con_name,
                   contype as con_kind,
                   conkey as con_columns,
                   conindid as index_id,
                   confrelid as ref_table_id,
                   confkey as ref_columns,
                   condeferrable as is_deferrable,
                   condeferred as is_init_deferred,
                   confupdtype as on_update,
                   confdeltype as on_delete,
                   /* conbin */consrc 
            from pg_catalog.pg_constraint
            where contype in ('p','u','f','c')
              and connamespace = ?::oid )
select table_id,
       table_kind,
       con_id,
       con_state_id::varchar::bigint as con_state_id,
       con_name,
       con_kind,
       con_columns,
       index_id,
       ref_table_id,
       is_deferrable,
       is_init_deferred,
       on_update,
       on_delete,
       /* pg_catalog.pg_get_expr(conbin, table_id) */consrc  as con_expression,
       ref_columns
from T natural join C
--  where pg_catalog.age(table_state_id) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(con_state_id) <= pg_catalog.age(:tx::varchar::xid)
order by pg_catalog.strpos('pufc', con_kind)
-- ] --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912580] results received
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912580] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912581] 
select R.ev_class as table_id,
       R.oid as rule_id,
       R.xmin as rule_state_number,
       R.rulename as rule_name,
       pg_catalog.translate(ev_type,'1234','SUID') as rule_event_code,
       R.ev_enabled as rule_fire_mode,
       R.is_instead as rule_is_instead
from pg_catalog.pg_rewrite R
where R.ev_class in (select oid
                     from pg_catalog.pg_class
                     where relnamespace = ?::oid)
  --  and pg_catalog.age(R.xmin) <= pg_catalog.age(:tx::varchar::xid)
  and R.rulename != '_RETURN'::name
order by R.ev_class::bigint, ev_type
-- ] --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912581] results received
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912581] finished - execution time: 3 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912582] 
select T.tgrelid as table_id,
       T.oid as trigger_id,
       T.xmin as trigger_state_number,
       T.tgname as trigger_name,
       T.tgfoid as function_id,
       T.tgtype & 31 as bits,
       T.tgdeferrable as is_deferrable,
       T.tginitdeferred as is_init_deferred,
       T.tgenabled as trigger_fire_mode
from pg_catalog.pg_trigger T
where T.tgrelid in (select oid
                    from pg_catalog.pg_class
                    where relnamespace = ?::oid)
  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
  and not T.tgisinternal
-- ] --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912582] results received
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912582] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912583] 
select D.objoid id, C.relkind as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select T.oid id, 'T' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, pg_catalog.translate(C.contype, 'pufc', 'kkxz') as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 't' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'R' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'F' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'O' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'C' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)

-- ] --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912583] results received
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912583] finished - execution time: 5 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912584] 
select distinct
       T.relkind as view_kind,
       T.oid as view_id,
       pg_catalog.pg_get_viewdef(T.oid) as source_text
from pg_catalog.pg_class T
  join pg_catalog.pg_namespace N on T.relnamespace = N.oid
  left outer join pg_catalog.pg_attribute A on (A.attrelid = T.oid)
where N.oid = ?::oid
  and T.relkind in ('m','v')
  --  and (pg_catalog.age(T.xmin) <= pg_catalog.age(:src_tx::varchar::xid) or pg_catalog.age(A.xmin) <= pg_catalog.age(:src_tx::varchar::xid))
-- ] --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912584] results received
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912584] finished - execution time: 2 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912585] 
with A as ( select oid as table_id, pg_catalog.upper(relkind) as table_kind
            from pg_catalog.pg_class
            where relnamespace = ?::oid
              and relkind in ('r', 'm', 'v', 'f', 'p') )
select table_kind,
       table_id,
       R.oid as rule_id,
       pg_catalog.pg_get_ruledef(R.oid) as source_text
from A join pg_catalog.pg_rewrite R
        on A.table_id = R.ev_class
where R.rulename != '_RETURN'::name
  --  and pg_catalog.age(R.xmin) <= pg_catalog.age(:src_tx::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912585] results received
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912585] finished - execution time: 3 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912586] 
with system_languages as ( select oid as lang
                           from pg_catalog.pg_language
                           where lanname in ('c','internal') )
select oid as id,
       pg_catalog.pg_get_function_arguments(oid) as arguments_def,
       pg_catalog.pg_get_function_result(oid) as result_def,
       prosrc as source_text
from pg_catalog.pg_proc
where pronamespace = ?::oid
  --  and pg_catalog.age(xmin) <= pg_catalog.age(:src_tx::varchar::xid)
  and not /* (prokind = 'a') */proisagg 
  and prolang not in (select lang from system_languages)
  and prosrc is not null
-- ] --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912586] results received
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912586] finished - execution time: 3 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912587] 
select distinct connamespace as schema_id
from pg_catalog.pg_constraint F,
     pg_catalog.pg_class O
where F.contype = 'f'
  and F.confrelid = O.oid
  and O.relnamespace in (?,?,?)
-- ] --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912587] results received
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912587] finished - execution time: 3 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912588] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912588] results received
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1247375701] [statement id: 1073912588] finished - execution time: 1 ms, fetching time: 2 ms, total result sets count: 1
-- 2020-06-01 14:45:48 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 1247375701] disconnected
-- 2020-06-01 21:52:59 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 815353025] connected
-- [ --------------------------------------------------
-- 2020-06-01 21:52:59 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313156] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-06-01 21:52:59 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313156] results received
-- 2020-06-01 21:52:59 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313156] finished - execution time: 57 ms, fetching time: 24 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:52:59 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313157] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 21:52:59 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313157] results received
-- 2020-06-01 21:52:59 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313157] finished - execution time: 21 ms, fetching time: 8 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:52:59 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313158] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 21:52:59 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313158] results received
-- 2020-06-01 21:52:59 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313158] finished - execution time: 7 ms, fetching time: 49 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313159] 
select R.oid::bigint as role_id, rolname as role_name,
  rolsuper is_super, rolinherit is_inherit,
  rolcreaterole can_createrole, rolcreatedb can_createdb,
  rolcanlogin can_login, rolreplication /* false */ is_replication,
  rolconnlimit conn_limit, rolvaliduntil valid_until,
  /* rolbypassrls */false  bypass_rls, rolconfig config,
  D.description
from pg_catalog.pg_roles R
  left join pg_catalog.pg_shdescription D on D.objoid = R.oid
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313159] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313159] finished - execution time: 9 ms, fetching time: 8 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313160] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313160] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313160] finished - execution time: 4 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313161] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313161] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313161] finished - execution time: 4 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313162] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313162] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313162] finished - execution time: 5 ms, fetching time: 7 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313163] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313163] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313163] finished - execution time: 4 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313164] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313164] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313164] finished - execution time: 4 ms, fetching time: 6 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313165] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313165] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313165] finished - execution time: 5 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313166] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313166] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313166] finished - execution time: 4 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313167] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313167] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313167] finished - execution time: 14 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313168] 
select usesuper
from pg_user
where usename = current_user
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313168] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313168] finished - execution time: 10 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313169] 
select distinct oid
from pg_catalog.pg_am
union
select distinct oid
from pg_catalog.pg_foreign_data_wrapper
union
select distinct oid
from pg_catalog.pg_foreign_server
union
select distinct oid
from pg_catalog.pg_extension

union
select distinct oid
from pg_catalog.pg_user_mapping

-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313169] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313169] finished - execution time: 97 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313170] 
select D.objoid id
from pg_catalog.pg_description D
where D.classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313170] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313170] finished - execution time: 19 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313171] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313171] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313171] finished - execution time: 5 ms, fetching time: 6 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313172] 
select A.oid as access_method_id,
       A.xmin as state_number,
       A.amname as access_method_name
       /* ,
       A.amhandler::oid as handler_id,
       pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as handler_name,
       A.amtype as access_method_type
       */
from pg_am A
  /* join pg_proc P on A.amhandler::oid = P.oid
  join pg_namespace N on P.pronamespace = N.oid
  */
where pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313172] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313172] finished - execution time: 2 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313173] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313173] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313173] finished - execution time: 2 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313174] 
select fdw.oid as id,
       fdw.xmin as state_number,
       fdw.fdwname as name,
       pr.proname as handler,
       nspc.nspname as handler_schema,
       pr2.proname as validator,
       nspc2.nspname as validator_schema,
       fdw.fdwoptions as options,
       pg_catalog.pg_get_userbyid(fdw.fdwowner) as "owner"
from pg_catalog.pg_foreign_data_wrapper fdw
     left outer join pg_catalog.pg_proc pr on fdw.fdwhandler = pr.oid
     left outer join pg_catalog.pg_namespace nspc on pr.pronamespace = nspc.oid
     left outer join pg_catalog.pg_proc pr2 on fdw.fdwvalidator = pr2.oid
     left outer join pg_catalog.pg_namespace nspc2 on pr2.pronamespace = nspc2.oid
  where pg_catalog.age(fdw.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313174] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313174] finished - execution time: 4 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313175] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313175] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313175] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313176] 
select srv.oid as id,
       srv.srvfdw as fdw_id,
       srv.xmin as state_number,
       srv.srvname as name,
       srv.srvtype as type,
       srv.srvversion as version,
       srv.srvoptions as options,
       pg_catalog.pg_get_userbyid(srv.srvowner) as "owner"
from pg_catalog.pg_foreign_server srv
  where pg_catalog.age(srv.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313176] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313176] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313177] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313177] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313177] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313178] 
select pg_extension.oid as id,
       pg_extension.xmin as state_number,
       extname as name,
       extversion as version,
       extnamespace as schema_id,
       nspname as schema_name,
       array(select target
             from pg_extension_update_paths(extname)
             where source = extversion and path is not null) as available_updates
from pg_catalog.pg_extension
  join pg_namespace on pg_extension.extnamespace = pg_namespace.oid
where pg_catalog.age(pg_extension.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313178] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313178] finished - execution time: 4 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313179] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313179] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313179] finished - execution time: 5 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313180] 
select D.objoid id, case
    when 'pg_catalog.pg_am'::regclass = classoid then 'A'
    when 'pg_catalog.pg_foreign_data_wrapper'::regclass = classoid then 'W'
    when 'pg_catalog.pg_foreign_server'::regclass = classoid then 'S'
    when 'pg_catalog.pg_extension'::regclass = classoid then 'E'
    
  end as kind,
  D.objsubid sub_id, D.description
from pg_catalog.pg_description D
where classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313180] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313180] finished - execution time: 6 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313181] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313181] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313181] finished - execution time: 5 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313182] 
select 'sequence' as dependent_kind,
       'table' as owner_kind,
       D.objid as dependent_id,
       D.refobjid as owner_id,
       D.refobjsubid as owner_subobject_id
from pg_depend D
  join pg_class C_SEQ on D.objid = C_SEQ.oid
  join pg_class C_TAB on D.refobjid = C_TAB.oid
where C_SEQ.relkind = 'S'
  and C_TAB.relkind = 'r'
  and D.refobjsubid <> 0
  and (D.deptype = 'a' or D.deptype = 'i')
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313182] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313182] finished - execution time: 11 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313183] 
with saved_age as (select greatest(pg_catalog.age(?::varchar::xid), pg_catalog.age(?::varchar::xid)) as "value")
select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
(
  select X.last_tx as last_tx
  from (
    (
    select xmin as last_tx
      from pg_catalog.pg_type
      where typnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_class
      where relnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_proc
      where pronamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_operator
      where oprnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select A.xmin as last_tx
      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
      where K.relnamespace = ?::oid
      order by pg_catalog.age(A.xmin)
      limit 1
    )
    union all
    (
    select E.xmin as last_tx
      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
      where T.typnamespace = ?::oid
      order by pg_catalog.age(E.xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_constraint
      where connamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select CO.xmin as last_tx
      from pg_catalog.pg_collation CO
      where CO.collnamespace = ?::oid
      order by pg_catalog.age(CO.xmin)
      limit 1
    )
    union all
    
    (
    select IX.xmin as last_tx
      from pg_catalog.pg_index IX,
           pg_catalog.pg_class IC
      where IC.oid = IX.indrelid
        and IC.relnamespace = ?::oid
        order by pg_catalog.age(IX.xmin)
        limit 1
    )
    union all
    (
    select RU.xmin as last_tx
      from pg_catalog.pg_rewrite RU,
           pg_catalog.pg_class RC
      where RC.oid = RU.ev_class
        and RC.relnamespace = ?::oid
        order by pg_catalog.age(RU.xmin)
        limit 1
    )
    union all
    (
    select TG.xmin as last_tx
      from pg_catalog.pg_trigger TG,
           pg_catalog.pg_class TC
      where TC.oid = TG.tgrelid
        and TC.relnamespace = ?::oid
        order by pg_catalog.age(TG.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_class C on C.oid = D.objoid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_constraint C on C.oid = D.objoid
      where C.connamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_trigger T on T.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = T.tgrelid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_rewrite R on R.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = R.ev_class
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_proc P on P.oid = D.objoid
      where P.pronamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_type T on T.oid = D.objoid
      where T.typnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_operator O on O.oid = D.objoid
      where O.oprnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_collation C on C.oid = D.objoid
      where C.collnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    
  ) X
  order by pg_catalog.age(X.last_tx)
  limit 1
) C, saved_age SA
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313183] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313183] finished - execution time: 91 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313184] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313184] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313184] finished - execution time: 3 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313185] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313185] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313185] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313186] 
select distinct oid
from pg_catalog.pg_type
where typnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_class
where relnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_proc
where pronamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_operator
where oprnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_constraint
where connamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_collation
where collnamespace = ?::oid
union

select distinct IX.indexrelid
from pg_catalog.pg_index IX,
     pg_catalog.pg_class IC
where IC.oid = IX.indrelid
  and IC.relnamespace = ?::oid
union
select distinct RU.oid
from pg_catalog.pg_rewrite RU,
     pg_catalog.pg_class RC
where RC.oid = RU.ev_class
  and RC.relnamespace = ?::oid
  and not RU.rulename = '_RETURN'
union
select distinct TG.oid
from pg_catalog.pg_trigger TG,
     pg_catalog.pg_class TC
where TC.oid = TG.tgrelid
  and TC.relnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313186] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313186] finished - execution time: 8 ms, fetching time: 10 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313187] 
select D.objoid id, pg_catalog.array_agg(D.objsubid) sub_ids
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
group by D.objoid
union all
select T.oid id, pg_catalog.array_agg(D.objsubid)
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
group by T.oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313187] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313187] finished - execution time: 15 ms, fetching time: 9 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313188] 
with saved_age as (select greatest(pg_catalog.age(?::varchar::xid), pg_catalog.age(?::varchar::xid)) as "value")
select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
(
  select X.last_tx as last_tx
  from (
    (
    select xmin as last_tx
      from pg_catalog.pg_type
      where typnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_class
      where relnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_proc
      where pronamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_operator
      where oprnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select A.xmin as last_tx
      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
      where K.relnamespace = ?::oid
      order by pg_catalog.age(A.xmin)
      limit 1
    )
    union all
    (
    select E.xmin as last_tx
      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
      where T.typnamespace = ?::oid
      order by pg_catalog.age(E.xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_constraint
      where connamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select CO.xmin as last_tx
      from pg_catalog.pg_collation CO
      where CO.collnamespace = ?::oid
      order by pg_catalog.age(CO.xmin)
      limit 1
    )
    union all
    
    (
    select IX.xmin as last_tx
      from pg_catalog.pg_index IX,
           pg_catalog.pg_class IC
      where IC.oid = IX.indrelid
        and IC.relnamespace = ?::oid
        order by pg_catalog.age(IX.xmin)
        limit 1
    )
    union all
    (
    select RU.xmin as last_tx
      from pg_catalog.pg_rewrite RU,
           pg_catalog.pg_class RC
      where RC.oid = RU.ev_class
        and RC.relnamespace = ?::oid
        order by pg_catalog.age(RU.xmin)
        limit 1
    )
    union all
    (
    select TG.xmin as last_tx
      from pg_catalog.pg_trigger TG,
           pg_catalog.pg_class TC
      where TC.oid = TG.tgrelid
        and TC.relnamespace = ?::oid
        order by pg_catalog.age(TG.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_class C on C.oid = D.objoid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_constraint C on C.oid = D.objoid
      where C.connamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_trigger T on T.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = T.tgrelid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_rewrite R on R.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = R.ev_class
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_proc P on P.oid = D.objoid
      where P.pronamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_type T on T.oid = D.objoid
      where T.typnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_operator O on O.oid = D.objoid
      where O.oprnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_collation C on C.oid = D.objoid
      where C.collnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    
  ) X
  order by pg_catalog.age(X.last_tx)
  limit 1
) C, saved_age SA
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313188] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313188] finished - execution time: 11 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313189] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313189] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313189] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313190] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313190] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313190] finished - execution time: 2 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313191] 
select distinct oid
from pg_catalog.pg_type
where typnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_class
where relnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_proc
where pronamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_operator
where oprnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_constraint
where connamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_collation
where collnamespace = ?::oid
union

select distinct IX.indexrelid
from pg_catalog.pg_index IX,
     pg_catalog.pg_class IC
where IC.oid = IX.indrelid
  and IC.relnamespace = ?::oid
union
select distinct RU.oid
from pg_catalog.pg_rewrite RU,
     pg_catalog.pg_class RC
where RC.oid = RU.ev_class
  and RC.relnamespace = ?::oid
  and not RU.rulename = '_RETURN'
union
select distinct TG.oid
from pg_catalog.pg_trigger TG,
     pg_catalog.pg_class TC
where TC.oid = TG.tgrelid
  and TC.relnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313191] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313191] finished - execution time: 4 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313192] 
select D.objoid id, pg_catalog.array_agg(D.objsubid) sub_ids
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
group by D.objoid
union all
select T.oid id, pg_catalog.array_agg(D.objsubid)
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
group by T.oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313192] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313192] finished - execution time: 7 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313193] 
with saved_age as (select greatest(pg_catalog.age(?::varchar::xid), pg_catalog.age(?::varchar::xid)) as "value")
select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
(
  select X.last_tx as last_tx
  from (
    (
    select xmin as last_tx
      from pg_catalog.pg_type
      where typnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_class
      where relnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_proc
      where pronamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_operator
      where oprnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select A.xmin as last_tx
      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
      where K.relnamespace = ?::oid
      order by pg_catalog.age(A.xmin)
      limit 1
    )
    union all
    (
    select E.xmin as last_tx
      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
      where T.typnamespace = ?::oid
      order by pg_catalog.age(E.xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_constraint
      where connamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select CO.xmin as last_tx
      from pg_catalog.pg_collation CO
      where CO.collnamespace = ?::oid
      order by pg_catalog.age(CO.xmin)
      limit 1
    )
    union all
    
    (
    select IX.xmin as last_tx
      from pg_catalog.pg_index IX,
           pg_catalog.pg_class IC
      where IC.oid = IX.indrelid
        and IC.relnamespace = ?::oid
        order by pg_catalog.age(IX.xmin)
        limit 1
    )
    union all
    (
    select RU.xmin as last_tx
      from pg_catalog.pg_rewrite RU,
           pg_catalog.pg_class RC
      where RC.oid = RU.ev_class
        and RC.relnamespace = ?::oid
        order by pg_catalog.age(RU.xmin)
        limit 1
    )
    union all
    (
    select TG.xmin as last_tx
      from pg_catalog.pg_trigger TG,
           pg_catalog.pg_class TC
      where TC.oid = TG.tgrelid
        and TC.relnamespace = ?::oid
        order by pg_catalog.age(TG.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_class C on C.oid = D.objoid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_constraint C on C.oid = D.objoid
      where C.connamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_trigger T on T.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = T.tgrelid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_rewrite R on R.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = R.ev_class
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_proc P on P.oid = D.objoid
      where P.pronamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_type T on T.oid = D.objoid
      where T.typnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_operator O on O.oid = D.objoid
      where O.oprnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_collation C on C.oid = D.objoid
      where C.collnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    
  ) X
  order by pg_catalog.age(X.last_tx)
  limit 1
) C, saved_age SA
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313193] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313193] finished - execution time: 9 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313194] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313194] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313194] finished - execution time: 1 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313195] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313195] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313195] finished - execution time: 2 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313196] 
select distinct oid
from pg_catalog.pg_type
where typnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_class
where relnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_proc
where pronamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_operator
where oprnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_constraint
where connamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_collation
where collnamespace = ?::oid
union

select distinct IX.indexrelid
from pg_catalog.pg_index IX,
     pg_catalog.pg_class IC
where IC.oid = IX.indrelid
  and IC.relnamespace = ?::oid
union
select distinct RU.oid
from pg_catalog.pg_rewrite RU,
     pg_catalog.pg_class RC
where RC.oid = RU.ev_class
  and RC.relnamespace = ?::oid
  and not RU.rulename = '_RETURN'
union
select distinct TG.oid
from pg_catalog.pg_trigger TG,
     pg_catalog.pg_class TC
where TC.oid = TG.tgrelid
  and TC.relnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313196] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313196] finished - execution time: 4 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313197] 
select D.objoid id, pg_catalog.array_agg(D.objsubid) sub_ids
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
group by D.objoid
union all
select T.oid id, pg_catalog.array_agg(D.objsubid)
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
group by T.oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313197] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313197] finished - execution time: 6 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313198] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313198] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313198] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313199] 
with U as (select usesysid from pg_catalog.pg_user where usename = current_user),
          T as (
                select oid as sequence_id,
                       relname as sequence_name,
                       pg_catalog.pg_get_userbyid(relowner) as "owner",
                       case when relowner = (select usesysid from U) then trim(both '()' from pg_catalog.pg_sequence_parameters(oid)::varchar)
                       else null::varchar
                       end as sequence_params,
                       
                       xmin as sequence_state_number
                       from pg_catalog.pg_class
                         where relnamespace = ?::oid
                         and relkind = 'S'
                         and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)
                )
select sequence_id,
       sequence_name,
       pg_catalog.split_part(sequence_params, ',', 1)::bigint as next_value,
       pg_catalog.split_part(sequence_params, ',', 2)::bigint as min_value,
       pg_catalog.split_part(sequence_params, ',', 3)::bigint as max_value,
       pg_catalog.split_part(sequence_params, ',', 4)::bigint as inc_value,
       pg_catalog.lower(pg_catalog.split_part(sequence_params, ',', 5)) LIKE '%t%' as cycle_option,
       
       sequence_state_number,
       "owner"
from T
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313199] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313199] finished - execution time: 6 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313200] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313200] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313200] finished - execution time: 8 ms, fetching time: 6 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313201] 
select T.oid as type_id,
       T.xmin as type_state_number,
       T.typname as type_name,
       T.typtype as type_sub_kind,
       T.typcategory as type_category,
       T.typrelid as class_id,
       T.typbasetype as base_type_id,
       case when T.typtype in ('c','e') then null
            else pg_catalog.format_type(T.typbasetype, T.typtypmod) end as type_def,
       T.typdefault as default_expression,
       T.typnotnull as mandatory,
       pg_catalog.pg_get_userbyid(T.typowner) as "owner"
from pg_catalog.pg_type T
         left outer join pg_catalog.pg_class C
             on T.typrelid = C.oid
where T.typnamespace = ?::oid
  and pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid)
  and (T.typtype in ('d','e') or C.relkind = 'c'::"char" or T.typtype = 'b' and (T.typelem = 0 OR T.typcategory <> 'A'))
order by 1
-- ] --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313201] results received
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313201] finished - execution time: 6 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:00 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313202] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313202] results received
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313202] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313203] 
select T.relkind as table_kind,
       T.relname as table_name,
       T.oid as table_id,
       T.xmin as table_state_number,
       /* false */T.relhasoids  as table_with_oids,
       T.relnamespace as tablespace_id,
       T.reloptions as options,
       (select pg_catalog.array_agg(inhparent)::varchar from (select inhparent::bigint from pg_catalog.pg_inherits where T.oid = inhrelid order by inhseqno) as bts) as ancestors,
       (select pg_catalog.array_agg(inhrelid)::varchar from (select inhrelid::bigint from pg_catalog.pg_inherits where T.oid = inhparent order by inhrelid) as its) as successors,
       /* T.relispartition */false  as is_partition,
       /* pg_catalog.pg_get_partkeydef(T.oid) */null  as partition_key,
       /* pg_catalog.pg_get_expr(T.relpartbound, T.oid) */null  as partition_expression,
       pg_catalog.pg_get_userbyid(T.relowner) as "owner"
from pg_catalog.pg_class T
where relnamespace = ?::oid
  and relkind in ('r', 'm', 'v', 'f', 'p')
  and pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid)
order by table_kind, table_id
-- ] --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313203] results received
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313203] finished - execution time: 4 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313204] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313204] results received
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313204] finished - execution time: 9 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313205] 
select ft.ftrelid as table_id,
       srv.srvname as table_server,
       ft.ftoptions as table_options,
       pg_catalog.pg_get_userbyid(cls.relowner) as "owner"
from pg_catalog.pg_foreign_table ft
     left outer join pg_catalog.pg_foreign_server srv on ft.ftserver = srv.oid
     join pg_catalog.pg_class cls on ft.ftrelid = cls.oid
where cls.relnamespace = ?::oid
  and pg_catalog.age(ft.xmin) <= pg_catalog.age(?::varchar::xid)
order by table_id
-- ] --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313205] results received
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313205] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313206] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313206] results received
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313206] finished - execution time: 1 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313207] 
with schema_procs as (select prorettype, proargtypes, proallargtypes
                      from pg_catalog.pg_proc
                      where pronamespace = ?::oid
                        and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)  ),
     schema_opers as (select oprleft, oprright, oprresult
                      from pg_catalog.pg_operator
                      where oprnamespace = ?::oid
                        and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)  ),
     schema_aggregates as (select A.aggtranstype , A.aggmtranstype 
                           from pg_catalog.pg_aggregate A
                           join pg_catalog.pg_proc P
                             on A.aggfnoid = P.oid
                           where P.pronamespace = ?::oid
                           and (pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(?::varchar::xid)) ),
     schema_arg_types as ( select prorettype as type_id
                           from schema_procs
                           union
                           select distinct unnest(proargtypes) as type_id
                           from schema_procs
                           union
                           select distinct unnest(proallargtypes) as type_id
                           from schema_procs
                           union
                           select oprleft as type_id
                           from schema_opers
                           where oprleft is not null
                           union
                           select oprright as type_id
                           from schema_opers
                           where oprright is not null
                           union
                           select oprresult as type_id
                           from schema_opers
                           where oprresult is not null
                           union
                           select aggtranstype::oid as type_id
                           from schema_aggregates
                           union
                           select aggmtranstype::oid as type_id
                           from schema_aggregates
                           
                           )
select type_id, pg_catalog.format_type(type_id, null) as type_spec
from schema_arg_types
where type_id <> 0
-- ] --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313207] results received
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313207] finished - execution time: 34 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313208] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313208] results received
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313208] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313209] 
with languages as (select oid as lang_oid, lanname as lang
                   from pg_catalog.pg_language),
     routines as (select proname as r_name,
                         prolang as lang_oid,
                         oid as r_id,
                         xmin as r_state_number,
                         proargnames as arg_names,
                         proargmodes as arg_modes,
                         proargtypes::int[] as in_arg_types,
                         proallargtypes::int[] as all_arg_types,
                         pg_catalog.pg_get_expr(proargdefaults, 0) as arg_defaults,
                         provariadic as arg_variadic_id,
                         prorettype as ret_type_id,
                         proretset as ret_set,
                         /* prokind */case when proiswindow then 'w'
                                                when proisagg then 'a'
                                                else 'f'
                                           end  as kind,
                         provolatile as volatile_kind,
                         proisstrict as is_strict,
                         prosecdef as is_security_definer,
                         proconfig as configuration_parameters,
                         procost as cost,
                         pg_catalog.pg_get_userbyid(proowner) as "owner",
                         prorows as rows ,
                         proleakproof as is_leakproof  /* ,
                         proparallel as concurrency_kind */
                  from pg_catalog.pg_proc
                  where pronamespace = ?::oid
                    and not /* (prokind = 'a') */proisagg 
                    and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid) )
select *
from routines natural join languages
-- ] --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313209] results received
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313209] finished - execution time: 5 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313210] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313210] results received
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313210] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313211] 
with procedures as (
  select P.oid as function_id,
         pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as function_name,
         P.prorettype as return_type
  from pg_catalog.pg_proc P
  join pg_catalog.pg_namespace N
    on P.pronamespace = N.oid
),
operators as (
  select O.oid as operator_id,
         pg_catalog.quote_ident(N.nspname) || '.' || O.oprname as operator_name
  from pg_catalog.pg_operator O
  join pg_catalog.pg_namespace N
    on O.oprnamespace = N.oid
)
select P.oid as aggregate_id,
       P.xmin as state_number,
       P.proname as aggregate_name,
       P.proargnames as arg_names,
       P.proargmodes as arg_modes,
       P.proargtypes::int[] as in_arg_types,
       P.proallargtypes::int[] as all_arg_types,
       A.aggtransfn::oid as transition_function_id,
       PT.function_name::text as transition_function_name,
       A.aggtranstype as transition_type,
       A.aggfinalfn::oid as final_function_id,
       case when A.aggfinalfn::oid = 0 then null else PF.function_name end as final_function_name,
       case when A.aggfinalfn::oid = 0 then 0 else PF.return_type end as final_return_type,
       A.agginitval as initial_value,
       A.aggsortop as sort_operator_id,
       case when A.aggsortop = 0 then null else O.operator_name end as sort_operator_name,
       pg_catalog.pg_get_userbyid(P.proowner) as "owner"
       ,
       A.aggfinalextra as final_extra,
       A.aggtransspace as state_size,
       A.aggmtransfn::oid as moving_transition_id,
       case when A.aggmtransfn::oid = 0 then null else FTP.function_name end as moving_transition_name,
       A.aggminvtransfn::oid as inverse_transition_id,
       case when A.aggminvtransfn::oid = 0 then null else ITP.function_name end as inverse_transition_name,
       A.aggmtranstype::oid as moving_state_type,
       A.aggmtransspace as moving_state_size,
       A.aggmfinalfn::oid as moving_final_id,
       case when A.aggmfinalfn::oid = 0 then null else FFP.function_name end as moving_final_name,
       A.aggmfinalextra as moving_final_extra,
       A.aggminitval as moving_initial_value,
       A.aggkind as aggregate_kind,
       A.aggnumdirectargs as direct_args
       
       /* ,
       A.aggcombinefn::oid as combine_function_id,
       case when A.aggcombinefn::oid = 0 then null else CP.function_name end as combine_function_name,
       A.aggserialfn::oid as serialization_function_id,
       case when A.aggserialfn::oid = 0 then null else SP.function_name end as serialization_function_name,
       A.aggdeserialfn::oid as deserialization_function_id,
       case when A.aggdeserialfn::oid = 0 then null else DP.function_name end as deserialization_function_name,
       P.proparallel as concurrency_kind
       */
from pg_catalog.pg_aggregate A
join pg_catalog.pg_proc P
  on A.aggfnoid = P.oid
join procedures PT
  on A.aggtransfn::oid = PT.function_id
left outer join procedures PF
  on A.aggfinalfn::oid = PF.function_id
left outer join operators O
  on A.aggsortop = O.operator_id
left outer join procedures FTP
  on A.aggmtransfn = FTP.function_id
left outer join procedures ITP
  on A.aggminvtransfn = ITP.function_id
left outer join procedures FFP
  on A.aggmfinalfn = FFP.function_id

/* left outer join procedures CP
  on A.aggcombinefn = CP.function_id
left outer join procedures SP
  on A.aggserialfn = SP.function_id
left outer join procedures DP
  on A.aggdeserialfn = DP.function_id
*/
where P.pronamespace = ?::oid
and (pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(?::varchar::xid))
order by P.oid
-- ] --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313211] results received
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313211] finished - execution time: 29 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313212] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313212] results received
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313212] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313213] 
select O.oid as op_id,
       O.xmin as state_number,
       oprname as op_name,
       oprkind as op_kind,
       oprleft as arg_left_type_id,
       oprright as arg_right_type_id,
       oprresult as arg_result_type_id,
       oprcode as func_main,
       pg_catalog.pg_get_userbyid(O.oprowner) as "owner"
from pg_catalog.pg_operator O
where oprnamespace = ?::oid
  and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313213] results received
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313213] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313214] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313214] results received
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313214] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313215] 
select oid as id,
       xmin as state_number,
       collname as name,
       collcollate as lc_collate,
       collctype as lc_ctype,
       pg_catalog.pg_get_userbyid(collowner) as "owner"
from pg_catalog.pg_collation
where collnamespace = ?::oid
  and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313215] results received
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313215] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313216] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313216] results received
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313216] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313217] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313217] results received
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313217] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313218] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313218] results received
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313218] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313219] 
with T as ( select distinct T.oid as table_id, T.relname as table_name
            from pg_catalog.pg_class T,
                 pg_catalog.pg_attribute A
            where T.relnamespace = ?::oid
              and T.relkind in ('r', 'm', 'v', 'f', 'p')
              and (pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid))
              and A.attrelid = T.oid )
select T.table_id,
       C.attnum as column_position,
       C.attname as column_name,
       C.xmin as column_state_number,
       C.atttypmod as type_mod,
       C.attndims as dimensions_number,
       pg_catalog.format_type(C.atttypid, C.atttypmod) as type_spec,
       C.atttypid as type_id,
       C.attnotnull as mandatory,
       /* pg_catalog.pg_get_expr(D.adbin, 'pg_catalog.pg_attrdef'::regclass::oid) */D.adsrc  as column_default_expression,
       not C.attislocal as column_is_inherited,
       C.attfdwoptions as options,
       C.attisdropped as column_is_dropped,
       /* C.attidentity */null  as identity_kind
from T
  inner join pg_catalog.pg_attribute C on T.table_id = C.attrelid
  left outer join pg_catalog.pg_attrdef D on (C.attrelid, C.attnum) = (D.adrelid, D.adnum)
where attnum > 0
order by table_id, attnum
-- ] --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313219] results received
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313219] finished - execution time: 22 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313220] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313220] results received
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313220] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313221] 
with tab as ( select relnamespace as schema_id,
                     oid as table_id,
                     relkind as table_kind
              from pg_catalog.pg_class
              where relnamespace = ?::oid
                and relkind in ('r','m','v','p')),
    ind_head as ( select indrelid as table_id,
                         indexrelid as index_id,
                         indisunique as is_unique,
                         indisprimary as is_primary,
                         indkey as column_positions,
                         indclass as column_operators,
                         indoption as column_options,
                         pg_catalog.pg_get_expr(indpred, indrelid) as condition,
                         case when indexprs is not null
                             then pg_catalog.array_to_string(array(
                                      select case when indkey[k] = 0
                                             then chr(27) || pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
                                             else pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
                                             end
                                      from pg_catalog.generate_subscripts(indkey, 1) as k
                                      order by k),
                                  chr(28))
                             else null end as expressions
                  from pg_catalog.pg_index ),
    ind_stor as ( select cls.relnamespace as schema_id,
                         cls.oid as index_id,
                         cls.xmin as state_number,
                         cls.relname as index_name,
                         /* pg_catalog.pg_indexam_has_property(cls.relam, 'can_order') */am.amcanorder  as can_order
                  from pg_catalog.pg_class cls
                    /* */join pg_catalog.pg_am am on (cls.relam = am.oid)
                  where cls.relkind = 'i'
                    and pg_catalog.age(cls.xmin) <= pg_catalog.age(?::varchar::xid) )
select table_id, table_kind,
       index_name, index_id, state_number,
       is_unique, is_primary,
       column_positions, column_operators, column_options,
       condition, expressions, can_order
from tab natural join ind_head natural join ind_stor
-- ] --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313221] results received
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313221] finished - execution time: 5 ms, fetching time: 10 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313222] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313222] results received
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313222] finished - execution time: 4 ms, fetching time: 7 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313223] 
with T as ( select oid as table_id,
                   relkind as table_kind,
                   xmin as table_state_id
            from pg_catalog.pg_class
            where relkind in ('r','v','f','p')
              and relnamespace = ?::oid ),
     C as ( select conrelid as table_id,
                   oid::bigint as con_id,
                   xmin as con_state_id,
                   conname as con_name,
                   contype as con_kind,
                   conkey as con_columns,
                   conindid as index_id,
                   confrelid as ref_table_id,
                   confkey as ref_columns,
                   condeferrable as is_deferrable,
                   condeferred as is_init_deferred,
                   confupdtype as on_update,
                   confdeltype as on_delete,
                   /* conbin */consrc 
            from pg_catalog.pg_constraint
            where contype in ('p','u','f','c')
              and connamespace = ?::oid )
select table_id,
       table_kind,
       con_id,
       con_state_id::varchar::bigint as con_state_id,
       con_name,
       con_kind,
       con_columns,
       index_id,
       ref_table_id,
       is_deferrable,
       is_init_deferred,
       on_update,
       on_delete,
       /* pg_catalog.pg_get_expr(conbin, table_id) */consrc  as con_expression,
       ref_columns
from T natural join C
where pg_catalog.age(table_state_id) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(con_state_id) <= pg_catalog.age(?::varchar::xid)
order by pg_catalog.strpos('pufc', con_kind)
-- ] --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313223] results received
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313223] finished - execution time: 2 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313224] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313224] results received
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313224] finished - execution time: 1 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313225] 
select R.ev_class as table_id,
       R.oid as rule_id,
       R.xmin as rule_state_number,
       R.rulename as rule_name,
       pg_catalog.translate(ev_type,'1234','SUID') as rule_event_code,
       R.ev_enabled as rule_fire_mode,
       R.is_instead as rule_is_instead
from pg_catalog.pg_rewrite R
where R.ev_class in (select oid
                     from pg_catalog.pg_class
                     where relnamespace = ?::oid)
  and pg_catalog.age(R.xmin) <= pg_catalog.age(?::varchar::xid)
  and R.rulename != '_RETURN'::name
order by R.ev_class::bigint, ev_type
-- ] --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313225] results received
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313225] finished - execution time: 3 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313226] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313226] results received
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313226] finished - execution time: 2 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313227] 
select T.tgrelid as table_id,
       T.oid as trigger_id,
       T.xmin as trigger_state_number,
       T.tgname as trigger_name,
       T.tgfoid as function_id,
       T.tgtype & 31 as bits,
       T.tgdeferrable as is_deferrable,
       T.tginitdeferred as is_init_deferred,
       T.tgenabled as trigger_fire_mode
from pg_catalog.pg_trigger T
where T.tgrelid in (select oid
                    from pg_catalog.pg_class
                    where relnamespace = ?::oid)
  and pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid)
  and not T.tgisinternal
-- ] --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313227] results received
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313227] finished - execution time: 3 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313228] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313228] results received
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313228] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313229] 
select D.objoid id, C.relkind as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select T.oid id, 'T' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, pg_catalog.translate(C.contype, 'pufc', 'kkxz') as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, 't' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, 'R' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, 'F' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, 'O' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
union all
select D.objoid id, 'C' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)

-- ] --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313229] results received
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313229] finished - execution time: 7 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313230] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313230] results received
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313230] finished - execution time: 2 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313231] 
select distinct
       T.relkind as view_kind,
       T.oid as view_id,
       pg_catalog.pg_get_viewdef(T.oid) as source_text
from pg_catalog.pg_class T
  join pg_catalog.pg_namespace N on T.relnamespace = N.oid
  left outer join pg_catalog.pg_attribute A on (A.attrelid = T.oid)
where N.oid = ?::oid
  and T.relkind in ('m','v')
  and (pg_catalog.age(T.xmin) <= pg_catalog.age(?::varchar::xid) or pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid))
-- ] --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313231] results received
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313231] finished - execution time: 3 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313232] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313232] results received
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313232] finished - execution time: 1 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313233] 
with A as ( select oid as table_id, pg_catalog.upper(relkind) as table_kind
            from pg_catalog.pg_class
            where relnamespace = ?::oid
              and relkind in ('r', 'm', 'v', 'f', 'p') )
select table_kind,
       table_id,
       R.oid as rule_id,
       pg_catalog.pg_get_ruledef(R.oid) as source_text
from A join pg_catalog.pg_rewrite R
        on A.table_id = R.ev_class
where R.rulename != '_RETURN'::name
  and pg_catalog.age(R.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313233] results received
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313233] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313234] 
select pg_catalog.age(?::varchar::xid) as schema_age, pg_catalog.age(?::varchar::xid) as sources_age
-- ] --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313234] results received
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313234] finished - execution time: 2 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313235] 
with system_languages as ( select oid as lang
                           from pg_catalog.pg_language
                           where lanname in ('c','internal') )
select oid as id,
       pg_catalog.pg_get_function_arguments(oid) as arguments_def,
       pg_catalog.pg_get_function_result(oid) as result_def,
       prosrc as source_text
from pg_catalog.pg_proc
where pronamespace = ?::oid
  and pg_catalog.age(xmin) <= pg_catalog.age(?::varchar::xid)
  and not /* (prokind = 'a') */proisagg 
  and prolang not in (select lang from system_languages)
  and prosrc is not null
-- ] --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313235] results received
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313235] finished - execution time: 4 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313236] 
select distinct connamespace as schema_id
from pg_catalog.pg_constraint F,
     pg_catalog.pg_class O
where F.contype = 'f'
  and F.confrelid = O.oid
  and O.relnamespace in (?)
-- ] --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313236] results received
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313236] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313237] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313237] results received
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353025] [statement id: 1374313237] finished - execution time: 4 ms, fetching time: 4 ms, total result sets count: 1
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 815353025] disconnected
-- 2020-06-01 21:53:01 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 815353026] connected
-- [ --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313238] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313238] results received
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313238] finished - execution time: 68 ms, fetching time: 6 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313239] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313239] results received
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313239] finished - execution time: 76 ms, fetching time: 22 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313240] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313240] results received
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313240] finished - execution time: 5 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313241] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313241] results received
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313241] finished - execution time: 2 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313242] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313242] results received
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313242] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313243] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313243] results received
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313243] finished - execution time: 4 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313244] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313244] results received
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313244] finished - execution time: 29 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313245] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313245] results received
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313245] finished - execution time: 8 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313246] 
select usesuper
from pg_user
where usename = current_user
-- ] --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313246] results received
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313246] finished - execution time: 7 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313247] 
select distinct oid
from pg_catalog.pg_am
union
select distinct oid
from pg_catalog.pg_foreign_data_wrapper
union
select distinct oid
from pg_catalog.pg_foreign_server
union
select distinct oid
from pg_catalog.pg_extension

union
select distinct oid
from pg_catalog.pg_user_mapping

-- ] --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313247] results received
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313247] finished - execution time: 47 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313248] 
select D.objoid id
from pg_catalog.pg_description D
where D.classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
-- ] --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313248] results received
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313248] finished - execution time: 28 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313249] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313249] results received
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313249] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313250] 
select A.oid as access_method_id,
       A.xmin as state_number,
       A.amname as access_method_name
       /* ,
       A.amhandler::oid as handler_id,
       pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as handler_name,
       A.amtype as access_method_type
       */
from pg_am A
  /* join pg_proc P on A.amhandler::oid = P.oid
  join pg_namespace N on P.pronamespace = N.oid
  */
where pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313250] results received
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313250] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313251] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313251] results received
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313251] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313252] 
select fdw.oid as id,
       fdw.xmin as state_number,
       fdw.fdwname as name,
       pr.proname as handler,
       nspc.nspname as handler_schema,
       pr2.proname as validator,
       nspc2.nspname as validator_schema,
       fdw.fdwoptions as options,
       pg_catalog.pg_get_userbyid(fdw.fdwowner) as "owner"
from pg_catalog.pg_foreign_data_wrapper fdw
     left outer join pg_catalog.pg_proc pr on fdw.fdwhandler = pr.oid
     left outer join pg_catalog.pg_namespace nspc on pr.pronamespace = nspc.oid
     left outer join pg_catalog.pg_proc pr2 on fdw.fdwvalidator = pr2.oid
     left outer join pg_catalog.pg_namespace nspc2 on pr2.pronamespace = nspc2.oid
  where pg_catalog.age(fdw.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313252] results received
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313252] finished - execution time: 5 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313253] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313253] results received
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313253] finished - execution time: 1 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313254] 
select srv.oid as id,
       srv.srvfdw as fdw_id,
       srv.xmin as state_number,
       srv.srvname as name,
       srv.srvtype as type,
       srv.srvversion as version,
       srv.srvoptions as options,
       pg_catalog.pg_get_userbyid(srv.srvowner) as "owner"
from pg_catalog.pg_foreign_server srv
  where pg_catalog.age(srv.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313254] results received
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313254] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313255] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313255] results received
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313255] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313256] 
select pg_extension.oid as id,
       pg_extension.xmin as state_number,
       extname as name,
       extversion as version,
       extnamespace as schema_id,
       nspname as schema_name,
       array(select target
             from pg_extension_update_paths(extname)
             where source = extversion and path is not null) as available_updates
from pg_catalog.pg_extension
  join pg_namespace on pg_extension.extnamespace = pg_namespace.oid
where pg_catalog.age(pg_extension.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313256] results received
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313256] finished - execution time: 2 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313257] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313257] results received
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313257] finished - execution time: 1 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313258] 
select D.objoid id, case
    when 'pg_catalog.pg_am'::regclass = classoid then 'A'
    when 'pg_catalog.pg_foreign_data_wrapper'::regclass = classoid then 'W'
    when 'pg_catalog.pg_foreign_server'::regclass = classoid then 'S'
    when 'pg_catalog.pg_extension'::regclass = classoid then 'E'
    
  end as kind,
  D.objsubid sub_id, D.description
from pg_catalog.pg_description D
where classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313258] results received
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313258] finished - execution time: 3 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313259] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313259] results received
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313259] finished - execution time: 3 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313260] 
select 'sequence' as dependent_kind,
       'table' as owner_kind,
       D.objid as dependent_id,
       D.refobjid as owner_id,
       D.refobjsubid as owner_subobject_id
from pg_depend D
  join pg_class C_SEQ on D.objid = C_SEQ.oid
  join pg_class C_TAB on D.refobjid = C_TAB.oid
where C_SEQ.relkind = 'S'
  and C_TAB.relkind = 'r'
  and D.refobjsubid <> 0
  and (D.deptype = 'a' or D.deptype = 'i')
-- ] --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313260] results received
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313260] finished - execution time: 41 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313261] 
with saved_age as (select greatest(pg_catalog.age(?::varchar::xid), pg_catalog.age(?::varchar::xid)) as "value")
select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
(
  select X.last_tx as last_tx
  from (
    (
    select xmin as last_tx
      from pg_catalog.pg_type
      where typnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_class
      where relnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_proc
      where pronamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_operator
      where oprnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select A.xmin as last_tx
      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
      where K.relnamespace = ?::oid
      order by pg_catalog.age(A.xmin)
      limit 1
    )
    union all
    (
    select E.xmin as last_tx
      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
      where T.typnamespace = ?::oid
      order by pg_catalog.age(E.xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_constraint
      where connamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select CO.xmin as last_tx
      from pg_catalog.pg_collation CO
      where CO.collnamespace = ?::oid
      order by pg_catalog.age(CO.xmin)
      limit 1
    )
    union all
    
    (
    select IX.xmin as last_tx
      from pg_catalog.pg_index IX,
           pg_catalog.pg_class IC
      where IC.oid = IX.indrelid
        and IC.relnamespace = ?::oid
        order by pg_catalog.age(IX.xmin)
        limit 1
    )
    union all
    (
    select RU.xmin as last_tx
      from pg_catalog.pg_rewrite RU,
           pg_catalog.pg_class RC
      where RC.oid = RU.ev_class
        and RC.relnamespace = ?::oid
        order by pg_catalog.age(RU.xmin)
        limit 1
    )
    union all
    (
    select TG.xmin as last_tx
      from pg_catalog.pg_trigger TG,
           pg_catalog.pg_class TC
      where TC.oid = TG.tgrelid
        and TC.relnamespace = ?::oid
        order by pg_catalog.age(TG.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_class C on C.oid = D.objoid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_constraint C on C.oid = D.objoid
      where C.connamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_trigger T on T.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = T.tgrelid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_rewrite R on R.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = R.ev_class
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_proc P on P.oid = D.objoid
      where P.pronamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_type T on T.oid = D.objoid
      where T.typnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_operator O on O.oid = D.objoid
      where O.oprnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_collation C on C.oid = D.objoid
      where C.collnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    
  ) X
  order by pg_catalog.age(X.last_tx)
  limit 1
) C, saved_age SA
-- ] --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313261] results received
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313261] finished - execution time: 204 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313262] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313262] results received
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313262] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313263] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313263] results received
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313263] finished - execution time: 2 ms, fetching time: 4 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313264] 
select distinct oid
from pg_catalog.pg_type
where typnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_class
where relnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_proc
where pronamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_operator
where oprnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_constraint
where connamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_collation
where collnamespace = ?::oid
union

select distinct IX.indexrelid
from pg_catalog.pg_index IX,
     pg_catalog.pg_class IC
where IC.oid = IX.indrelid
  and IC.relnamespace = ?::oid
union
select distinct RU.oid
from pg_catalog.pg_rewrite RU,
     pg_catalog.pg_class RC
where RC.oid = RU.ev_class
  and RC.relnamespace = ?::oid
  and not RU.rulename = '_RETURN'
union
select distinct TG.oid
from pg_catalog.pg_trigger TG,
     pg_catalog.pg_class TC
where TC.oid = TG.tgrelid
  and TC.relnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313264] results received
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313264] finished - execution time: 4 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313265] 
select D.objoid id, pg_catalog.array_agg(D.objsubid) sub_ids
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
group by D.objoid
union all
select T.oid id, pg_catalog.array_agg(D.objsubid)
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
group by T.oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313265] results received
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313265] finished - execution time: 7 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313266] 
with saved_age as (select greatest(pg_catalog.age(?::varchar::xid), pg_catalog.age(?::varchar::xid)) as "value")
select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
(
  select X.last_tx as last_tx
  from (
    (
    select xmin as last_tx
      from pg_catalog.pg_type
      where typnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_class
      where relnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_proc
      where pronamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_operator
      where oprnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select A.xmin as last_tx
      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
      where K.relnamespace = ?::oid
      order by pg_catalog.age(A.xmin)
      limit 1
    )
    union all
    (
    select E.xmin as last_tx
      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
      where T.typnamespace = ?::oid
      order by pg_catalog.age(E.xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_constraint
      where connamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select CO.xmin as last_tx
      from pg_catalog.pg_collation CO
      where CO.collnamespace = ?::oid
      order by pg_catalog.age(CO.xmin)
      limit 1
    )
    union all
    
    (
    select IX.xmin as last_tx
      from pg_catalog.pg_index IX,
           pg_catalog.pg_class IC
      where IC.oid = IX.indrelid
        and IC.relnamespace = ?::oid
        order by pg_catalog.age(IX.xmin)
        limit 1
    )
    union all
    (
    select RU.xmin as last_tx
      from pg_catalog.pg_rewrite RU,
           pg_catalog.pg_class RC
      where RC.oid = RU.ev_class
        and RC.relnamespace = ?::oid
        order by pg_catalog.age(RU.xmin)
        limit 1
    )
    union all
    (
    select TG.xmin as last_tx
      from pg_catalog.pg_trigger TG,
           pg_catalog.pg_class TC
      where TC.oid = TG.tgrelid
        and TC.relnamespace = ?::oid
        order by pg_catalog.age(TG.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_class C on C.oid = D.objoid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_constraint C on C.oid = D.objoid
      where C.connamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_trigger T on T.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = T.tgrelid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_rewrite R on R.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = R.ev_class
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_proc P on P.oid = D.objoid
      where P.pronamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_type T on T.oid = D.objoid
      where T.typnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_operator O on O.oid = D.objoid
      where O.oprnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_collation C on C.oid = D.objoid
      where C.collnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    
  ) X
  order by pg_catalog.age(X.last_tx)
  limit 1
) C, saved_age SA
-- ] --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313266] results received
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313266] finished - execution time: 15 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313267] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313267] results received
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313267] finished - execution time: 2 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313268] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313268] results received
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313268] finished - execution time: 1 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313269] 
select distinct oid
from pg_catalog.pg_type
where typnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_class
where relnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_proc
where pronamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_operator
where oprnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_constraint
where connamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_collation
where collnamespace = ?::oid
union

select distinct IX.indexrelid
from pg_catalog.pg_index IX,
     pg_catalog.pg_class IC
where IC.oid = IX.indrelid
  and IC.relnamespace = ?::oid
union
select distinct RU.oid
from pg_catalog.pg_rewrite RU,
     pg_catalog.pg_class RC
where RC.oid = RU.ev_class
  and RC.relnamespace = ?::oid
  and not RU.rulename = '_RETURN'
union
select distinct TG.oid
from pg_catalog.pg_trigger TG,
     pg_catalog.pg_class TC
where TC.oid = TG.tgrelid
  and TC.relnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313269] results received
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313269] finished - execution time: 7 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313270] 
select D.objoid id, pg_catalog.array_agg(D.objsubid) sub_ids
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
group by D.objoid
union all
select T.oid id, pg_catalog.array_agg(D.objsubid)
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
group by T.oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313270] results received
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313270] finished - execution time: 70 ms, fetching time: 68 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:02 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313271] 
with saved_age as (select greatest(pg_catalog.age(?::varchar::xid), pg_catalog.age(?::varchar::xid)) as "value")
select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
(
  select X.last_tx as last_tx
  from (
    (
    select xmin as last_tx
      from pg_catalog.pg_type
      where typnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_class
      where relnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_proc
      where pronamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_operator
      where oprnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select A.xmin as last_tx
      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
      where K.relnamespace = ?::oid
      order by pg_catalog.age(A.xmin)
      limit 1
    )
    union all
    (
    select E.xmin as last_tx
      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
      where T.typnamespace = ?::oid
      order by pg_catalog.age(E.xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_constraint
      where connamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select CO.xmin as last_tx
      from pg_catalog.pg_collation CO
      where CO.collnamespace = ?::oid
      order by pg_catalog.age(CO.xmin)
      limit 1
    )
    union all
    
    (
    select IX.xmin as last_tx
      from pg_catalog.pg_index IX,
           pg_catalog.pg_class IC
      where IC.oid = IX.indrelid
        and IC.relnamespace = ?::oid
        order by pg_catalog.age(IX.xmin)
        limit 1
    )
    union all
    (
    select RU.xmin as last_tx
      from pg_catalog.pg_rewrite RU,
           pg_catalog.pg_class RC
      where RC.oid = RU.ev_class
        and RC.relnamespace = ?::oid
        order by pg_catalog.age(RU.xmin)
        limit 1
    )
    union all
    (
    select TG.xmin as last_tx
      from pg_catalog.pg_trigger TG,
           pg_catalog.pg_class TC
      where TC.oid = TG.tgrelid
        and TC.relnamespace = ?::oid
        order by pg_catalog.age(TG.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_class C on C.oid = D.objoid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_constraint C on C.oid = D.objoid
      where C.connamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_trigger T on T.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = T.tgrelid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_rewrite R on R.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = R.ev_class
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_proc P on P.oid = D.objoid
      where P.pronamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_type T on T.oid = D.objoid
      where T.typnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_operator O on O.oid = D.objoid
      where O.oprnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_collation C on C.oid = D.objoid
      where C.collnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    
  ) X
  order by pg_catalog.age(X.last_tx)
  limit 1
) C, saved_age SA
-- ] --------------------------------------------------
-- 2020-06-01 21:53:03 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313271] results received
-- 2020-06-01 21:53:03 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313271] finished - execution time: 26 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:03 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313272] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-01 21:53:03 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313272] results received
-- 2020-06-01 21:53:03 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313272] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:03 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313273] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-01 21:53:03 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313273] results received
-- 2020-06-01 21:53:03 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313273] finished - execution time: 3 ms, fetching time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:03 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313274] 
select distinct oid
from pg_catalog.pg_type
where typnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_class
where relnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_proc
where pronamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_operator
where oprnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_constraint
where connamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_collation
where collnamespace = ?::oid
union

select distinct IX.indexrelid
from pg_catalog.pg_index IX,
     pg_catalog.pg_class IC
where IC.oid = IX.indrelid
  and IC.relnamespace = ?::oid
union
select distinct RU.oid
from pg_catalog.pg_rewrite RU,
     pg_catalog.pg_class RC
where RC.oid = RU.ev_class
  and RC.relnamespace = ?::oid
  and not RU.rulename = '_RETURN'
union
select distinct TG.oid
from pg_catalog.pg_trigger TG,
     pg_catalog.pg_class TC
where TC.oid = TG.tgrelid
  and TC.relnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-01 21:53:03 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313274] results received
-- 2020-06-01 21:53:03 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313274] finished - execution time: 7 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:03 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313275] 
select D.objoid id, pg_catalog.array_agg(D.objsubid) sub_ids
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
group by D.objoid
union all
select T.oid id, pg_catalog.array_agg(D.objsubid)
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
group by T.oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-01 21:53:03 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313275] results received
-- 2020-06-01 21:53:03 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313275] finished - execution time: 9 ms, fetching time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:03 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313276] 
select distinct connamespace as schema_id
from pg_catalog.pg_constraint F,
     pg_catalog.pg_class O
where F.contype = 'f'
  and F.confrelid = O.oid
  and O.relnamespace in (?)
-- ] --------------------------------------------------
-- 2020-06-01 21:53:03 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313276] results received
-- 2020-06-01 21:53:03 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313276] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-01 21:53:03 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313277] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-06-01 21:53:03 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313277] results received
-- 2020-06-01 21:53:03 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 815353026] [statement id: 1374313277] finished - execution time: 5 ms, fetching time: 1 ms, total result sets count: 1
-- 2020-06-01 21:53:03 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 815353026] disconnected
-- 2020-06-06 20:37:15 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 1314010244] connected
-- [ --------------------------------------------------
-- 2020-06-06 20:37:15 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207675] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-06-06 20:37:16 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207675] results received
-- 2020-06-06 20:37:16 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207675] finished - execution time: 141 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:16 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207676] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:37:16 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207676] results received
-- 2020-06-06 20:37:16 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207676] finished - execution time: 562 ms, fetching time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:17 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207677] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:37:17 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207677] results received
-- 2020-06-06 20:37:17 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207677] finished - execution time: 188 ms, fetching time: 158 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:17 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207678] 
select R.oid::bigint as role_id, rolname as role_name,
  rolsuper is_super, rolinherit is_inherit,
  rolcreaterole can_createrole, rolcreatedb can_createdb,
  rolcanlogin can_login, rolreplication /* false */ is_replication,
  rolconnlimit conn_limit, rolvaliduntil valid_until,
  /* rolbypassrls */false  bypass_rls, rolconfig config,
  D.description
from pg_catalog.pg_roles R
  left join pg_catalog.pg_shdescription D on D.objoid = R.oid
-- ] --------------------------------------------------
-- 2020-06-06 20:37:17 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207678] results received
-- 2020-06-06 20:37:17 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207678] finished - execution time: 157 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:17 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207679] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:37:17 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207679] results received
-- 2020-06-06 20:37:17 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207679] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:17 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207680] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:37:17 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207680] results received
-- 2020-06-06 20:37:17 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207680] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:17 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207681] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:37:17 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207681] results received
-- 2020-06-06 20:37:17 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207681] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:17 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207682] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:37:17 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207682] results received
-- 2020-06-06 20:37:17 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207682] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:17 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207683] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:37:17 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207683] results received
-- 2020-06-06 20:37:17 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207683] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:17 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207684] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:37:17 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207684] results received
-- 2020-06-06 20:37:17 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207684] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:17 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207685] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-06 20:37:17 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207685] results received
-- 2020-06-06 20:37:17 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207685] finished - execution time: 15 ms, fetching time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:17 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207686] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-06 20:37:17 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207686] results received
-- 2020-06-06 20:37:17 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207686] finished - execution time: 78 ms, fetching time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:17 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207687] 
select usesuper
from pg_user
where usename = current_user
-- ] --------------------------------------------------
-- 2020-06-06 20:37:17 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207687] results received
-- 2020-06-06 20:37:17 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207687] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:17 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207688] 
select distinct oid
from pg_catalog.pg_am
union
select distinct oid
from pg_catalog.pg_foreign_data_wrapper
union
select distinct oid
from pg_catalog.pg_foreign_server
union
select distinct oid
from pg_catalog.pg_extension

union
select distinct oid
from pg_catalog.pg_user_mapping

-- ] --------------------------------------------------
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207688] results received
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207688] finished - execution time: 206 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207689] 
select D.objoid id
from pg_catalog.pg_description D
where D.classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207689] results received
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207689] finished - execution time: 16 ms, fetching time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207690] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207690] results received
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207690] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207691] 
select A.oid as access_method_id,
       A.xmin as state_number,
       A.amname as access_method_name
       /* ,
       A.amhandler::oid as handler_id,
       pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as handler_name,
       A.amtype as access_method_type
       */
from pg_am A
  /* join pg_proc P on A.amhandler::oid = P.oid
  join pg_namespace N on P.pronamespace = N.oid
  */
where pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207691] results received
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207691] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207692] 
select fdw.oid as id,
       fdw.xmin as state_number,
       fdw.fdwname as name,
       pr.proname as handler,
       nspc.nspname as handler_schema,
       pr2.proname as validator,
       nspc2.nspname as validator_schema,
       fdw.fdwoptions as options,
       pg_catalog.pg_get_userbyid(fdw.fdwowner) as "owner"
from pg_catalog.pg_foreign_data_wrapper fdw
     left outer join pg_catalog.pg_proc pr on fdw.fdwhandler = pr.oid
     left outer join pg_catalog.pg_namespace nspc on pr.pronamespace = nspc.oid
     left outer join pg_catalog.pg_proc pr2 on fdw.fdwvalidator = pr2.oid
     left outer join pg_catalog.pg_namespace nspc2 on pr2.pronamespace = nspc2.oid
  where pg_catalog.age(fdw.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207692] results received
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207692] finished - execution time: 15 ms, fetching time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207693] 
select srv.oid as id,
       srv.srvfdw as fdw_id,
       srv.xmin as state_number,
       srv.srvname as name,
       srv.srvtype as type,
       srv.srvversion as version,
       srv.srvoptions as options,
       pg_catalog.pg_get_userbyid(srv.srvowner) as "owner"
from pg_catalog.pg_foreign_server srv
  where pg_catalog.age(srv.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207693] results received
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207693] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207694] 
select pg_extension.oid as id,
       pg_extension.xmin as state_number,
       extname as name,
       extversion as version,
       extnamespace as schema_id,
       nspname as schema_name,
       array(select target
             from pg_extension_update_paths(extname)
             where source = extversion and path is not null) as available_updates
from pg_catalog.pg_extension
  join pg_namespace on pg_extension.extnamespace = pg_namespace.oid
where pg_catalog.age(pg_extension.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207694] results received
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207694] finished - execution time: 47 ms, fetching time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207695] 
select D.objoid id, case
    when 'pg_catalog.pg_am'::regclass = classoid then 'A'
    when 'pg_catalog.pg_foreign_data_wrapper'::regclass = classoid then 'W'
    when 'pg_catalog.pg_foreign_server'::regclass = classoid then 'S'
    when 'pg_catalog.pg_extension'::regclass = classoid then 'E'
    
  end as kind,
  D.objsubid sub_id, D.description
from pg_catalog.pg_description D
where classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207695] results received
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207695] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207696] 
select 'sequence' as dependent_kind,
       'table' as owner_kind,
       D.objid as dependent_id,
       D.refobjid as owner_id,
       D.refobjsubid as owner_subobject_id
from pg_depend D
  join pg_class C_SEQ on D.objid = C_SEQ.oid
  join pg_class C_TAB on D.refobjid = C_TAB.oid
where C_SEQ.relkind = 'S'
  and C_TAB.relkind = 'r'
  and D.refobjsubid <> 0
  and (D.deptype = 'a' or D.deptype = 'i')
-- ] --------------------------------------------------
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207696] results received
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207696] finished - execution time: 94 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207697] 
with saved_age as (select greatest(pg_catalog.age(?::varchar::xid), pg_catalog.age(?::varchar::xid)) as "value")
select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
(
  select X.last_tx as last_tx
  from (
    (
    select xmin as last_tx
      from pg_catalog.pg_type
      where typnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_class
      where relnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_proc
      where pronamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_operator
      where oprnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select A.xmin as last_tx
      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
      where K.relnamespace = ?::oid
      order by pg_catalog.age(A.xmin)
      limit 1
    )
    union all
    (
    select E.xmin as last_tx
      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
      where T.typnamespace = ?::oid
      order by pg_catalog.age(E.xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_constraint
      where connamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select CO.xmin as last_tx
      from pg_catalog.pg_collation CO
      where CO.collnamespace = ?::oid
      order by pg_catalog.age(CO.xmin)
      limit 1
    )
    union all
    
    (
    select IX.xmin as last_tx
      from pg_catalog.pg_index IX,
           pg_catalog.pg_class IC
      where IC.oid = IX.indrelid
        and IC.relnamespace = ?::oid
        order by pg_catalog.age(IX.xmin)
        limit 1
    )
    union all
    (
    select RU.xmin as last_tx
      from pg_catalog.pg_rewrite RU,
           pg_catalog.pg_class RC
      where RC.oid = RU.ev_class
        and RC.relnamespace = ?::oid
        order by pg_catalog.age(RU.xmin)
        limit 1
    )
    union all
    (
    select TG.xmin as last_tx
      from pg_catalog.pg_trigger TG,
           pg_catalog.pg_class TC
      where TC.oid = TG.tgrelid
        and TC.relnamespace = ?::oid
        order by pg_catalog.age(TG.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_class C on C.oid = D.objoid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_constraint C on C.oid = D.objoid
      where C.connamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_trigger T on T.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = T.tgrelid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_rewrite R on R.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = R.ev_class
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_proc P on P.oid = D.objoid
      where P.pronamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_type T on T.oid = D.objoid
      where T.typnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_operator O on O.oid = D.objoid
      where O.oprnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_collation C on C.oid = D.objoid
      where C.collnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    
  ) X
  order by pg_catalog.age(X.last_tx)
  limit 1
) C, saved_age SA
-- ] --------------------------------------------------
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207697] results received
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207697] finished - execution time: 328 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207698] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207698] results received
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207698] finished - execution time: 1 ms, fetching time: 14 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207699] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207699] results received
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207699] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207700] 
with saved_age as (select greatest(pg_catalog.age(?::varchar::xid), pg_catalog.age(?::varchar::xid)) as "value")
select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
(
  select X.last_tx as last_tx
  from (
    (
    select xmin as last_tx
      from pg_catalog.pg_type
      where typnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_class
      where relnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_proc
      where pronamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_operator
      where oprnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select A.xmin as last_tx
      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
      where K.relnamespace = ?::oid
      order by pg_catalog.age(A.xmin)
      limit 1
    )
    union all
    (
    select E.xmin as last_tx
      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
      where T.typnamespace = ?::oid
      order by pg_catalog.age(E.xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_constraint
      where connamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select CO.xmin as last_tx
      from pg_catalog.pg_collation CO
      where CO.collnamespace = ?::oid
      order by pg_catalog.age(CO.xmin)
      limit 1
    )
    union all
    
    (
    select IX.xmin as last_tx
      from pg_catalog.pg_index IX,
           pg_catalog.pg_class IC
      where IC.oid = IX.indrelid
        and IC.relnamespace = ?::oid
        order by pg_catalog.age(IX.xmin)
        limit 1
    )
    union all
    (
    select RU.xmin as last_tx
      from pg_catalog.pg_rewrite RU,
           pg_catalog.pg_class RC
      where RC.oid = RU.ev_class
        and RC.relnamespace = ?::oid
        order by pg_catalog.age(RU.xmin)
        limit 1
    )
    union all
    (
    select TG.xmin as last_tx
      from pg_catalog.pg_trigger TG,
           pg_catalog.pg_class TC
      where TC.oid = TG.tgrelid
        and TC.relnamespace = ?::oid
        order by pg_catalog.age(TG.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_class C on C.oid = D.objoid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_constraint C on C.oid = D.objoid
      where C.connamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_trigger T on T.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = T.tgrelid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_rewrite R on R.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = R.ev_class
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_proc P on P.oid = D.objoid
      where P.pronamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_type T on T.oid = D.objoid
      where T.typnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_operator O on O.oid = D.objoid
      where O.oprnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_collation C on C.oid = D.objoid
      where C.collnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    
  ) X
  order by pg_catalog.age(X.last_tx)
  limit 1
) C, saved_age SA
-- ] --------------------------------------------------
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207700] results received
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207700] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207701] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207701] results received
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207701] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207702] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207702] results received
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207702] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:18 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207703] 
with U as (select usesysid from pg_catalog.pg_user where usename = current_user),
          T as (
                select oid as sequence_id,
                       relname as sequence_name,
                       pg_catalog.pg_get_userbyid(relowner) as "owner",
                       case when relowner = (select usesysid from U) then trim(both '()' from pg_catalog.pg_sequence_parameters(oid)::varchar)
                       else null::varchar
                       end as sequence_params,
                       
                       xmin as sequence_state_number
                       from pg_catalog.pg_class
                         where relnamespace = ?::oid
                         and relkind = 'S'
                         --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
                )
select sequence_id,
       sequence_name,
       pg_catalog.split_part(sequence_params, ',', 1)::bigint as next_value,
       pg_catalog.split_part(sequence_params, ',', 2)::bigint as min_value,
       pg_catalog.split_part(sequence_params, ',', 3)::bigint as max_value,
       pg_catalog.split_part(sequence_params, ',', 4)::bigint as inc_value,
       pg_catalog.lower(pg_catalog.split_part(sequence_params, ',', 5)) LIKE '%t%' as cycle_option,
       
       sequence_state_number,
       "owner"
from T
-- ] --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207703] results received
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207703] finished - execution time: 156 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207704] 
select T.oid as type_id,
       T.xmin as type_state_number,
       T.typname as type_name,
       T.typtype as type_sub_kind,
       T.typcategory as type_category,
       T.typrelid as class_id,
       T.typbasetype as base_type_id,
       case when T.typtype in ('c','e') then null
            else pg_catalog.format_type(T.typbasetype, T.typtypmod) end as type_def,
       T.typdefault as default_expression,
       T.typnotnull as mandatory,
       pg_catalog.pg_get_userbyid(T.typowner) as "owner"
from pg_catalog.pg_type T
         left outer join pg_catalog.pg_class C
             on T.typrelid = C.oid
where T.typnamespace = ?::oid
  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
  and (T.typtype in ('d','e') or C.relkind = 'c'::"char" or T.typtype = 'b' and (T.typelem = 0 OR T.typcategory <> 'A'))
order by 1
-- ] --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207704] results received
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207704] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207705] 
select T.relkind as table_kind,
       T.relname as table_name,
       T.oid as table_id,
       T.xmin as table_state_number,
       /* false */T.relhasoids  as table_with_oids,
       T.relnamespace as tablespace_id,
       T.reloptions as options,
       (select pg_catalog.array_agg(inhparent)::varchar from (select inhparent::bigint from pg_catalog.pg_inherits where T.oid = inhrelid order by inhseqno) as bts) as ancestors,
       (select pg_catalog.array_agg(inhrelid)::varchar from (select inhrelid::bigint from pg_catalog.pg_inherits where T.oid = inhparent order by inhrelid) as its) as successors,
       /* T.relispartition */false  as is_partition,
       /* pg_catalog.pg_get_partkeydef(T.oid) */null  as partition_key,
       /* pg_catalog.pg_get_expr(T.relpartbound, T.oid) */null  as partition_expression,
       pg_catalog.pg_get_userbyid(T.relowner) as "owner"
from pg_catalog.pg_class T
where relnamespace = ?::oid
  and relkind in ('r', 'm', 'v', 'f', 'p')
  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
order by table_kind, table_id
-- ] --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207705] results received
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207705] finished - execution time: 78 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207706] 
select ft.ftrelid as table_id,
       srv.srvname as table_server,
       ft.ftoptions as table_options,
       pg_catalog.pg_get_userbyid(cls.relowner) as "owner"
from pg_catalog.pg_foreign_table ft
     left outer join pg_catalog.pg_foreign_server srv on ft.ftserver = srv.oid
     join pg_catalog.pg_class cls on ft.ftrelid = cls.oid
where cls.relnamespace = ?::oid
  --  and pg_catalog.age(ft.xmin) <= pg_catalog.age(:tx::varchar::xid)
order by table_id
-- ] --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207706] results received
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207706] finished - execution time: 16 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207707] 
with schema_procs as (select prorettype, proargtypes, proallargtypes
                      from pg_catalog.pg_proc
                      where pronamespace = ?::oid
                        /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */ ),
     schema_opers as (select oprleft, oprright, oprresult
                      from pg_catalog.pg_operator
                      where oprnamespace = ?::oid
                        /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */ ),
     schema_aggregates as (select A.aggtranstype , A.aggmtranstype 
                           from pg_catalog.pg_aggregate A
                           join pg_catalog.pg_proc P
                             on A.aggfnoid = P.oid
                           where P.pronamespace = ?::oid
                           /* and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(:tx::varchar::xid)) */),
     schema_arg_types as ( select prorettype as type_id
                           from schema_procs
                           union
                           select distinct unnest(proargtypes) as type_id
                           from schema_procs
                           union
                           select distinct unnest(proallargtypes) as type_id
                           from schema_procs
                           union
                           select oprleft as type_id
                           from schema_opers
                           where oprleft is not null
                           union
                           select oprright as type_id
                           from schema_opers
                           where oprright is not null
                           union
                           select oprresult as type_id
                           from schema_opers
                           where oprresult is not null
                           union
                           select aggtranstype::oid as type_id
                           from schema_aggregates
                           union
                           select aggmtranstype::oid as type_id
                           from schema_aggregates
                           
                           )
select type_id, pg_catalog.format_type(type_id, null) as type_spec
from schema_arg_types
where type_id <> 0
-- ] --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207707] results received
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207707] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207708] 
with languages as (select oid as lang_oid, lanname as lang
                   from pg_catalog.pg_language),
     routines as (select proname as r_name,
                         prolang as lang_oid,
                         oid as r_id,
                         xmin as r_state_number,
                         proargnames as arg_names,
                         proargmodes as arg_modes,
                         proargtypes::int[] as in_arg_types,
                         proallargtypes::int[] as all_arg_types,
                         pg_catalog.pg_get_expr(proargdefaults, 0) as arg_defaults,
                         provariadic as arg_variadic_id,
                         prorettype as ret_type_id,
                         proretset as ret_set,
                         /* prokind */case when proiswindow then 'w'
                                                when proisagg then 'a'
                                                else 'f'
                                           end  as kind,
                         provolatile as volatile_kind,
                         proisstrict as is_strict,
                         prosecdef as is_security_definer,
                         proconfig as configuration_parameters,
                         procost as cost,
                         pg_catalog.pg_get_userbyid(proowner) as "owner",
                         prorows as rows ,
                         proleakproof as is_leakproof  /* ,
                         proparallel as concurrency_kind */
                  from pg_catalog.pg_proc
                  where pronamespace = ?::oid
                    and not /* (prokind = 'a') */proisagg 
                    /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */)
select *
from routines natural join languages
-- ] --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207708] results received
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207708] finished - execution time: 62 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207709] 
with procedures as (
  select P.oid as function_id,
         pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as function_name,
         P.prorettype as return_type
  from pg_catalog.pg_proc P
  join pg_catalog.pg_namespace N
    on P.pronamespace = N.oid
),
operators as (
  select O.oid as operator_id,
         pg_catalog.quote_ident(N.nspname) || '.' || O.oprname as operator_name
  from pg_catalog.pg_operator O
  join pg_catalog.pg_namespace N
    on O.oprnamespace = N.oid
)
select P.oid as aggregate_id,
       P.xmin as state_number,
       P.proname as aggregate_name,
       P.proargnames as arg_names,
       P.proargmodes as arg_modes,
       P.proargtypes::int[] as in_arg_types,
       P.proallargtypes::int[] as all_arg_types,
       A.aggtransfn::oid as transition_function_id,
       PT.function_name::text as transition_function_name,
       A.aggtranstype as transition_type,
       A.aggfinalfn::oid as final_function_id,
       case when A.aggfinalfn::oid = 0 then null else PF.function_name end as final_function_name,
       case when A.aggfinalfn::oid = 0 then 0 else PF.return_type end as final_return_type,
       A.agginitval as initial_value,
       A.aggsortop as sort_operator_id,
       case when A.aggsortop = 0 then null else O.operator_name end as sort_operator_name,
       pg_catalog.pg_get_userbyid(P.proowner) as "owner"
       ,
       A.aggfinalextra as final_extra,
       A.aggtransspace as state_size,
       A.aggmtransfn::oid as moving_transition_id,
       case when A.aggmtransfn::oid = 0 then null else FTP.function_name end as moving_transition_name,
       A.aggminvtransfn::oid as inverse_transition_id,
       case when A.aggminvtransfn::oid = 0 then null else ITP.function_name end as inverse_transition_name,
       A.aggmtranstype::oid as moving_state_type,
       A.aggmtransspace as moving_state_size,
       A.aggmfinalfn::oid as moving_final_id,
       case when A.aggmfinalfn::oid = 0 then null else FFP.function_name end as moving_final_name,
       A.aggmfinalextra as moving_final_extra,
       A.aggminitval as moving_initial_value,
       A.aggkind as aggregate_kind,
       A.aggnumdirectargs as direct_args
       
       /* ,
       A.aggcombinefn::oid as combine_function_id,
       case when A.aggcombinefn::oid = 0 then null else CP.function_name end as combine_function_name,
       A.aggserialfn::oid as serialization_function_id,
       case when A.aggserialfn::oid = 0 then null else SP.function_name end as serialization_function_name,
       A.aggdeserialfn::oid as deserialization_function_id,
       case when A.aggdeserialfn::oid = 0 then null else DP.function_name end as deserialization_function_name,
       P.proparallel as concurrency_kind
       */
from pg_catalog.pg_aggregate A
join pg_catalog.pg_proc P
  on A.aggfnoid = P.oid
join procedures PT
  on A.aggtransfn::oid = PT.function_id
left outer join procedures PF
  on A.aggfinalfn::oid = PF.function_id
left outer join operators O
  on A.aggsortop = O.operator_id
left outer join procedures FTP
  on A.aggmtransfn = FTP.function_id
left outer join procedures ITP
  on A.aggminvtransfn = ITP.function_id
left outer join procedures FFP
  on A.aggmfinalfn = FFP.function_id

/* left outer join procedures CP
  on A.aggcombinefn = CP.function_id
left outer join procedures SP
  on A.aggserialfn = SP.function_id
left outer join procedures DP
  on A.aggdeserialfn = DP.function_id
*/
where P.pronamespace = ?::oid
--  and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(:tx::varchar::xid))
order by P.oid
-- ] --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207709] results received
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207709] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207710] 
select O.oid as op_id,
       O.xmin as state_number,
       oprname as op_name,
       oprkind as op_kind,
       oprleft as arg_left_type_id,
       oprright as arg_right_type_id,
       oprresult as arg_result_type_id,
       oprcode as func_main,
       pg_catalog.pg_get_userbyid(O.oprowner) as "owner"
from pg_catalog.pg_operator O
where oprnamespace = ?::oid
  --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207710] results received
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207710] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207711] 
select oid as id,
       xmin as state_number,
       collname as name,
       collcollate as lc_collate,
       collctype as lc_ctype,
       pg_catalog.pg_get_userbyid(collowner) as "owner"
from pg_catalog.pg_collation
where collnamespace = ?::oid
  --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207711] results received
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207711] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207712] 
with T as ( select distinct T.oid as table_id, T.relname as table_name
            from pg_catalog.pg_class T,
                 pg_catalog.pg_attribute A
            where T.relnamespace = ?::oid
              and T.relkind in ('r', 'm', 'v', 'f', 'p')
              --  and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid))
              and A.attrelid = T.oid )
select T.table_id,
       C.attnum as column_position,
       C.attname as column_name,
       C.xmin as column_state_number,
       C.atttypmod as type_mod,
       C.attndims as dimensions_number,
       pg_catalog.format_type(C.atttypid, C.atttypmod) as type_spec,
       C.atttypid as type_id,
       C.attnotnull as mandatory,
       /* pg_catalog.pg_get_expr(D.adbin, 'pg_catalog.pg_attrdef'::regclass::oid) */D.adsrc  as column_default_expression,
       not C.attislocal as column_is_inherited,
       C.attfdwoptions as options,
       C.attisdropped as column_is_dropped,
       /* C.attidentity */null  as identity_kind
from T
  inner join pg_catalog.pg_attribute C on T.table_id = C.attrelid
  left outer join pg_catalog.pg_attrdef D on (C.attrelid, C.attnum) = (D.adrelid, D.adnum)
where attnum > 0
order by table_id, attnum
-- ] --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207712] results received
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207712] finished - execution time: 31 ms, fetching time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207713] 
with tab as ( select relnamespace as schema_id,
                     oid as table_id,
                     relkind as table_kind
              from pg_catalog.pg_class
              where relnamespace = ?::oid
                and relkind in ('r','m','v','p')),
    ind_head as ( select indrelid as table_id,
                         indexrelid as index_id,
                         indisunique as is_unique,
                         indisprimary as is_primary,
                         indkey as column_positions,
                         indclass as column_operators,
                         indoption as column_options,
                         pg_catalog.pg_get_expr(indpred, indrelid) as condition,
                         case when indexprs is not null
                             then pg_catalog.array_to_string(array(
                                      select case when indkey[k] = 0
                                             then chr(27) || pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
                                             else pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
                                             end
                                      from pg_catalog.generate_subscripts(indkey, 1) as k
                                      order by k),
                                  chr(28))
                             else null end as expressions
                  from pg_catalog.pg_index ),
    ind_stor as ( select cls.relnamespace as schema_id,
                         cls.oid as index_id,
                         cls.xmin as state_number,
                         cls.relname as index_name,
                         /* pg_catalog.pg_indexam_has_property(cls.relam, 'can_order') */am.amcanorder  as can_order
                  from pg_catalog.pg_class cls
                    /* */join pg_catalog.pg_am am on (cls.relam = am.oid)
                  where cls.relkind = 'i'
                    /* and pg_catalog.age(cls.xmin) <= pg_catalog.age(:tx::varchar::xid) */)
select table_id, table_kind,
       index_name, index_id, state_number,
       is_unique, is_primary,
       column_positions, column_operators, column_options,
       condition, expressions, can_order
from tab natural join ind_head natural join ind_stor
-- ] --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207713] results received
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207713] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207714] 
with T as ( select oid as table_id,
                   relkind as table_kind,
                   xmin as table_state_id
            from pg_catalog.pg_class
            where relkind in ('r','v','f','p')
              and relnamespace = ?::oid ),
     C as ( select conrelid as table_id,
                   oid::bigint as con_id,
                   xmin as con_state_id,
                   conname as con_name,
                   contype as con_kind,
                   conkey as con_columns,
                   conindid as index_id,
                   confrelid as ref_table_id,
                   confkey as ref_columns,
                   condeferrable as is_deferrable,
                   condeferred as is_init_deferred,
                   confupdtype as on_update,
                   confdeltype as on_delete,
                   /* conbin */consrc 
            from pg_catalog.pg_constraint
            where contype in ('p','u','f','c')
              and connamespace = ?::oid )
select table_id,
       table_kind,
       con_id,
       con_state_id::varchar::bigint as con_state_id,
       con_name,
       con_kind,
       con_columns,
       index_id,
       ref_table_id,
       is_deferrable,
       is_init_deferred,
       on_update,
       on_delete,
       /* pg_catalog.pg_get_expr(conbin, table_id) */consrc  as con_expression,
       ref_columns
from T natural join C
--  where pg_catalog.age(table_state_id) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(con_state_id) <= pg_catalog.age(:tx::varchar::xid)
order by pg_catalog.strpos('pufc', con_kind)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207714] results received
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207714] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207715] 
select R.ev_class as table_id,
       R.oid as rule_id,
       R.xmin as rule_state_number,
       R.rulename as rule_name,
       pg_catalog.translate(ev_type,'1234','SUID') as rule_event_code,
       R.ev_enabled as rule_fire_mode,
       R.is_instead as rule_is_instead
from pg_catalog.pg_rewrite R
where R.ev_class in (select oid
                     from pg_catalog.pg_class
                     where relnamespace = ?::oid)
  --  and pg_catalog.age(R.xmin) <= pg_catalog.age(:tx::varchar::xid)
  and R.rulename != '_RETURN'::name
order by R.ev_class::bigint, ev_type
-- ] --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207715] results received
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207715] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207716] 
select T.tgrelid as table_id,
       T.oid as trigger_id,
       T.xmin as trigger_state_number,
       T.tgname as trigger_name,
       T.tgfoid as function_id,
       T.tgtype & 31 as bits,
       T.tgdeferrable as is_deferrable,
       T.tginitdeferred as is_init_deferred,
       T.tgenabled as trigger_fire_mode
from pg_catalog.pg_trigger T
where T.tgrelid in (select oid
                    from pg_catalog.pg_class
                    where relnamespace = ?::oid)
  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
  and not T.tgisinternal
-- ] --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207716] results received
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207716] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207717] 
select D.objoid id, C.relkind as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select T.oid id, 'T' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, pg_catalog.translate(C.contype, 'pufc', 'kkxz') as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 't' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'R' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'F' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'O' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'C' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)

-- ] --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207717] results received
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207717] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207718] 
select distinct
       T.relkind as view_kind,
       T.oid as view_id,
       pg_catalog.pg_get_viewdef(T.oid) as source_text
from pg_catalog.pg_class T
  join pg_catalog.pg_namespace N on T.relnamespace = N.oid
  left outer join pg_catalog.pg_attribute A on (A.attrelid = T.oid)
where N.oid = ?::oid
  and T.relkind in ('m','v')
  --  and (pg_catalog.age(T.xmin) <= pg_catalog.age(:src_tx::varchar::xid) or pg_catalog.age(A.xmin) <= pg_catalog.age(:src_tx::varchar::xid))
-- ] --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207718] results received
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207718] finished - execution time: 1 ms, fetching time: 14 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207719] 
with A as ( select oid as table_id, pg_catalog.upper(relkind) as table_kind
            from pg_catalog.pg_class
            where relnamespace = ?::oid
              and relkind in ('r', 'm', 'v', 'f', 'p') )
select table_kind,
       table_id,
       R.oid as rule_id,
       pg_catalog.pg_get_ruledef(R.oid) as source_text
from A join pg_catalog.pg_rewrite R
        on A.table_id = R.ev_class
where R.rulename != '_RETURN'::name
  --  and pg_catalog.age(R.xmin) <= pg_catalog.age(:src_tx::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207719] results received
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207719] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207720] 
with system_languages as ( select oid as lang
                           from pg_catalog.pg_language
                           where lanname in ('c','internal') )
select oid as id,
       pg_catalog.pg_get_function_arguments(oid) as arguments_def,
       pg_catalog.pg_get_function_result(oid) as result_def,
       prosrc as source_text
from pg_catalog.pg_proc
where pronamespace = ?::oid
  --  and pg_catalog.age(xmin) <= pg_catalog.age(:src_tx::varchar::xid)
  and not /* (prokind = 'a') */proisagg 
  and prolang not in (select lang from system_languages)
  and prosrc is not null
-- ] --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207720] results received
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207720] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207721] 
with U as (select usesysid from pg_catalog.pg_user where usename = current_user),
          T as (
                select oid as sequence_id,
                       relname as sequence_name,
                       pg_catalog.pg_get_userbyid(relowner) as "owner",
                       case when relowner = (select usesysid from U) then trim(both '()' from pg_catalog.pg_sequence_parameters(oid)::varchar)
                       else null::varchar
                       end as sequence_params,
                       
                       xmin as sequence_state_number
                       from pg_catalog.pg_class
                         where relnamespace = ?::oid
                         and relkind = 'S'
                         --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
                )
select sequence_id,
       sequence_name,
       pg_catalog.split_part(sequence_params, ',', 1)::bigint as next_value,
       pg_catalog.split_part(sequence_params, ',', 2)::bigint as min_value,
       pg_catalog.split_part(sequence_params, ',', 3)::bigint as max_value,
       pg_catalog.split_part(sequence_params, ',', 4)::bigint as inc_value,
       pg_catalog.lower(pg_catalog.split_part(sequence_params, ',', 5)) LIKE '%t%' as cycle_option,
       
       sequence_state_number,
       "owner"
from T
-- ] --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207721] results received
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207721] finished - execution time: 78 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207722] 
select T.oid as type_id,
       T.xmin as type_state_number,
       T.typname as type_name,
       T.typtype as type_sub_kind,
       T.typcategory as type_category,
       T.typrelid as class_id,
       T.typbasetype as base_type_id,
       case when T.typtype in ('c','e') then null
            else pg_catalog.format_type(T.typbasetype, T.typtypmod) end as type_def,
       T.typdefault as default_expression,
       T.typnotnull as mandatory,
       pg_catalog.pg_get_userbyid(T.typowner) as "owner"
from pg_catalog.pg_type T
         left outer join pg_catalog.pg_class C
             on T.typrelid = C.oid
where T.typnamespace = ?::oid
  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
  and (T.typtype in ('d','e') or C.relkind = 'c'::"char" or T.typtype = 'b' and (T.typelem = 0 OR T.typcategory <> 'A'))
order by 1
-- ] --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207722] results received
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207722] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207723] 
select T.relkind as table_kind,
       T.relname as table_name,
       T.oid as table_id,
       T.xmin as table_state_number,
       /* false */T.relhasoids  as table_with_oids,
       T.relnamespace as tablespace_id,
       T.reloptions as options,
       (select pg_catalog.array_agg(inhparent)::varchar from (select inhparent::bigint from pg_catalog.pg_inherits where T.oid = inhrelid order by inhseqno) as bts) as ancestors,
       (select pg_catalog.array_agg(inhrelid)::varchar from (select inhrelid::bigint from pg_catalog.pg_inherits where T.oid = inhparent order by inhrelid) as its) as successors,
       /* T.relispartition */false  as is_partition,
       /* pg_catalog.pg_get_partkeydef(T.oid) */null  as partition_key,
       /* pg_catalog.pg_get_expr(T.relpartbound, T.oid) */null  as partition_expression,
       pg_catalog.pg_get_userbyid(T.relowner) as "owner"
from pg_catalog.pg_class T
where relnamespace = ?::oid
  and relkind in ('r', 'm', 'v', 'f', 'p')
  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
order by table_kind, table_id
-- ] --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207723] results received
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207723] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207724] 
select ft.ftrelid as table_id,
       srv.srvname as table_server,
       ft.ftoptions as table_options,
       pg_catalog.pg_get_userbyid(cls.relowner) as "owner"
from pg_catalog.pg_foreign_table ft
     left outer join pg_catalog.pg_foreign_server srv on ft.ftserver = srv.oid
     join pg_catalog.pg_class cls on ft.ftrelid = cls.oid
where cls.relnamespace = ?::oid
  --  and pg_catalog.age(ft.xmin) <= pg_catalog.age(:tx::varchar::xid)
order by table_id
-- ] --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207724] results received
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207724] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207725] 
with schema_procs as (select prorettype, proargtypes, proallargtypes
                      from pg_catalog.pg_proc
                      where pronamespace = ?::oid
                        /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */ ),
     schema_opers as (select oprleft, oprright, oprresult
                      from pg_catalog.pg_operator
                      where oprnamespace = ?::oid
                        /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */ ),
     schema_aggregates as (select A.aggtranstype , A.aggmtranstype 
                           from pg_catalog.pg_aggregate A
                           join pg_catalog.pg_proc P
                             on A.aggfnoid = P.oid
                           where P.pronamespace = ?::oid
                           /* and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(:tx::varchar::xid)) */),
     schema_arg_types as ( select prorettype as type_id
                           from schema_procs
                           union
                           select distinct unnest(proargtypes) as type_id
                           from schema_procs
                           union
                           select distinct unnest(proallargtypes) as type_id
                           from schema_procs
                           union
                           select oprleft as type_id
                           from schema_opers
                           where oprleft is not null
                           union
                           select oprright as type_id
                           from schema_opers
                           where oprright is not null
                           union
                           select oprresult as type_id
                           from schema_opers
                           where oprresult is not null
                           union
                           select aggtranstype::oid as type_id
                           from schema_aggregates
                           union
                           select aggmtranstype::oid as type_id
                           from schema_aggregates
                           
                           )
select type_id, pg_catalog.format_type(type_id, null) as type_spec
from schema_arg_types
where type_id <> 0
-- ] --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207725] results received
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207725] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207726] 
with languages as (select oid as lang_oid, lanname as lang
                   from pg_catalog.pg_language),
     routines as (select proname as r_name,
                         prolang as lang_oid,
                         oid as r_id,
                         xmin as r_state_number,
                         proargnames as arg_names,
                         proargmodes as arg_modes,
                         proargtypes::int[] as in_arg_types,
                         proallargtypes::int[] as all_arg_types,
                         pg_catalog.pg_get_expr(proargdefaults, 0) as arg_defaults,
                         provariadic as arg_variadic_id,
                         prorettype as ret_type_id,
                         proretset as ret_set,
                         /* prokind */case when proiswindow then 'w'
                                                when proisagg then 'a'
                                                else 'f'
                                           end  as kind,
                         provolatile as volatile_kind,
                         proisstrict as is_strict,
                         prosecdef as is_security_definer,
                         proconfig as configuration_parameters,
                         procost as cost,
                         pg_catalog.pg_get_userbyid(proowner) as "owner",
                         prorows as rows ,
                         proleakproof as is_leakproof  /* ,
                         proparallel as concurrency_kind */
                  from pg_catalog.pg_proc
                  where pronamespace = ?::oid
                    and not /* (prokind = 'a') */proisagg 
                    /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */)
select *
from routines natural join languages
-- ] --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207726] results received
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207726] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207727] 
with procedures as (
  select P.oid as function_id,
         pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as function_name,
         P.prorettype as return_type
  from pg_catalog.pg_proc P
  join pg_catalog.pg_namespace N
    on P.pronamespace = N.oid
),
operators as (
  select O.oid as operator_id,
         pg_catalog.quote_ident(N.nspname) || '.' || O.oprname as operator_name
  from pg_catalog.pg_operator O
  join pg_catalog.pg_namespace N
    on O.oprnamespace = N.oid
)
select P.oid as aggregate_id,
       P.xmin as state_number,
       P.proname as aggregate_name,
       P.proargnames as arg_names,
       P.proargmodes as arg_modes,
       P.proargtypes::int[] as in_arg_types,
       P.proallargtypes::int[] as all_arg_types,
       A.aggtransfn::oid as transition_function_id,
       PT.function_name::text as transition_function_name,
       A.aggtranstype as transition_type,
       A.aggfinalfn::oid as final_function_id,
       case when A.aggfinalfn::oid = 0 then null else PF.function_name end as final_function_name,
       case when A.aggfinalfn::oid = 0 then 0 else PF.return_type end as final_return_type,
       A.agginitval as initial_value,
       A.aggsortop as sort_operator_id,
       case when A.aggsortop = 0 then null else O.operator_name end as sort_operator_name,
       pg_catalog.pg_get_userbyid(P.proowner) as "owner"
       ,
       A.aggfinalextra as final_extra,
       A.aggtransspace as state_size,
       A.aggmtransfn::oid as moving_transition_id,
       case when A.aggmtransfn::oid = 0 then null else FTP.function_name end as moving_transition_name,
       A.aggminvtransfn::oid as inverse_transition_id,
       case when A.aggminvtransfn::oid = 0 then null else ITP.function_name end as inverse_transition_name,
       A.aggmtranstype::oid as moving_state_type,
       A.aggmtransspace as moving_state_size,
       A.aggmfinalfn::oid as moving_final_id,
       case when A.aggmfinalfn::oid = 0 then null else FFP.function_name end as moving_final_name,
       A.aggmfinalextra as moving_final_extra,
       A.aggminitval as moving_initial_value,
       A.aggkind as aggregate_kind,
       A.aggnumdirectargs as direct_args
       
       /* ,
       A.aggcombinefn::oid as combine_function_id,
       case when A.aggcombinefn::oid = 0 then null else CP.function_name end as combine_function_name,
       A.aggserialfn::oid as serialization_function_id,
       case when A.aggserialfn::oid = 0 then null else SP.function_name end as serialization_function_name,
       A.aggdeserialfn::oid as deserialization_function_id,
       case when A.aggdeserialfn::oid = 0 then null else DP.function_name end as deserialization_function_name,
       P.proparallel as concurrency_kind
       */
from pg_catalog.pg_aggregate A
join pg_catalog.pg_proc P
  on A.aggfnoid = P.oid
join procedures PT
  on A.aggtransfn::oid = PT.function_id
left outer join procedures PF
  on A.aggfinalfn::oid = PF.function_id
left outer join operators O
  on A.aggsortop = O.operator_id
left outer join procedures FTP
  on A.aggmtransfn = FTP.function_id
left outer join procedures ITP
  on A.aggminvtransfn = ITP.function_id
left outer join procedures FFP
  on A.aggmfinalfn = FFP.function_id

/* left outer join procedures CP
  on A.aggcombinefn = CP.function_id
left outer join procedures SP
  on A.aggserialfn = SP.function_id
left outer join procedures DP
  on A.aggdeserialfn = DP.function_id
*/
where P.pronamespace = ?::oid
--  and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(:tx::varchar::xid))
order by P.oid
-- ] --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207727] results received
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207727] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207728] 
select O.oid as op_id,
       O.xmin as state_number,
       oprname as op_name,
       oprkind as op_kind,
       oprleft as arg_left_type_id,
       oprright as arg_right_type_id,
       oprresult as arg_result_type_id,
       oprcode as func_main,
       pg_catalog.pg_get_userbyid(O.oprowner) as "owner"
from pg_catalog.pg_operator O
where oprnamespace = ?::oid
  --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207728] results received
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207728] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207729] 
select oid as id,
       xmin as state_number,
       collname as name,
       collcollate as lc_collate,
       collctype as lc_ctype,
       pg_catalog.pg_get_userbyid(collowner) as "owner"
from pg_catalog.pg_collation
where collnamespace = ?::oid
  --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207729] results received
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207729] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207730] 
with T as ( select distinct T.oid as table_id, T.relname as table_name
            from pg_catalog.pg_class T,
                 pg_catalog.pg_attribute A
            where T.relnamespace = ?::oid
              and T.relkind in ('r', 'm', 'v', 'f', 'p')
              --  and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid))
              and A.attrelid = T.oid )
select T.table_id,
       C.attnum as column_position,
       C.attname as column_name,
       C.xmin as column_state_number,
       C.atttypmod as type_mod,
       C.attndims as dimensions_number,
       pg_catalog.format_type(C.atttypid, C.atttypmod) as type_spec,
       C.atttypid as type_id,
       C.attnotnull as mandatory,
       /* pg_catalog.pg_get_expr(D.adbin, 'pg_catalog.pg_attrdef'::regclass::oid) */D.adsrc  as column_default_expression,
       not C.attislocal as column_is_inherited,
       C.attfdwoptions as options,
       C.attisdropped as column_is_dropped,
       /* C.attidentity */null  as identity_kind
from T
  inner join pg_catalog.pg_attribute C on T.table_id = C.attrelid
  left outer join pg_catalog.pg_attrdef D on (C.attrelid, C.attnum) = (D.adrelid, D.adnum)
where attnum > 0
order by table_id, attnum
-- ] --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207730] results received
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207730] finished - execution time: 31 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207731] 
with tab as ( select relnamespace as schema_id,
                     oid as table_id,
                     relkind as table_kind
              from pg_catalog.pg_class
              where relnamespace = ?::oid
                and relkind in ('r','m','v','p')),
    ind_head as ( select indrelid as table_id,
                         indexrelid as index_id,
                         indisunique as is_unique,
                         indisprimary as is_primary,
                         indkey as column_positions,
                         indclass as column_operators,
                         indoption as column_options,
                         pg_catalog.pg_get_expr(indpred, indrelid) as condition,
                         case when indexprs is not null
                             then pg_catalog.array_to_string(array(
                                      select case when indkey[k] = 0
                                             then chr(27) || pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
                                             else pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
                                             end
                                      from pg_catalog.generate_subscripts(indkey, 1) as k
                                      order by k),
                                  chr(28))
                             else null end as expressions
                  from pg_catalog.pg_index ),
    ind_stor as ( select cls.relnamespace as schema_id,
                         cls.oid as index_id,
                         cls.xmin as state_number,
                         cls.relname as index_name,
                         /* pg_catalog.pg_indexam_has_property(cls.relam, 'can_order') */am.amcanorder  as can_order
                  from pg_catalog.pg_class cls
                    /* */join pg_catalog.pg_am am on (cls.relam = am.oid)
                  where cls.relkind = 'i'
                    /* and pg_catalog.age(cls.xmin) <= pg_catalog.age(:tx::varchar::xid) */)
select table_id, table_kind,
       index_name, index_id, state_number,
       is_unique, is_primary,
       column_positions, column_operators, column_options,
       condition, expressions, can_order
from tab natural join ind_head natural join ind_stor
-- ] --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207731] results received
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207731] finished - execution time: 31 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:19 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207732] 
with T as ( select oid as table_id,
                   relkind as table_kind,
                   xmin as table_state_id
            from pg_catalog.pg_class
            where relkind in ('r','v','f','p')
              and relnamespace = ?::oid ),
     C as ( select conrelid as table_id,
                   oid::bigint as con_id,
                   xmin as con_state_id,
                   conname as con_name,
                   contype as con_kind,
                   conkey as con_columns,
                   conindid as index_id,
                   confrelid as ref_table_id,
                   confkey as ref_columns,
                   condeferrable as is_deferrable,
                   condeferred as is_init_deferred,
                   confupdtype as on_update,
                   confdeltype as on_delete,
                   /* conbin */consrc 
            from pg_catalog.pg_constraint
            where contype in ('p','u','f','c')
              and connamespace = ?::oid )
select table_id,
       table_kind,
       con_id,
       con_state_id::varchar::bigint as con_state_id,
       con_name,
       con_kind,
       con_columns,
       index_id,
       ref_table_id,
       is_deferrable,
       is_init_deferred,
       on_update,
       on_delete,
       /* pg_catalog.pg_get_expr(conbin, table_id) */consrc  as con_expression,
       ref_columns
from T natural join C
--  where pg_catalog.age(table_state_id) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(con_state_id) <= pg_catalog.age(:tx::varchar::xid)
order by pg_catalog.strpos('pufc', con_kind)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:20 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207732] results received
-- 2020-06-06 20:37:20 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207732] finished - execution time: 516 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:20 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207733] 
select R.ev_class as table_id,
       R.oid as rule_id,
       R.xmin as rule_state_number,
       R.rulename as rule_name,
       pg_catalog.translate(ev_type,'1234','SUID') as rule_event_code,
       R.ev_enabled as rule_fire_mode,
       R.is_instead as rule_is_instead
from pg_catalog.pg_rewrite R
where R.ev_class in (select oid
                     from pg_catalog.pg_class
                     where relnamespace = ?::oid)
  --  and pg_catalog.age(R.xmin) <= pg_catalog.age(:tx::varchar::xid)
  and R.rulename != '_RETURN'::name
order by R.ev_class::bigint, ev_type
-- ] --------------------------------------------------
-- 2020-06-06 20:37:20 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207733] results received
