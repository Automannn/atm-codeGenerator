-- 2020-06-06 20:37:20 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207733] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:20 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207734] 
select T.tgrelid as table_id,
       T.oid as trigger_id,
       T.xmin as trigger_state_number,
       T.tgname as trigger_name,
       T.tgfoid as function_id,
       T.tgtype & 31 as bits,
       T.tgdeferrable as is_deferrable,
       T.tginitdeferred as is_init_deferred,
       T.tgenabled as trigger_fire_mode
from pg_catalog.pg_trigger T
where T.tgrelid in (select oid
                    from pg_catalog.pg_class
                    where relnamespace = ?::oid)
  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
  and not T.tgisinternal
-- ] --------------------------------------------------
-- 2020-06-06 20:37:20 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207734] results received
-- 2020-06-06 20:37:20 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207734] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:20 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207735] 
select D.objoid id, C.relkind as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select T.oid id, 'T' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, pg_catalog.translate(C.contype, 'pufc', 'kkxz') as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 't' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'R' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'F' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'O' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'C' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)

-- ] --------------------------------------------------
-- 2020-06-06 20:37:20 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207735] results received
-- 2020-06-06 20:37:20 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207735] finished - execution time: 16 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:20 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207736] 
select distinct
       T.relkind as view_kind,
       T.oid as view_id,
       pg_catalog.pg_get_viewdef(T.oid) as source_text
from pg_catalog.pg_class T
  join pg_catalog.pg_namespace N on T.relnamespace = N.oid
  left outer join pg_catalog.pg_attribute A on (A.attrelid = T.oid)
where N.oid = ?::oid
  and T.relkind in ('m','v')
  --  and (pg_catalog.age(T.xmin) <= pg_catalog.age(:src_tx::varchar::xid) or pg_catalog.age(A.xmin) <= pg_catalog.age(:src_tx::varchar::xid))
-- ] --------------------------------------------------
-- 2020-06-06 20:37:20 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207736] results received
-- 2020-06-06 20:37:20 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207736] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:20 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207737] 
with A as ( select oid as table_id, pg_catalog.upper(relkind) as table_kind
            from pg_catalog.pg_class
            where relnamespace = ?::oid
              and relkind in ('r', 'm', 'v', 'f', 'p') )
select table_kind,
       table_id,
       R.oid as rule_id,
       pg_catalog.pg_get_ruledef(R.oid) as source_text
from A join pg_catalog.pg_rewrite R
        on A.table_id = R.ev_class
where R.rulename != '_RETURN'::name
  --  and pg_catalog.age(R.xmin) <= pg_catalog.age(:src_tx::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:20 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207737] results received
-- 2020-06-06 20:37:20 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207737] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:20 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207738] 
with system_languages as ( select oid as lang
                           from pg_catalog.pg_language
                           where lanname in ('c','internal') )
select oid as id,
       pg_catalog.pg_get_function_arguments(oid) as arguments_def,
       pg_catalog.pg_get_function_result(oid) as result_def,
       prosrc as source_text
from pg_catalog.pg_proc
where pronamespace = ?::oid
  --  and pg_catalog.age(xmin) <= pg_catalog.age(:src_tx::varchar::xid)
  and not /* (prokind = 'a') */proisagg 
  and prolang not in (select lang from system_languages)
  and prosrc is not null
-- ] --------------------------------------------------
-- 2020-06-06 20:37:20 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207738] results received
-- 2020-06-06 20:37:20 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207738] finished - execution time: 1 ms, fetching time: 14 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:20 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207739] 
select distinct connamespace as schema_id
from pg_catalog.pg_constraint F,
     pg_catalog.pg_class O
where F.contype = 'f'
  and F.confrelid = O.oid
  and O.relnamespace in (?,?)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:20 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207739] results received
-- 2020-06-06 20:37:20 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207739] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:20 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207740] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-06-06 20:37:20 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207740] results received
-- 2020-06-06 20:37:20 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010244] [statement id: 1734207740] finished - execution time: 1 ms, total result sets count: 1
-- 2020-06-06 20:37:20 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 1314010244] disconnected
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 1314010245] connected
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207741] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207741] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207741] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207742] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207742] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207742] finished - execution time: 15 ms, fetching time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207743] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207743] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207743] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207744] 
select R.oid::bigint as role_id, rolname as role_name,
  rolsuper is_super, rolinherit is_inherit,
  rolcreaterole can_createrole, rolcreatedb can_createdb,
  rolcanlogin can_login, rolreplication /* false */ is_replication,
  rolconnlimit conn_limit, rolvaliduntil valid_until,
  /* rolbypassrls */false  bypass_rls, rolconfig config,
  D.description
from pg_catalog.pg_roles R
  left join pg_catalog.pg_shdescription D on D.objoid = R.oid
-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207744] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207744] finished - execution time: 15 ms, fetching time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207745] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207745] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207745] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207746] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207746] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207746] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207747] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207747] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207747] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207748] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207748] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207748] finished - execution time: 3 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207749] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207749] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207749] finished - execution time: 4 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207750] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207750] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207750] finished - execution time: 3 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207751] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207751] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207751] finished - execution time: 2 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207752] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207752] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207752] finished - execution time: 12 ms, fetching time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207753] 
select usesuper
from pg_user
where usename = current_user
-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207753] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207753] finished - execution time: 3 ms, fetching time: 3 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207754] 
select distinct oid
from pg_catalog.pg_am
union
select distinct oid
from pg_catalog.pg_foreign_data_wrapper
union
select distinct oid
from pg_catalog.pg_foreign_server
union
select distinct oid
from pg_catalog.pg_extension

union
select distinct oid
from pg_catalog.pg_user_mapping

-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207754] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207754] finished - execution time: 5 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207755] 
select D.objoid id
from pg_catalog.pg_description D
where D.classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207755] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207755] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207756] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207756] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207756] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207757] 
select A.oid as access_method_id,
       A.xmin as state_number,
       A.amname as access_method_name
       /* ,
       A.amhandler::oid as handler_id,
       pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as handler_name,
       A.amtype as access_method_type
       */
from pg_am A
  /* join pg_proc P on A.amhandler::oid = P.oid
  join pg_namespace N on P.pronamespace = N.oid
  */
where pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207757] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207757] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207758] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207758] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207758] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207759] 
select fdw.oid as id,
       fdw.xmin as state_number,
       fdw.fdwname as name,
       pr.proname as handler,
       nspc.nspname as handler_schema,
       pr2.proname as validator,
       nspc2.nspname as validator_schema,
       fdw.fdwoptions as options,
       pg_catalog.pg_get_userbyid(fdw.fdwowner) as "owner"
from pg_catalog.pg_foreign_data_wrapper fdw
     left outer join pg_catalog.pg_proc pr on fdw.fdwhandler = pr.oid
     left outer join pg_catalog.pg_namespace nspc on pr.pronamespace = nspc.oid
     left outer join pg_catalog.pg_proc pr2 on fdw.fdwvalidator = pr2.oid
     left outer join pg_catalog.pg_namespace nspc2 on pr2.pronamespace = nspc2.oid
  where pg_catalog.age(fdw.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207759] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207759] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207760] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207760] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207760] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207761] 
select srv.oid as id,
       srv.srvfdw as fdw_id,
       srv.xmin as state_number,
       srv.srvname as name,
       srv.srvtype as type,
       srv.srvversion as version,
       srv.srvoptions as options,
       pg_catalog.pg_get_userbyid(srv.srvowner) as "owner"
from pg_catalog.pg_foreign_server srv
  where pg_catalog.age(srv.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207761] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207761] finished - execution time: 1 ms, fetching time: 14 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207762] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207762] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207762] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207763] 
select pg_extension.oid as id,
       pg_extension.xmin as state_number,
       extname as name,
       extversion as version,
       extnamespace as schema_id,
       nspname as schema_name,
       array(select target
             from pg_extension_update_paths(extname)
             where source = extversion and path is not null) as available_updates
from pg_catalog.pg_extension
  join pg_namespace on pg_extension.extnamespace = pg_namespace.oid
where pg_catalog.age(pg_extension.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207763] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207763] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207764] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207764] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207764] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207765] 
select D.objoid id, case
    when 'pg_catalog.pg_am'::regclass = classoid then 'A'
    when 'pg_catalog.pg_foreign_data_wrapper'::regclass = classoid then 'W'
    when 'pg_catalog.pg_foreign_server'::regclass = classoid then 'S'
    when 'pg_catalog.pg_extension'::regclass = classoid then 'E'
    
  end as kind,
  D.objsubid sub_id, D.description
from pg_catalog.pg_description D
where classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207765] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207765] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207766] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207766] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207766] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207767] 
select 'sequence' as dependent_kind,
       'table' as owner_kind,
       D.objid as dependent_id,
       D.refobjid as owner_id,
       D.refobjsubid as owner_subobject_id
from pg_depend D
  join pg_class C_SEQ on D.objid = C_SEQ.oid
  join pg_class C_TAB on D.refobjid = C_TAB.oid
where C_SEQ.relkind = 'S'
  and C_TAB.relkind = 'r'
  and D.refobjsubid <> 0
  and (D.deptype = 'a' or D.deptype = 'i')
-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207767] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207767] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207768] 
with saved_age as (select greatest(pg_catalog.age(?::varchar::xid), pg_catalog.age(?::varchar::xid)) as "value")
select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
(
  select X.last_tx as last_tx
  from (
    (
    select xmin as last_tx
      from pg_catalog.pg_type
      where typnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_class
      where relnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_proc
      where pronamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_operator
      where oprnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select A.xmin as last_tx
      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
      where K.relnamespace = ?::oid
      order by pg_catalog.age(A.xmin)
      limit 1
    )
    union all
    (
    select E.xmin as last_tx
      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
      where T.typnamespace = ?::oid
      order by pg_catalog.age(E.xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_constraint
      where connamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select CO.xmin as last_tx
      from pg_catalog.pg_collation CO
      where CO.collnamespace = ?::oid
      order by pg_catalog.age(CO.xmin)
      limit 1
    )
    union all
    
    (
    select IX.xmin as last_tx
      from pg_catalog.pg_index IX,
           pg_catalog.pg_class IC
      where IC.oid = IX.indrelid
        and IC.relnamespace = ?::oid
        order by pg_catalog.age(IX.xmin)
        limit 1
    )
    union all
    (
    select RU.xmin as last_tx
      from pg_catalog.pg_rewrite RU,
           pg_catalog.pg_class RC
      where RC.oid = RU.ev_class
        and RC.relnamespace = ?::oid
        order by pg_catalog.age(RU.xmin)
        limit 1
    )
    union all
    (
    select TG.xmin as last_tx
      from pg_catalog.pg_trigger TG,
           pg_catalog.pg_class TC
      where TC.oid = TG.tgrelid
        and TC.relnamespace = ?::oid
        order by pg_catalog.age(TG.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_class C on C.oid = D.objoid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_constraint C on C.oid = D.objoid
      where C.connamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_trigger T on T.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = T.tgrelid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_rewrite R on R.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = R.ev_class
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_proc P on P.oid = D.objoid
      where P.pronamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_type T on T.oid = D.objoid
      where T.typnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_operator O on O.oid = D.objoid
      where O.oprnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_collation C on C.oid = D.objoid
      where C.collnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    
  ) X
  order by pg_catalog.age(X.last_tx)
  limit 1
) C, saved_age SA
-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207768] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207768] finished - execution time: 31 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207769] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207769] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207769] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207770] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207770] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207770] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207771] 
select distinct oid
from pg_catalog.pg_type
where typnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_class
where relnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_proc
where pronamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_operator
where oprnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_constraint
where connamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_collation
where collnamespace = ?::oid
union

select distinct IX.indexrelid
from pg_catalog.pg_index IX,
     pg_catalog.pg_class IC
where IC.oid = IX.indrelid
  and IC.relnamespace = ?::oid
union
select distinct RU.oid
from pg_catalog.pg_rewrite RU,
     pg_catalog.pg_class RC
where RC.oid = RU.ev_class
  and RC.relnamespace = ?::oid
  and not RU.rulename = '_RETURN'
union
select distinct TG.oid
from pg_catalog.pg_trigger TG,
     pg_catalog.pg_class TC
where TC.oid = TG.tgrelid
  and TC.relnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207771] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207771] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207772] 
select D.objoid id, pg_catalog.array_agg(D.objsubid) sub_ids
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
group by D.objoid
union all
select T.oid id, pg_catalog.array_agg(D.objsubid)
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
group by T.oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207772] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207772] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207773] 
with saved_age as (select greatest(pg_catalog.age(?::varchar::xid), pg_catalog.age(?::varchar::xid)) as "value")
select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
(
  select X.last_tx as last_tx
  from (
    (
    select xmin as last_tx
      from pg_catalog.pg_type
      where typnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_class
      where relnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_proc
      where pronamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_operator
      where oprnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select A.xmin as last_tx
      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
      where K.relnamespace = ?::oid
      order by pg_catalog.age(A.xmin)
      limit 1
    )
    union all
    (
    select E.xmin as last_tx
      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
      where T.typnamespace = ?::oid
      order by pg_catalog.age(E.xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_constraint
      where connamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select CO.xmin as last_tx
      from pg_catalog.pg_collation CO
      where CO.collnamespace = ?::oid
      order by pg_catalog.age(CO.xmin)
      limit 1
    )
    union all
    
    (
    select IX.xmin as last_tx
      from pg_catalog.pg_index IX,
           pg_catalog.pg_class IC
      where IC.oid = IX.indrelid
        and IC.relnamespace = ?::oid
        order by pg_catalog.age(IX.xmin)
        limit 1
    )
    union all
    (
    select RU.xmin as last_tx
      from pg_catalog.pg_rewrite RU,
           pg_catalog.pg_class RC
      where RC.oid = RU.ev_class
        and RC.relnamespace = ?::oid
        order by pg_catalog.age(RU.xmin)
        limit 1
    )
    union all
    (
    select TG.xmin as last_tx
      from pg_catalog.pg_trigger TG,
           pg_catalog.pg_class TC
      where TC.oid = TG.tgrelid
        and TC.relnamespace = ?::oid
        order by pg_catalog.age(TG.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_class C on C.oid = D.objoid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_constraint C on C.oid = D.objoid
      where C.connamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_trigger T on T.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = T.tgrelid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_rewrite R on R.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = R.ev_class
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_proc P on P.oid = D.objoid
      where P.pronamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_type T on T.oid = D.objoid
      where T.typnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_operator O on O.oid = D.objoid
      where O.oprnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_collation C on C.oid = D.objoid
      where C.collnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    
  ) X
  order by pg_catalog.age(X.last_tx)
  limit 1
) C, saved_age SA
-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207773] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207773] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207774] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207774] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207774] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207775] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207775] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207775] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207776] 
select distinct oid
from pg_catalog.pg_type
where typnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_class
where relnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_proc
where pronamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_operator
where oprnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_constraint
where connamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_collation
where collnamespace = ?::oid
union

select distinct IX.indexrelid
from pg_catalog.pg_index IX,
     pg_catalog.pg_class IC
where IC.oid = IX.indrelid
  and IC.relnamespace = ?::oid
union
select distinct RU.oid
from pg_catalog.pg_rewrite RU,
     pg_catalog.pg_class RC
where RC.oid = RU.ev_class
  and RC.relnamespace = ?::oid
  and not RU.rulename = '_RETURN'
union
select distinct TG.oid
from pg_catalog.pg_trigger TG,
     pg_catalog.pg_class TC
where TC.oid = TG.tgrelid
  and TC.relnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207776] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207776] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207777] 
select D.objoid id, pg_catalog.array_agg(D.objsubid) sub_ids
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
group by D.objoid
union all
select T.oid id, pg_catalog.array_agg(D.objsubid)
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
group by T.oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207777] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207777] finished - execution time: 47 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207778] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207778] results received
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010245] [statement id: 1734207778] finished - execution time: 1 ms, total result sets count: 1
-- 2020-06-06 20:37:21 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 1314010245] disconnected
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 1314010246] connected
-- [ --------------------------------------------------
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207779] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207779] results received
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207779] finished - execution time: 312 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207780] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207780] results received
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207780] finished - execution time: 63 ms, fetching time: 47 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207781] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207781] results received
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207781] finished - execution time: 1 ms, fetching time: 14 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207782] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207782] results received
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207782] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207783] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207783] results received
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207783] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207784] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207784] results received
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207784] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207785] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207785] results received
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207785] finished - execution time: 16 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207786] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207786] results received
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207786] finished - execution time: 63 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207787] 
select usesuper
from pg_user
where usename = current_user
-- ] --------------------------------------------------
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207787] results received
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207787] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207788] 
select distinct oid
from pg_catalog.pg_am
union
select distinct oid
from pg_catalog.pg_foreign_data_wrapper
union
select distinct oid
from pg_catalog.pg_foreign_server
union
select distinct oid
from pg_catalog.pg_extension

union
select distinct oid
from pg_catalog.pg_user_mapping

-- ] --------------------------------------------------
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207788] results received
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207788] finished - execution time: 188 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207789] 
select D.objoid id
from pg_catalog.pg_description D
where D.classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207789] results received
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207789] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207790] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207790] results received
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207790] finished - execution time: 1 ms, fetching time: 14 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207791] 
select A.oid as access_method_id,
       A.xmin as state_number,
       A.amname as access_method_name
       /* ,
       A.amhandler::oid as handler_id,
       pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as handler_name,
       A.amtype as access_method_type
       */
from pg_am A
  /* join pg_proc P on A.amhandler::oid = P.oid
  join pg_namespace N on P.pronamespace = N.oid
  */
where pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207791] results received
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207791] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207792] 
select fdw.oid as id,
       fdw.xmin as state_number,
       fdw.fdwname as name,
       pr.proname as handler,
       nspc.nspname as handler_schema,
       pr2.proname as validator,
       nspc2.nspname as validator_schema,
       fdw.fdwoptions as options,
       pg_catalog.pg_get_userbyid(fdw.fdwowner) as "owner"
from pg_catalog.pg_foreign_data_wrapper fdw
     left outer join pg_catalog.pg_proc pr on fdw.fdwhandler = pr.oid
     left outer join pg_catalog.pg_namespace nspc on pr.pronamespace = nspc.oid
     left outer join pg_catalog.pg_proc pr2 on fdw.fdwvalidator = pr2.oid
     left outer join pg_catalog.pg_namespace nspc2 on pr2.pronamespace = nspc2.oid
  where pg_catalog.age(fdw.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207792] results received
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207792] finished - execution time: 1 ms, fetching time: 14 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207793] 
select srv.oid as id,
       srv.srvfdw as fdw_id,
       srv.xmin as state_number,
       srv.srvname as name,
       srv.srvtype as type,
       srv.srvversion as version,
       srv.srvoptions as options,
       pg_catalog.pg_get_userbyid(srv.srvowner) as "owner"
from pg_catalog.pg_foreign_server srv
  where pg_catalog.age(srv.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207793] results received
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207793] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207794] 
select pg_extension.oid as id,
       pg_extension.xmin as state_number,
       extname as name,
       extversion as version,
       extnamespace as schema_id,
       nspname as schema_name,
       array(select target
             from pg_extension_update_paths(extname)
             where source = extversion and path is not null) as available_updates
from pg_catalog.pg_extension
  join pg_namespace on pg_extension.extnamespace = pg_namespace.oid
where pg_catalog.age(pg_extension.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207794] results received
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207794] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:22 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207795] 
select D.objoid id, case
    when 'pg_catalog.pg_am'::regclass = classoid then 'A'
    when 'pg_catalog.pg_foreign_data_wrapper'::regclass = classoid then 'W'
    when 'pg_catalog.pg_foreign_server'::regclass = classoid then 'S'
    when 'pg_catalog.pg_extension'::regclass = classoid then 'E'
    
  end as kind,
  D.objsubid sub_id, D.description
from pg_catalog.pg_description D
where classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207795] results received
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207795] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207796] 
select 'sequence' as dependent_kind,
       'table' as owner_kind,
       D.objid as dependent_id,
       D.refobjid as owner_id,
       D.refobjsubid as owner_subobject_id
from pg_depend D
  join pg_class C_SEQ on D.objid = C_SEQ.oid
  join pg_class C_TAB on D.refobjid = C_TAB.oid
where C_SEQ.relkind = 'S'
  and C_TAB.relkind = 'r'
  and D.refobjsubid <> 0
  and (D.deptype = 'a' or D.deptype = 'i')
-- ] --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207796] results received
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207796] finished - execution time: 93 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207797] 
with saved_age as (select greatest(pg_catalog.age(?::varchar::xid), pg_catalog.age(?::varchar::xid)) as "value")
select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
(
  select X.last_tx as last_tx
  from (
    (
    select xmin as last_tx
      from pg_catalog.pg_type
      where typnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_class
      where relnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_proc
      where pronamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_operator
      where oprnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select A.xmin as last_tx
      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
      where K.relnamespace = ?::oid
      order by pg_catalog.age(A.xmin)
      limit 1
    )
    union all
    (
    select E.xmin as last_tx
      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
      where T.typnamespace = ?::oid
      order by pg_catalog.age(E.xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_constraint
      where connamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select CO.xmin as last_tx
      from pg_catalog.pg_collation CO
      where CO.collnamespace = ?::oid
      order by pg_catalog.age(CO.xmin)
      limit 1
    )
    union all
    
    (
    select IX.xmin as last_tx
      from pg_catalog.pg_index IX,
           pg_catalog.pg_class IC
      where IC.oid = IX.indrelid
        and IC.relnamespace = ?::oid
        order by pg_catalog.age(IX.xmin)
        limit 1
    )
    union all
    (
    select RU.xmin as last_tx
      from pg_catalog.pg_rewrite RU,
           pg_catalog.pg_class RC
      where RC.oid = RU.ev_class
        and RC.relnamespace = ?::oid
        order by pg_catalog.age(RU.xmin)
        limit 1
    )
    union all
    (
    select TG.xmin as last_tx
      from pg_catalog.pg_trigger TG,
           pg_catalog.pg_class TC
      where TC.oid = TG.tgrelid
        and TC.relnamespace = ?::oid
        order by pg_catalog.age(TG.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_class C on C.oid = D.objoid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_constraint C on C.oid = D.objoid
      where C.connamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_trigger T on T.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = T.tgrelid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_rewrite R on R.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = R.ev_class
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_proc P on P.oid = D.objoid
      where P.pronamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_type T on T.oid = D.objoid
      where T.typnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_operator O on O.oid = D.objoid
      where O.oprnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_collation C on C.oid = D.objoid
      where C.collnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    
  ) X
  order by pg_catalog.age(X.last_tx)
  limit 1
) C, saved_age SA
-- ] --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207797] results received
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207797] finished - execution time: 297 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207798] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207798] results received
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207798] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207799] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207799] results received
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207799] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207800] 
with saved_age as (select greatest(pg_catalog.age(?::varchar::xid), pg_catalog.age(?::varchar::xid)) as "value")
select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
(
  select X.last_tx as last_tx
  from (
    (
    select xmin as last_tx
      from pg_catalog.pg_type
      where typnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_class
      where relnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_proc
      where pronamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_operator
      where oprnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select A.xmin as last_tx
      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
      where K.relnamespace = ?::oid
      order by pg_catalog.age(A.xmin)
      limit 1
    )
    union all
    (
    select E.xmin as last_tx
      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
      where T.typnamespace = ?::oid
      order by pg_catalog.age(E.xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_constraint
      where connamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select CO.xmin as last_tx
      from pg_catalog.pg_collation CO
      where CO.collnamespace = ?::oid
      order by pg_catalog.age(CO.xmin)
      limit 1
    )
    union all
    
    (
    select IX.xmin as last_tx
      from pg_catalog.pg_index IX,
           pg_catalog.pg_class IC
      where IC.oid = IX.indrelid
        and IC.relnamespace = ?::oid
        order by pg_catalog.age(IX.xmin)
        limit 1
    )
    union all
    (
    select RU.xmin as last_tx
      from pg_catalog.pg_rewrite RU,
           pg_catalog.pg_class RC
      where RC.oid = RU.ev_class
        and RC.relnamespace = ?::oid
        order by pg_catalog.age(RU.xmin)
        limit 1
    )
    union all
    (
    select TG.xmin as last_tx
      from pg_catalog.pg_trigger TG,
           pg_catalog.pg_class TC
      where TC.oid = TG.tgrelid
        and TC.relnamespace = ?::oid
        order by pg_catalog.age(TG.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_class C on C.oid = D.objoid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_constraint C on C.oid = D.objoid
      where C.connamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_trigger T on T.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = T.tgrelid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_rewrite R on R.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = R.ev_class
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_proc P on P.oid = D.objoid
      where P.pronamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_type T on T.oid = D.objoid
      where T.typnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_operator O on O.oid = D.objoid
      where O.oprnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_collation C on C.oid = D.objoid
      where C.collnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    
  ) X
  order by pg_catalog.age(X.last_tx)
  limit 1
) C, saved_age SA
-- ] --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207800] results received
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207800] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207801] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207801] results received
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207801] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207802] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207802] results received
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207802] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207803] 
with saved_age as (select greatest(pg_catalog.age(?::varchar::xid), pg_catalog.age(?::varchar::xid)) as "value")
select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
(
  select X.last_tx as last_tx
  from (
    (
    select xmin as last_tx
      from pg_catalog.pg_type
      where typnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_class
      where relnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_proc
      where pronamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_operator
      where oprnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select A.xmin as last_tx
      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
      where K.relnamespace = ?::oid
      order by pg_catalog.age(A.xmin)
      limit 1
    )
    union all
    (
    select E.xmin as last_tx
      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
      where T.typnamespace = ?::oid
      order by pg_catalog.age(E.xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_constraint
      where connamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select CO.xmin as last_tx
      from pg_catalog.pg_collation CO
      where CO.collnamespace = ?::oid
      order by pg_catalog.age(CO.xmin)
      limit 1
    )
    union all
    
    (
    select IX.xmin as last_tx
      from pg_catalog.pg_index IX,
           pg_catalog.pg_class IC
      where IC.oid = IX.indrelid
        and IC.relnamespace = ?::oid
        order by pg_catalog.age(IX.xmin)
        limit 1
    )
    union all
    (
    select RU.xmin as last_tx
      from pg_catalog.pg_rewrite RU,
           pg_catalog.pg_class RC
      where RC.oid = RU.ev_class
        and RC.relnamespace = ?::oid
        order by pg_catalog.age(RU.xmin)
        limit 1
    )
    union all
    (
    select TG.xmin as last_tx
      from pg_catalog.pg_trigger TG,
           pg_catalog.pg_class TC
      where TC.oid = TG.tgrelid
        and TC.relnamespace = ?::oid
        order by pg_catalog.age(TG.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_class C on C.oid = D.objoid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_constraint C on C.oid = D.objoid
      where C.connamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_trigger T on T.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = T.tgrelid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_rewrite R on R.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = R.ev_class
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_proc P on P.oid = D.objoid
      where P.pronamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_type T on T.oid = D.objoid
      where T.typnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_operator O on O.oid = D.objoid
      where O.oprnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_collation C on C.oid = D.objoid
      where C.collnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    
  ) X
  order by pg_catalog.age(X.last_tx)
  limit 1
) C, saved_age SA
-- ] --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207803] results received
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207803] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207804] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207804] results received
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207804] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207805] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207805] results received
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207805] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207806] 
with U as (select usesysid from pg_catalog.pg_user where usename = current_user),
          T as (
                select oid as sequence_id,
                       relname as sequence_name,
                       pg_catalog.pg_get_userbyid(relowner) as "owner",
                       case when relowner = (select usesysid from U) then trim(both '()' from pg_catalog.pg_sequence_parameters(oid)::varchar)
                       else null::varchar
                       end as sequence_params,
                       
                       xmin as sequence_state_number
                       from pg_catalog.pg_class
                         where relnamespace = ?::oid
                         and relkind = 'S'
                         --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
                )
select sequence_id,
       sequence_name,
       pg_catalog.split_part(sequence_params, ',', 1)::bigint as next_value,
       pg_catalog.split_part(sequence_params, ',', 2)::bigint as min_value,
       pg_catalog.split_part(sequence_params, ',', 3)::bigint as max_value,
       pg_catalog.split_part(sequence_params, ',', 4)::bigint as inc_value,
       pg_catalog.lower(pg_catalog.split_part(sequence_params, ',', 5)) LIKE '%t%' as cycle_option,
       
       sequence_state_number,
       "owner"
from T
-- ] --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207806] results received
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207806] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207807] 
select T.oid as type_id,
       T.xmin as type_state_number,
       T.typname as type_name,
       T.typtype as type_sub_kind,
       T.typcategory as type_category,
       T.typrelid as class_id,
       T.typbasetype as base_type_id,
       case when T.typtype in ('c','e') then null
            else pg_catalog.format_type(T.typbasetype, T.typtypmod) end as type_def,
       T.typdefault as default_expression,
       T.typnotnull as mandatory,
       pg_catalog.pg_get_userbyid(T.typowner) as "owner"
from pg_catalog.pg_type T
         left outer join pg_catalog.pg_class C
             on T.typrelid = C.oid
where T.typnamespace = ?::oid
  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
  and (T.typtype in ('d','e') or C.relkind = 'c'::"char" or T.typtype = 'b' and (T.typelem = 0 OR T.typcategory <> 'A'))
order by 1
-- ] --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207807] results received
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207807] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207808] 
select T.oid::bigint as type_id,
       C.oid::bigint as constraint_id,
       C.xmin as constraint_state_number,
       C.conname as constraint_name,
       /* pg_catalog.pg_get_expr(C.conbin, 0) */C.consrc  as predicate
from pg_catalog.pg_type T,
     pg_catalog.pg_constraint C
where T.typnamespace = ?::oid
  and T.typtype = 'd'::"char"
  and T.oid = C.contypid
  --  and (pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(C.xmin) <= pg_catalog.age(:tx::varchar::xid))
order by constraint_name
-- ] --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207808] results received
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207808] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207809] 
select T.relkind as table_kind,
       T.relname as table_name,
       T.oid as table_id,
       T.xmin as table_state_number,
       /* false */T.relhasoids  as table_with_oids,
       T.relnamespace as tablespace_id,
       T.reloptions as options,
       (select pg_catalog.array_agg(inhparent)::varchar from (select inhparent::bigint from pg_catalog.pg_inherits where T.oid = inhrelid order by inhseqno) as bts) as ancestors,
       (select pg_catalog.array_agg(inhrelid)::varchar from (select inhrelid::bigint from pg_catalog.pg_inherits where T.oid = inhparent order by inhrelid) as its) as successors,
       /* T.relispartition */false  as is_partition,
       /* pg_catalog.pg_get_partkeydef(T.oid) */null  as partition_key,
       /* pg_catalog.pg_get_expr(T.relpartbound, T.oid) */null  as partition_expression,
       pg_catalog.pg_get_userbyid(T.relowner) as "owner"
from pg_catalog.pg_class T
where relnamespace = ?::oid
  and relkind in ('r', 'm', 'v', 'f', 'p')
  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
order by table_kind, table_id
-- ] --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207809] results received
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207809] finished - execution time: 110 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207810] 
select ft.ftrelid as table_id,
       srv.srvname as table_server,
       ft.ftoptions as table_options,
       pg_catalog.pg_get_userbyid(cls.relowner) as "owner"
from pg_catalog.pg_foreign_table ft
     left outer join pg_catalog.pg_foreign_server srv on ft.ftserver = srv.oid
     join pg_catalog.pg_class cls on ft.ftrelid = cls.oid
where cls.relnamespace = ?::oid
  --  and pg_catalog.age(ft.xmin) <= pg_catalog.age(:tx::varchar::xid)
order by table_id
-- ] --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207810] results received
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207810] finished - execution time: 31 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207811] 
with schema_procs as (select prorettype, proargtypes, proallargtypes
                      from pg_catalog.pg_proc
                      where pronamespace = ?::oid
                        /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */ ),
     schema_opers as (select oprleft, oprright, oprresult
                      from pg_catalog.pg_operator
                      where oprnamespace = ?::oid
                        /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */ ),
     schema_aggregates as (select A.aggtranstype , A.aggmtranstype 
                           from pg_catalog.pg_aggregate A
                           join pg_catalog.pg_proc P
                             on A.aggfnoid = P.oid
                           where P.pronamespace = ?::oid
                           /* and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(:tx::varchar::xid)) */),
     schema_arg_types as ( select prorettype as type_id
                           from schema_procs
                           union
                           select distinct unnest(proargtypes) as type_id
                           from schema_procs
                           union
                           select distinct unnest(proallargtypes) as type_id
                           from schema_procs
                           union
                           select oprleft as type_id
                           from schema_opers
                           where oprleft is not null
                           union
                           select oprright as type_id
                           from schema_opers
                           where oprright is not null
                           union
                           select oprresult as type_id
                           from schema_opers
                           where oprresult is not null
                           union
                           select aggtranstype::oid as type_id
                           from schema_aggregates
                           union
                           select aggmtranstype::oid as type_id
                           from schema_aggregates
                           
                           )
select type_id, pg_catalog.format_type(type_id, null) as type_spec
from schema_arg_types
where type_id <> 0
-- ] --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207811] results received
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207811] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207812] 
with languages as (select oid as lang_oid, lanname as lang
                   from pg_catalog.pg_language),
     routines as (select proname as r_name,
                         prolang as lang_oid,
                         oid as r_id,
                         xmin as r_state_number,
                         proargnames as arg_names,
                         proargmodes as arg_modes,
                         proargtypes::int[] as in_arg_types,
                         proallargtypes::int[] as all_arg_types,
                         pg_catalog.pg_get_expr(proargdefaults, 0) as arg_defaults,
                         provariadic as arg_variadic_id,
                         prorettype as ret_type_id,
                         proretset as ret_set,
                         /* prokind */case when proiswindow then 'w'
                                                when proisagg then 'a'
                                                else 'f'
                                           end  as kind,
                         provolatile as volatile_kind,
                         proisstrict as is_strict,
                         prosecdef as is_security_definer,
                         proconfig as configuration_parameters,
                         procost as cost,
                         pg_catalog.pg_get_userbyid(proowner) as "owner",
                         prorows as rows ,
                         proleakproof as is_leakproof  /* ,
                         proparallel as concurrency_kind */
                  from pg_catalog.pg_proc
                  where pronamespace = ?::oid
                    and not /* (prokind = 'a') */proisagg 
                    /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */)
select *
from routines natural join languages
-- ] --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207812] results received
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207812] finished - execution time: 78 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207813] 
with procedures as (
  select P.oid as function_id,
         pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as function_name,
         P.prorettype as return_type
  from pg_catalog.pg_proc P
  join pg_catalog.pg_namespace N
    on P.pronamespace = N.oid
),
operators as (
  select O.oid as operator_id,
         pg_catalog.quote_ident(N.nspname) || '.' || O.oprname as operator_name
  from pg_catalog.pg_operator O
  join pg_catalog.pg_namespace N
    on O.oprnamespace = N.oid
)
select P.oid as aggregate_id,
       P.xmin as state_number,
       P.proname as aggregate_name,
       P.proargnames as arg_names,
       P.proargmodes as arg_modes,
       P.proargtypes::int[] as in_arg_types,
       P.proallargtypes::int[] as all_arg_types,
       A.aggtransfn::oid as transition_function_id,
       PT.function_name::text as transition_function_name,
       A.aggtranstype as transition_type,
       A.aggfinalfn::oid as final_function_id,
       case when A.aggfinalfn::oid = 0 then null else PF.function_name end as final_function_name,
       case when A.aggfinalfn::oid = 0 then 0 else PF.return_type end as final_return_type,
       A.agginitval as initial_value,
       A.aggsortop as sort_operator_id,
       case when A.aggsortop = 0 then null else O.operator_name end as sort_operator_name,
       pg_catalog.pg_get_userbyid(P.proowner) as "owner"
       ,
       A.aggfinalextra as final_extra,
       A.aggtransspace as state_size,
       A.aggmtransfn::oid as moving_transition_id,
       case when A.aggmtransfn::oid = 0 then null else FTP.function_name end as moving_transition_name,
       A.aggminvtransfn::oid as inverse_transition_id,
       case when A.aggminvtransfn::oid = 0 then null else ITP.function_name end as inverse_transition_name,
       A.aggmtranstype::oid as moving_state_type,
       A.aggmtransspace as moving_state_size,
       A.aggmfinalfn::oid as moving_final_id,
       case when A.aggmfinalfn::oid = 0 then null else FFP.function_name end as moving_final_name,
       A.aggmfinalextra as moving_final_extra,
       A.aggminitval as moving_initial_value,
       A.aggkind as aggregate_kind,
       A.aggnumdirectargs as direct_args
       
       /* ,
       A.aggcombinefn::oid as combine_function_id,
       case when A.aggcombinefn::oid = 0 then null else CP.function_name end as combine_function_name,
       A.aggserialfn::oid as serialization_function_id,
       case when A.aggserialfn::oid = 0 then null else SP.function_name end as serialization_function_name,
       A.aggdeserialfn::oid as deserialization_function_id,
       case when A.aggdeserialfn::oid = 0 then null else DP.function_name end as deserialization_function_name,
       P.proparallel as concurrency_kind
       */
from pg_catalog.pg_aggregate A
join pg_catalog.pg_proc P
  on A.aggfnoid = P.oid
join procedures PT
  on A.aggtransfn::oid = PT.function_id
left outer join procedures PF
  on A.aggfinalfn::oid = PF.function_id
left outer join operators O
  on A.aggsortop = O.operator_id
left outer join procedures FTP
  on A.aggmtransfn = FTP.function_id
left outer join procedures ITP
  on A.aggminvtransfn = ITP.function_id
left outer join procedures FFP
  on A.aggmfinalfn = FFP.function_id

/* left outer join procedures CP
  on A.aggcombinefn = CP.function_id
left outer join procedures SP
  on A.aggserialfn = SP.function_id
left outer join procedures DP
  on A.aggdeserialfn = DP.function_id
*/
where P.pronamespace = ?::oid
--  and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(:tx::varchar::xid))
order by P.oid
-- ] --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207813] results received
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207813] finished - execution time: 15 ms, fetching time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207814] 
select O.oid as op_id,
       O.xmin as state_number,
       oprname as op_name,
       oprkind as op_kind,
       oprleft as arg_left_type_id,
       oprright as arg_right_type_id,
       oprresult as arg_result_type_id,
       oprcode as func_main,
       pg_catalog.pg_get_userbyid(O.oprowner) as "owner"
from pg_catalog.pg_operator O
where oprnamespace = ?::oid
  --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207814] results received
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207814] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207815] 
select oid as id,
       xmin as state_number,
       collname as name,
       collcollate as lc_collate,
       collctype as lc_ctype,
       pg_catalog.pg_get_userbyid(collowner) as "owner"
from pg_catalog.pg_collation
where collnamespace = ?::oid
  --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207815] results received
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207815] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:23 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207816] 
with T as ( select distinct T.oid as table_id, T.relname as table_name
            from pg_catalog.pg_class T,
                 pg_catalog.pg_attribute A
            where T.relnamespace = ?::oid
              and T.relkind in ('r', 'm', 'v', 'f', 'p')
              --  and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid))
              and A.attrelid = T.oid )
select T.table_id,
       C.attnum as column_position,
       C.attname as column_name,
       C.xmin as column_state_number,
       C.atttypmod as type_mod,
       C.attndims as dimensions_number,
       pg_catalog.format_type(C.atttypid, C.atttypmod) as type_spec,
       C.atttypid as type_id,
       C.attnotnull as mandatory,
       /* pg_catalog.pg_get_expr(D.adbin, 'pg_catalog.pg_attrdef'::regclass::oid) */D.adsrc  as column_default_expression,
       not C.attislocal as column_is_inherited,
       C.attfdwoptions as options,
       C.attisdropped as column_is_dropped,
       /* C.attidentity */null  as identity_kind
from T
  inner join pg_catalog.pg_attribute C on T.table_id = C.attrelid
  left outer join pg_catalog.pg_attrdef D on (C.attrelid, C.attnum) = (D.adrelid, D.adnum)
where attnum > 0
order by table_id, attnum
-- ] --------------------------------------------------
-- 2020-06-06 20:37:24 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207816] results received
-- 2020-06-06 20:37:24 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207816] finished - execution time: 109 ms, fetching time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:24 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207817] 
with tab as ( select relnamespace as schema_id,
                     oid as table_id,
                     relkind as table_kind
              from pg_catalog.pg_class
              where relnamespace = ?::oid
                and relkind in ('r','m','v','p')),
    ind_head as ( select indrelid as table_id,
                         indexrelid as index_id,
                         indisunique as is_unique,
                         indisprimary as is_primary,
                         indkey as column_positions,
                         indclass as column_operators,
                         indoption as column_options,
                         pg_catalog.pg_get_expr(indpred, indrelid) as condition,
                         case when indexprs is not null
                             then pg_catalog.array_to_string(array(
                                      select case when indkey[k] = 0
                                             then chr(27) || pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
                                             else pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
                                             end
                                      from pg_catalog.generate_subscripts(indkey, 1) as k
                                      order by k),
                                  chr(28))
                             else null end as expressions
                  from pg_catalog.pg_index ),
    ind_stor as ( select cls.relnamespace as schema_id,
                         cls.oid as index_id,
                         cls.xmin as state_number,
                         cls.relname as index_name,
                         /* pg_catalog.pg_indexam_has_property(cls.relam, 'can_order') */am.amcanorder  as can_order
                  from pg_catalog.pg_class cls
                    /* */join pg_catalog.pg_am am on (cls.relam = am.oid)
                  where cls.relkind = 'i'
                    /* and pg_catalog.age(cls.xmin) <= pg_catalog.age(:tx::varchar::xid) */)
select table_id, table_kind,
       index_name, index_id, state_number,
       is_unique, is_primary,
       column_positions, column_operators, column_options,
       condition, expressions, can_order
from tab natural join ind_head natural join ind_stor
-- ] --------------------------------------------------
-- 2020-06-06 20:37:24 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207817] results received
-- 2020-06-06 20:37:24 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207817] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:24 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207818] 
with T as ( select oid as table_id,
                   relkind as table_kind,
                   xmin as table_state_id
            from pg_catalog.pg_class
            where relkind in ('r','v','f','p')
              and relnamespace = ?::oid ),
     C as ( select conrelid as table_id,
                   oid::bigint as con_id,
                   xmin as con_state_id,
                   conname as con_name,
                   contype as con_kind,
                   conkey as con_columns,
                   conindid as index_id,
                   confrelid as ref_table_id,
                   confkey as ref_columns,
                   condeferrable as is_deferrable,
                   condeferred as is_init_deferred,
                   confupdtype as on_update,
                   confdeltype as on_delete,
                   /* conbin */consrc 
            from pg_catalog.pg_constraint
            where contype in ('p','u','f','c')
              and connamespace = ?::oid )
select table_id,
       table_kind,
       con_id,
       con_state_id::varchar::bigint as con_state_id,
       con_name,
       con_kind,
       con_columns,
       index_id,
       ref_table_id,
       is_deferrable,
       is_init_deferred,
       on_update,
       on_delete,
       /* pg_catalog.pg_get_expr(conbin, table_id) */consrc  as con_expression,
       ref_columns
from T natural join C
--  where pg_catalog.age(table_state_id) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(con_state_id) <= pg_catalog.age(:tx::varchar::xid)
order by pg_catalog.strpos('pufc', con_kind)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:24 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207818] results received
-- 2020-06-06 20:37:24 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207818] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:24 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207819] 
select R.ev_class as table_id,
       R.oid as rule_id,
       R.xmin as rule_state_number,
       R.rulename as rule_name,
       pg_catalog.translate(ev_type,'1234','SUID') as rule_event_code,
       R.ev_enabled as rule_fire_mode,
       R.is_instead as rule_is_instead
from pg_catalog.pg_rewrite R
where R.ev_class in (select oid
                     from pg_catalog.pg_class
                     where relnamespace = ?::oid)
  --  and pg_catalog.age(R.xmin) <= pg_catalog.age(:tx::varchar::xid)
  and R.rulename != '_RETURN'::name
order by R.ev_class::bigint, ev_type
-- ] --------------------------------------------------
-- 2020-06-06 20:37:24 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207819] results received
-- 2020-06-06 20:37:24 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207819] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:24 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207820] 
select T.tgrelid as table_id,
       T.oid as trigger_id,
       T.xmin as trigger_state_number,
       T.tgname as trigger_name,
       T.tgfoid as function_id,
       T.tgtype & 31 as bits,
       T.tgdeferrable as is_deferrable,
       T.tginitdeferred as is_init_deferred,
       T.tgenabled as trigger_fire_mode
from pg_catalog.pg_trigger T
where T.tgrelid in (select oid
                    from pg_catalog.pg_class
                    where relnamespace = ?::oid)
  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
  and not T.tgisinternal
-- ] --------------------------------------------------
-- 2020-06-06 20:37:24 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207820] results received
-- 2020-06-06 20:37:24 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207820] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:24 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207821] 
select D.objoid id, C.relkind as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select T.oid id, 'T' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, pg_catalog.translate(C.contype, 'pufc', 'kkxz') as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 't' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'R' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'F' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'O' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'C' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)

-- ] --------------------------------------------------
-- 2020-06-06 20:37:24 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207821] results received
-- 2020-06-06 20:37:24 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207821] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:24 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207822] 
select distinct
       T.relkind as view_kind,
       T.oid as view_id,
       pg_catalog.pg_get_viewdef(T.oid) as source_text
from pg_catalog.pg_class T
  join pg_catalog.pg_namespace N on T.relnamespace = N.oid
  left outer join pg_catalog.pg_attribute A on (A.attrelid = T.oid)
where N.oid = ?::oid
  and T.relkind in ('m','v')
  --  and (pg_catalog.age(T.xmin) <= pg_catalog.age(:src_tx::varchar::xid) or pg_catalog.age(A.xmin) <= pg_catalog.age(:src_tx::varchar::xid))
-- ] --------------------------------------------------
-- 2020-06-06 20:37:24 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207822] results received
-- 2020-06-06 20:37:24 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207822] finished - execution time: 451 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207823] 
with A as ( select oid as table_id, pg_catalog.upper(relkind) as table_kind
            from pg_catalog.pg_class
            where relnamespace = ?::oid
              and relkind in ('r', 'm', 'v', 'f', 'p') )
select table_kind,
       table_id,
       R.oid as rule_id,
       pg_catalog.pg_get_ruledef(R.oid) as source_text
from A join pg_catalog.pg_rewrite R
        on A.table_id = R.ev_class
where R.rulename != '_RETURN'::name
  --  and pg_catalog.age(R.xmin) <= pg_catalog.age(:src_tx::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207823] results received
-- 2020-06-06 20:37:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207823] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207824] 
with system_languages as ( select oid as lang
                           from pg_catalog.pg_language
                           where lanname in ('c','internal') )
select oid as id,
       pg_catalog.pg_get_function_arguments(oid) as arguments_def,
       pg_catalog.pg_get_function_result(oid) as result_def,
       prosrc as source_text
from pg_catalog.pg_proc
where pronamespace = ?::oid
  --  and pg_catalog.age(xmin) <= pg_catalog.age(:src_tx::varchar::xid)
  and not /* (prokind = 'a') */proisagg 
  and prolang not in (select lang from system_languages)
  and prosrc is not null
-- ] --------------------------------------------------
-- 2020-06-06 20:37:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207824] results received
-- 2020-06-06 20:37:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207824] finished - execution time: 16 ms, fetching time: 31 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207825] 
with U as (select usesysid from pg_catalog.pg_user where usename = current_user),
          T as (
                select oid as sequence_id,
                       relname as sequence_name,
                       pg_catalog.pg_get_userbyid(relowner) as "owner",
                       case when relowner = (select usesysid from U) then trim(both '()' from pg_catalog.pg_sequence_parameters(oid)::varchar)
                       else null::varchar
                       end as sequence_params,
                       
                       xmin as sequence_state_number
                       from pg_catalog.pg_class
                         where relnamespace = ?::oid
                         and relkind = 'S'
                         --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
                )
select sequence_id,
       sequence_name,
       pg_catalog.split_part(sequence_params, ',', 1)::bigint as next_value,
       pg_catalog.split_part(sequence_params, ',', 2)::bigint as min_value,
       pg_catalog.split_part(sequence_params, ',', 3)::bigint as max_value,
       pg_catalog.split_part(sequence_params, ',', 4)::bigint as inc_value,
       pg_catalog.lower(pg_catalog.split_part(sequence_params, ',', 5)) LIKE '%t%' as cycle_option,
       
       sequence_state_number,
       "owner"
from T
-- ] --------------------------------------------------
-- 2020-06-06 20:37:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207825] results received
-- 2020-06-06 20:37:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207825] finished - execution time: 1 ms, fetching time: 14 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207826] 
select T.oid as type_id,
       T.xmin as type_state_number,
       T.typname as type_name,
       T.typtype as type_sub_kind,
       T.typcategory as type_category,
       T.typrelid as class_id,
       T.typbasetype as base_type_id,
       case when T.typtype in ('c','e') then null
            else pg_catalog.format_type(T.typbasetype, T.typtypmod) end as type_def,
       T.typdefault as default_expression,
       T.typnotnull as mandatory,
       pg_catalog.pg_get_userbyid(T.typowner) as "owner"
from pg_catalog.pg_type T
         left outer join pg_catalog.pg_class C
             on T.typrelid = C.oid
where T.typnamespace = ?::oid
  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
  and (T.typtype in ('d','e') or C.relkind = 'c'::"char" or T.typtype = 'b' and (T.typelem = 0 OR T.typcategory <> 'A'))
order by 1
-- ] --------------------------------------------------
-- 2020-06-06 20:37:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207826] results received
-- 2020-06-06 20:37:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207826] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207827] 
select T.relkind as table_kind,
       T.relname as table_name,
       T.oid as table_id,
       T.xmin as table_state_number,
       /* false */T.relhasoids  as table_with_oids,
       T.relnamespace as tablespace_id,
       T.reloptions as options,
       (select pg_catalog.array_agg(inhparent)::varchar from (select inhparent::bigint from pg_catalog.pg_inherits where T.oid = inhrelid order by inhseqno) as bts) as ancestors,
       (select pg_catalog.array_agg(inhrelid)::varchar from (select inhrelid::bigint from pg_catalog.pg_inherits where T.oid = inhparent order by inhrelid) as its) as successors,
       /* T.relispartition */false  as is_partition,
       /* pg_catalog.pg_get_partkeydef(T.oid) */null  as partition_key,
       /* pg_catalog.pg_get_expr(T.relpartbound, T.oid) */null  as partition_expression,
       pg_catalog.pg_get_userbyid(T.relowner) as "owner"
from pg_catalog.pg_class T
where relnamespace = ?::oid
  and relkind in ('r', 'm', 'v', 'f', 'p')
  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
order by table_kind, table_id
-- ] --------------------------------------------------
-- 2020-06-06 20:37:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207827] results received
-- 2020-06-06 20:37:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207827] finished - execution time: 15 ms, fetching time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207828] 
select ft.ftrelid as table_id,
       srv.srvname as table_server,
       ft.ftoptions as table_options,
       pg_catalog.pg_get_userbyid(cls.relowner) as "owner"
from pg_catalog.pg_foreign_table ft
     left outer join pg_catalog.pg_foreign_server srv on ft.ftserver = srv.oid
     join pg_catalog.pg_class cls on ft.ftrelid = cls.oid
where cls.relnamespace = ?::oid
  --  and pg_catalog.age(ft.xmin) <= pg_catalog.age(:tx::varchar::xid)
order by table_id
-- ] --------------------------------------------------
-- 2020-06-06 20:37:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207828] results received
-- 2020-06-06 20:37:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207828] finished - execution time: 1 ms, fetching time: 14 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207829] 
with schema_procs as (select prorettype, proargtypes, proallargtypes
                      from pg_catalog.pg_proc
                      where pronamespace = ?::oid
                        /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */ ),
     schema_opers as (select oprleft, oprright, oprresult
                      from pg_catalog.pg_operator
                      where oprnamespace = ?::oid
                        /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */ ),
     schema_aggregates as (select A.aggtranstype , A.aggmtranstype 
                           from pg_catalog.pg_aggregate A
                           join pg_catalog.pg_proc P
                             on A.aggfnoid = P.oid
                           where P.pronamespace = ?::oid
                           /* and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(:tx::varchar::xid)) */),
     schema_arg_types as ( select prorettype as type_id
                           from schema_procs
                           union
                           select distinct unnest(proargtypes) as type_id
                           from schema_procs
                           union
                           select distinct unnest(proallargtypes) as type_id
                           from schema_procs
                           union
                           select oprleft as type_id
                           from schema_opers
                           where oprleft is not null
                           union
                           select oprright as type_id
                           from schema_opers
                           where oprright is not null
                           union
                           select oprresult as type_id
                           from schema_opers
                           where oprresult is not null
                           union
                           select aggtranstype::oid as type_id
                           from schema_aggregates
                           union
                           select aggmtranstype::oid as type_id
                           from schema_aggregates
                           
                           )
select type_id, pg_catalog.format_type(type_id, null) as type_spec
from schema_arg_types
where type_id <> 0
-- ] --------------------------------------------------
-- 2020-06-06 20:37:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207829] results received
-- 2020-06-06 20:37:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207829] finished - execution time: 32 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207830] 
with languages as (select oid as lang_oid, lanname as lang
                   from pg_catalog.pg_language),
     routines as (select proname as r_name,
                         prolang as lang_oid,
                         oid as r_id,
                         xmin as r_state_number,
                         proargnames as arg_names,
                         proargmodes as arg_modes,
                         proargtypes::int[] as in_arg_types,
                         proallargtypes::int[] as all_arg_types,
                         pg_catalog.pg_get_expr(proargdefaults, 0) as arg_defaults,
                         provariadic as arg_variadic_id,
                         prorettype as ret_type_id,
                         proretset as ret_set,
                         /* prokind */case when proiswindow then 'w'
                                                when proisagg then 'a'
                                                else 'f'
                                           end  as kind,
                         provolatile as volatile_kind,
                         proisstrict as is_strict,
                         prosecdef as is_security_definer,
                         proconfig as configuration_parameters,
                         procost as cost,
                         pg_catalog.pg_get_userbyid(proowner) as "owner",
                         prorows as rows ,
                         proleakproof as is_leakproof  /* ,
                         proparallel as concurrency_kind */
                  from pg_catalog.pg_proc
                  where pronamespace = ?::oid
                    and not /* (prokind = 'a') */proisagg 
                    /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */)
select *
from routines natural join languages
-- ] --------------------------------------------------
-- 2020-06-06 20:37:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207830] results received
-- 2020-06-06 20:37:25 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207830] finished - execution time: 15 ms, fetching time: 297 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207831] 
with procedures as (
  select P.oid as function_id,
         pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as function_name,
         P.prorettype as return_type
  from pg_catalog.pg_proc P
  join pg_catalog.pg_namespace N
    on P.pronamespace = N.oid
),
operators as (
  select O.oid as operator_id,
         pg_catalog.quote_ident(N.nspname) || '.' || O.oprname as operator_name
  from pg_catalog.pg_operator O
  join pg_catalog.pg_namespace N
    on O.oprnamespace = N.oid
)
select P.oid as aggregate_id,
       P.xmin as state_number,
       P.proname as aggregate_name,
       P.proargnames as arg_names,
       P.proargmodes as arg_modes,
       P.proargtypes::int[] as in_arg_types,
       P.proallargtypes::int[] as all_arg_types,
       A.aggtransfn::oid as transition_function_id,
       PT.function_name::text as transition_function_name,
       A.aggtranstype as transition_type,
       A.aggfinalfn::oid as final_function_id,
       case when A.aggfinalfn::oid = 0 then null else PF.function_name end as final_function_name,
       case when A.aggfinalfn::oid = 0 then 0 else PF.return_type end as final_return_type,
       A.agginitval as initial_value,
       A.aggsortop as sort_operator_id,
       case when A.aggsortop = 0 then null else O.operator_name end as sort_operator_name,
       pg_catalog.pg_get_userbyid(P.proowner) as "owner"
       ,
       A.aggfinalextra as final_extra,
       A.aggtransspace as state_size,
       A.aggmtransfn::oid as moving_transition_id,
       case when A.aggmtransfn::oid = 0 then null else FTP.function_name end as moving_transition_name,
       A.aggminvtransfn::oid as inverse_transition_id,
       case when A.aggminvtransfn::oid = 0 then null else ITP.function_name end as inverse_transition_name,
       A.aggmtranstype::oid as moving_state_type,
       A.aggmtransspace as moving_state_size,
       A.aggmfinalfn::oid as moving_final_id,
       case when A.aggmfinalfn::oid = 0 then null else FFP.function_name end as moving_final_name,
       A.aggmfinalextra as moving_final_extra,
       A.aggminitval as moving_initial_value,
       A.aggkind as aggregate_kind,
       A.aggnumdirectargs as direct_args
       
       /* ,
       A.aggcombinefn::oid as combine_function_id,
       case when A.aggcombinefn::oid = 0 then null else CP.function_name end as combine_function_name,
       A.aggserialfn::oid as serialization_function_id,
       case when A.aggserialfn::oid = 0 then null else SP.function_name end as serialization_function_name,
       A.aggdeserialfn::oid as deserialization_function_id,
       case when A.aggdeserialfn::oid = 0 then null else DP.function_name end as deserialization_function_name,
       P.proparallel as concurrency_kind
       */
from pg_catalog.pg_aggregate A
join pg_catalog.pg_proc P
  on A.aggfnoid = P.oid
join procedures PT
  on A.aggtransfn::oid = PT.function_id
left outer join procedures PF
  on A.aggfinalfn::oid = PF.function_id
left outer join operators O
  on A.aggsortop = O.operator_id
left outer join procedures FTP
  on A.aggmtransfn = FTP.function_id
left outer join procedures ITP
  on A.aggminvtransfn = ITP.function_id
left outer join procedures FFP
  on A.aggmfinalfn = FFP.function_id

/* left outer join procedures CP
  on A.aggcombinefn = CP.function_id
left outer join procedures SP
  on A.aggserialfn = SP.function_id
left outer join procedures DP
  on A.aggdeserialfn = DP.function_id
*/
where P.pronamespace = ?::oid
--  and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(:tx::varchar::xid))
order by P.oid
-- ] --------------------------------------------------
-- 2020-06-06 20:37:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207831] results received
-- 2020-06-06 20:37:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207831] finished - execution time: 16 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207832] 
select O.oid as op_id,
       O.xmin as state_number,
       oprname as op_name,
       oprkind as op_kind,
       oprleft as arg_left_type_id,
       oprright as arg_right_type_id,
       oprresult as arg_result_type_id,
       oprcode as func_main,
       pg_catalog.pg_get_userbyid(O.oprowner) as "owner"
from pg_catalog.pg_operator O
where oprnamespace = ?::oid
  --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207832] results received
-- 2020-06-06 20:37:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207832] finished - execution time: 31 ms, fetching time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207833] 
select oid as id,
       xmin as state_number,
       collname as name,
       collcollate as lc_collate,
       collctype as lc_ctype,
       pg_catalog.pg_get_userbyid(collowner) as "owner"
from pg_catalog.pg_collation
where collnamespace = ?::oid
  --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207833] results received
-- 2020-06-06 20:37:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207833] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207834] 
with T as ( select distinct T.oid as table_id, T.relname as table_name
            from pg_catalog.pg_class T,
                 pg_catalog.pg_attribute A
            where T.relnamespace = ?::oid
              and T.relkind in ('r', 'm', 'v', 'f', 'p')
              --  and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid))
              and A.attrelid = T.oid )
select T.table_id,
       C.attnum as column_position,
       C.attname as column_name,
       C.xmin as column_state_number,
       C.atttypmod as type_mod,
       C.attndims as dimensions_number,
       pg_catalog.format_type(C.atttypid, C.atttypmod) as type_spec,
       C.atttypid as type_id,
       C.attnotnull as mandatory,
       /* pg_catalog.pg_get_expr(D.adbin, 'pg_catalog.pg_attrdef'::regclass::oid) */D.adsrc  as column_default_expression,
       not C.attislocal as column_is_inherited,
       C.attfdwoptions as options,
       C.attisdropped as column_is_dropped,
       /* C.attidentity */null  as identity_kind
from T
  inner join pg_catalog.pg_attribute C on T.table_id = C.attrelid
  left outer join pg_catalog.pg_attrdef D on (C.attrelid, C.attnum) = (D.adrelid, D.adnum)
where attnum > 0
order by table_id, attnum
-- ] --------------------------------------------------
-- 2020-06-06 20:37:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207834] results received
-- 2020-06-06 20:37:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207834] finished - execution time: 63 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207835] 
with tab as ( select relnamespace as schema_id,
                     oid as table_id,
                     relkind as table_kind
              from pg_catalog.pg_class
              where relnamespace = ?::oid
                and relkind in ('r','m','v','p')),
    ind_head as ( select indrelid as table_id,
                         indexrelid as index_id,
                         indisunique as is_unique,
                         indisprimary as is_primary,
                         indkey as column_positions,
                         indclass as column_operators,
                         indoption as column_options,
                         pg_catalog.pg_get_expr(indpred, indrelid) as condition,
                         case when indexprs is not null
                             then pg_catalog.array_to_string(array(
                                      select case when indkey[k] = 0
                                             then chr(27) || pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
                                             else pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
                                             end
                                      from pg_catalog.generate_subscripts(indkey, 1) as k
                                      order by k),
                                  chr(28))
                             else null end as expressions
                  from pg_catalog.pg_index ),
    ind_stor as ( select cls.relnamespace as schema_id,
                         cls.oid as index_id,
                         cls.xmin as state_number,
                         cls.relname as index_name,
                         /* pg_catalog.pg_indexam_has_property(cls.relam, 'can_order') */am.amcanorder  as can_order
                  from pg_catalog.pg_class cls
                    /* */join pg_catalog.pg_am am on (cls.relam = am.oid)
                  where cls.relkind = 'i'
                    /* and pg_catalog.age(cls.xmin) <= pg_catalog.age(:tx::varchar::xid) */)
select table_id, table_kind,
       index_name, index_id, state_number,
       is_unique, is_primary,
       column_positions, column_operators, column_options,
       condition, expressions, can_order
from tab natural join ind_head natural join ind_stor
-- ] --------------------------------------------------
-- 2020-06-06 20:37:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207835] results received
-- 2020-06-06 20:37:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207835] finished - execution time: 31 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207836] 
with T as ( select oid as table_id,
                   relkind as table_kind,
                   xmin as table_state_id
            from pg_catalog.pg_class
            where relkind in ('r','v','f','p')
              and relnamespace = ?::oid ),
     C as ( select conrelid as table_id,
                   oid::bigint as con_id,
                   xmin as con_state_id,
                   conname as con_name,
                   contype as con_kind,
                   conkey as con_columns,
                   conindid as index_id,
                   confrelid as ref_table_id,
                   confkey as ref_columns,
                   condeferrable as is_deferrable,
                   condeferred as is_init_deferred,
                   confupdtype as on_update,
                   confdeltype as on_delete,
                   /* conbin */consrc 
            from pg_catalog.pg_constraint
            where contype in ('p','u','f','c')
              and connamespace = ?::oid )
select table_id,
       table_kind,
       con_id,
       con_state_id::varchar::bigint as con_state_id,
       con_name,
       con_kind,
       con_columns,
       index_id,
       ref_table_id,
       is_deferrable,
       is_init_deferred,
       on_update,
       on_delete,
       /* pg_catalog.pg_get_expr(conbin, table_id) */consrc  as con_expression,
       ref_columns
from T natural join C
--  where pg_catalog.age(table_state_id) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(con_state_id) <= pg_catalog.age(:tx::varchar::xid)
order by pg_catalog.strpos('pufc', con_kind)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207836] results received
-- 2020-06-06 20:37:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207836] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207837] 
select R.ev_class as table_id,
       R.oid as rule_id,
       R.xmin as rule_state_number,
       R.rulename as rule_name,
       pg_catalog.translate(ev_type,'1234','SUID') as rule_event_code,
       R.ev_enabled as rule_fire_mode,
       R.is_instead as rule_is_instead
from pg_catalog.pg_rewrite R
where R.ev_class in (select oid
                     from pg_catalog.pg_class
                     where relnamespace = ?::oid)
  --  and pg_catalog.age(R.xmin) <= pg_catalog.age(:tx::varchar::xid)
  and R.rulename != '_RETURN'::name
order by R.ev_class::bigint, ev_type
-- ] --------------------------------------------------
-- 2020-06-06 20:37:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207837] results received
-- 2020-06-06 20:37:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207837] finished - execution time: 16 ms, fetching time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207838] 
select T.tgrelid as table_id,
       T.oid as trigger_id,
       T.xmin as trigger_state_number,
       T.tgname as trigger_name,
       T.tgfoid as function_id,
       T.tgtype & 31 as bits,
       T.tgdeferrable as is_deferrable,
       T.tginitdeferred as is_init_deferred,
       T.tgenabled as trigger_fire_mode
from pg_catalog.pg_trigger T
where T.tgrelid in (select oid
                    from pg_catalog.pg_class
                    where relnamespace = ?::oid)
  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
  and not T.tgisinternal
-- ] --------------------------------------------------
-- 2020-06-06 20:37:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207838] results received
-- 2020-06-06 20:37:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207838] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207839] 
select D.objoid id, C.relkind as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select T.oid id, 'T' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, pg_catalog.translate(C.contype, 'pufc', 'kkxz') as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 't' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'R' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'F' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'O' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'C' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)

-- ] --------------------------------------------------
-- 2020-06-06 20:37:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207839] results received
-- 2020-06-06 20:37:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207839] finished - execution time: 31 ms, fetching time: 47 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:26 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207840] 
select distinct
       T.relkind as view_kind,
       T.oid as view_id,
       pg_catalog.pg_get_viewdef(T.oid) as source_text
from pg_catalog.pg_class T
  join pg_catalog.pg_namespace N on T.relnamespace = N.oid
  left outer join pg_catalog.pg_attribute A on (A.attrelid = T.oid)
where N.oid = ?::oid
  and T.relkind in ('m','v')
  --  and (pg_catalog.age(T.xmin) <= pg_catalog.age(:src_tx::varchar::xid) or pg_catalog.age(A.xmin) <= pg_catalog.age(:src_tx::varchar::xid))
-- ] --------------------------------------------------
-- 2020-06-06 20:37:27 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207840] results received
-- 2020-06-06 20:37:27 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207840] finished - execution time: 172 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207841] 
with A as ( select oid as table_id, pg_catalog.upper(relkind) as table_kind
            from pg_catalog.pg_class
            where relnamespace = ?::oid
              and relkind in ('r', 'm', 'v', 'f', 'p') )
select table_kind,
       table_id,
       R.oid as rule_id,
       pg_catalog.pg_get_ruledef(R.oid) as source_text
from A join pg_catalog.pg_rewrite R
        on A.table_id = R.ev_class
where R.rulename != '_RETURN'::name
  --  and pg_catalog.age(R.xmin) <= pg_catalog.age(:src_tx::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207841] results received
-- 2020-06-06 20:37:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207841] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207842] 
with system_languages as ( select oid as lang
                           from pg_catalog.pg_language
                           where lanname in ('c','internal') )
select oid as id,
       pg_catalog.pg_get_function_arguments(oid) as arguments_def,
       pg_catalog.pg_get_function_result(oid) as result_def,
       prosrc as source_text
from pg_catalog.pg_proc
where pronamespace = ?::oid
  --  and pg_catalog.age(xmin) <= pg_catalog.age(:src_tx::varchar::xid)
  and not /* (prokind = 'a') */proisagg 
  and prolang not in (select lang from system_languages)
  and prosrc is not null
-- ] --------------------------------------------------
-- 2020-06-06 20:37:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207842] results received
-- 2020-06-06 20:37:28 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207842] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:30 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207843] 
with U as (select usesysid from pg_catalog.pg_user where usename = current_user),
          T as (
                select oid as sequence_id,
                       relname as sequence_name,
                       pg_catalog.pg_get_userbyid(relowner) as "owner",
                       case when relowner = (select usesysid from U) then trim(both '()' from pg_catalog.pg_sequence_parameters(oid)::varchar)
                       else null::varchar
                       end as sequence_params,
                       
                       xmin as sequence_state_number
                       from pg_catalog.pg_class
                         where relnamespace = ?::oid
                         and relkind = 'S'
                         --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
                )
select sequence_id,
       sequence_name,
       pg_catalog.split_part(sequence_params, ',', 1)::bigint as next_value,
       pg_catalog.split_part(sequence_params, ',', 2)::bigint as min_value,
       pg_catalog.split_part(sequence_params, ',', 3)::bigint as max_value,
       pg_catalog.split_part(sequence_params, ',', 4)::bigint as inc_value,
       pg_catalog.lower(pg_catalog.split_part(sequence_params, ',', 5)) LIKE '%t%' as cycle_option,
       
       sequence_state_number,
       "owner"
from T
-- ] --------------------------------------------------
-- 2020-06-06 20:37:31 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207843] results received
-- 2020-06-06 20:37:31 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207843] finished - execution time: 1 s 16 ms, fetching time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:31 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207844] 
select T.oid as type_id,
       T.xmin as type_state_number,
       T.typname as type_name,
       T.typtype as type_sub_kind,
       T.typcategory as type_category,
       T.typrelid as class_id,
       T.typbasetype as base_type_id,
       case when T.typtype in ('c','e') then null
            else pg_catalog.format_type(T.typbasetype, T.typtypmod) end as type_def,
       T.typdefault as default_expression,
       T.typnotnull as mandatory,
       pg_catalog.pg_get_userbyid(T.typowner) as "owner"
from pg_catalog.pg_type T
         left outer join pg_catalog.pg_class C
             on T.typrelid = C.oid
where T.typnamespace = ?::oid
  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
  and (T.typtype in ('d','e') or C.relkind = 'c'::"char" or T.typtype = 'b' and (T.typelem = 0 OR T.typcategory <> 'A'))
order by 1
-- ] --------------------------------------------------
-- 2020-06-06 20:37:31 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207844] results received
-- 2020-06-06 20:37:31 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207844] finished - execution time: 63 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:31 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207845] 
select T.relkind as table_kind,
       T.relname as table_name,
       T.oid as table_id,
       T.xmin as table_state_number,
       /* false */T.relhasoids  as table_with_oids,
       T.relnamespace as tablespace_id,
       T.reloptions as options,
       (select pg_catalog.array_agg(inhparent)::varchar from (select inhparent::bigint from pg_catalog.pg_inherits where T.oid = inhrelid order by inhseqno) as bts) as ancestors,
       (select pg_catalog.array_agg(inhrelid)::varchar from (select inhrelid::bigint from pg_catalog.pg_inherits where T.oid = inhparent order by inhrelid) as its) as successors,
       /* T.relispartition */false  as is_partition,
       /* pg_catalog.pg_get_partkeydef(T.oid) */null  as partition_key,
       /* pg_catalog.pg_get_expr(T.relpartbound, T.oid) */null  as partition_expression,
       pg_catalog.pg_get_userbyid(T.relowner) as "owner"
from pg_catalog.pg_class T
where relnamespace = ?::oid
  and relkind in ('r', 'm', 'v', 'f', 'p')
  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
order by table_kind, table_id
-- ] --------------------------------------------------
-- 2020-06-06 20:37:31 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207845] results received
-- 2020-06-06 20:37:31 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207845] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:31 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207846] 
select ft.ftrelid as table_id,
       srv.srvname as table_server,
       ft.ftoptions as table_options,
       pg_catalog.pg_get_userbyid(cls.relowner) as "owner"
from pg_catalog.pg_foreign_table ft
     left outer join pg_catalog.pg_foreign_server srv on ft.ftserver = srv.oid
     join pg_catalog.pg_class cls on ft.ftrelid = cls.oid
where cls.relnamespace = ?::oid
  --  and pg_catalog.age(ft.xmin) <= pg_catalog.age(:tx::varchar::xid)
order by table_id
-- ] --------------------------------------------------
-- 2020-06-06 20:37:31 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207846] results received
-- 2020-06-06 20:37:31 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207846] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:31 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207847] 
with schema_procs as (select prorettype, proargtypes, proallargtypes
                      from pg_catalog.pg_proc
                      where pronamespace = ?::oid
                        /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */ ),
     schema_opers as (select oprleft, oprright, oprresult
                      from pg_catalog.pg_operator
                      where oprnamespace = ?::oid
                        /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */ ),
     schema_aggregates as (select A.aggtranstype , A.aggmtranstype 
                           from pg_catalog.pg_aggregate A
                           join pg_catalog.pg_proc P
                             on A.aggfnoid = P.oid
                           where P.pronamespace = ?::oid
                           /* and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(:tx::varchar::xid)) */),
     schema_arg_types as ( select prorettype as type_id
                           from schema_procs
                           union
                           select distinct unnest(proargtypes) as type_id
                           from schema_procs
                           union
                           select distinct unnest(proallargtypes) as type_id
                           from schema_procs
                           union
                           select oprleft as type_id
                           from schema_opers
                           where oprleft is not null
                           union
                           select oprright as type_id
                           from schema_opers
                           where oprright is not null
                           union
                           select oprresult as type_id
                           from schema_opers
                           where oprresult is not null
                           union
                           select aggtranstype::oid as type_id
                           from schema_aggregates
                           union
                           select aggmtranstype::oid as type_id
                           from schema_aggregates
                           
                           )
select type_id, pg_catalog.format_type(type_id, null) as type_spec
from schema_arg_types
where type_id <> 0
-- ] --------------------------------------------------
-- 2020-06-06 20:37:31 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207847] results received
-- 2020-06-06 20:37:31 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207847] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:31 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207848] 
with languages as (select oid as lang_oid, lanname as lang
                   from pg_catalog.pg_language),
     routines as (select proname as r_name,
                         prolang as lang_oid,
                         oid as r_id,
                         xmin as r_state_number,
                         proargnames as arg_names,
                         proargmodes as arg_modes,
                         proargtypes::int[] as in_arg_types,
                         proallargtypes::int[] as all_arg_types,
                         pg_catalog.pg_get_expr(proargdefaults, 0) as arg_defaults,
                         provariadic as arg_variadic_id,
                         prorettype as ret_type_id,
                         proretset as ret_set,
                         /* prokind */case when proiswindow then 'w'
                                                when proisagg then 'a'
                                                else 'f'
                                           end  as kind,
                         provolatile as volatile_kind,
                         proisstrict as is_strict,
                         prosecdef as is_security_definer,
                         proconfig as configuration_parameters,
                         procost as cost,
                         pg_catalog.pg_get_userbyid(proowner) as "owner",
                         prorows as rows ,
                         proleakproof as is_leakproof  /* ,
                         proparallel as concurrency_kind */
                  from pg_catalog.pg_proc
                  where pronamespace = ?::oid
                    and not /* (prokind = 'a') */proisagg 
                    /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */)
select *
from routines natural join languages
-- ] --------------------------------------------------
-- 2020-06-06 20:37:31 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207848] results received
-- 2020-06-06 20:37:31 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207848] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:31 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207849] 
with procedures as (
  select P.oid as function_id,
         pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as function_name,
         P.prorettype as return_type
  from pg_catalog.pg_proc P
  join pg_catalog.pg_namespace N
    on P.pronamespace = N.oid
),
operators as (
  select O.oid as operator_id,
         pg_catalog.quote_ident(N.nspname) || '.' || O.oprname as operator_name
  from pg_catalog.pg_operator O
  join pg_catalog.pg_namespace N
    on O.oprnamespace = N.oid
)
select P.oid as aggregate_id,
       P.xmin as state_number,
       P.proname as aggregate_name,
       P.proargnames as arg_names,
       P.proargmodes as arg_modes,
       P.proargtypes::int[] as in_arg_types,
       P.proallargtypes::int[] as all_arg_types,
       A.aggtransfn::oid as transition_function_id,
       PT.function_name::text as transition_function_name,
       A.aggtranstype as transition_type,
       A.aggfinalfn::oid as final_function_id,
       case when A.aggfinalfn::oid = 0 then null else PF.function_name end as final_function_name,
       case when A.aggfinalfn::oid = 0 then 0 else PF.return_type end as final_return_type,
       A.agginitval as initial_value,
       A.aggsortop as sort_operator_id,
       case when A.aggsortop = 0 then null else O.operator_name end as sort_operator_name,
       pg_catalog.pg_get_userbyid(P.proowner) as "owner"
       ,
       A.aggfinalextra as final_extra,
       A.aggtransspace as state_size,
       A.aggmtransfn::oid as moving_transition_id,
       case when A.aggmtransfn::oid = 0 then null else FTP.function_name end as moving_transition_name,
       A.aggminvtransfn::oid as inverse_transition_id,
       case when A.aggminvtransfn::oid = 0 then null else ITP.function_name end as inverse_transition_name,
       A.aggmtranstype::oid as moving_state_type,
       A.aggmtransspace as moving_state_size,
       A.aggmfinalfn::oid as moving_final_id,
       case when A.aggmfinalfn::oid = 0 then null else FFP.function_name end as moving_final_name,
       A.aggmfinalextra as moving_final_extra,
       A.aggminitval as moving_initial_value,
       A.aggkind as aggregate_kind,
       A.aggnumdirectargs as direct_args
       
       /* ,
       A.aggcombinefn::oid as combine_function_id,
       case when A.aggcombinefn::oid = 0 then null else CP.function_name end as combine_function_name,
       A.aggserialfn::oid as serialization_function_id,
       case when A.aggserialfn::oid = 0 then null else SP.function_name end as serialization_function_name,
       A.aggdeserialfn::oid as deserialization_function_id,
       case when A.aggdeserialfn::oid = 0 then null else DP.function_name end as deserialization_function_name,
       P.proparallel as concurrency_kind
       */
from pg_catalog.pg_aggregate A
join pg_catalog.pg_proc P
  on A.aggfnoid = P.oid
join procedures PT
  on A.aggtransfn::oid = PT.function_id
left outer join procedures PF
  on A.aggfinalfn::oid = PF.function_id
left outer join operators O
  on A.aggsortop = O.operator_id
left outer join procedures FTP
  on A.aggmtransfn = FTP.function_id
left outer join procedures ITP
  on A.aggminvtransfn = ITP.function_id
left outer join procedures FFP
  on A.aggmfinalfn = FFP.function_id

/* left outer join procedures CP
  on A.aggcombinefn = CP.function_id
left outer join procedures SP
  on A.aggserialfn = SP.function_id
left outer join procedures DP
  on A.aggdeserialfn = DP.function_id
*/
where P.pronamespace = ?::oid
--  and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(:tx::varchar::xid))
order by P.oid
-- ] --------------------------------------------------
-- 2020-06-06 20:37:31 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207849] results received
-- 2020-06-06 20:37:31 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207849] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:31 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207850] 
select O.oid as op_id,
       O.xmin as state_number,
       oprname as op_name,
       oprkind as op_kind,
       oprleft as arg_left_type_id,
       oprright as arg_right_type_id,
       oprresult as arg_result_type_id,
       oprcode as func_main,
       pg_catalog.pg_get_userbyid(O.oprowner) as "owner"
from pg_catalog.pg_operator O
where oprnamespace = ?::oid
  --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:31 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207850] results received
-- 2020-06-06 20:37:31 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207850] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:31 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207851] 
select oid as id,
       xmin as state_number,
       collname as name,
       collcollate as lc_collate,
       collctype as lc_ctype,
       pg_catalog.pg_get_userbyid(collowner) as "owner"
from pg_catalog.pg_collation
where collnamespace = ?::oid
  --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:31 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207851] results received
-- 2020-06-06 20:37:31 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207851] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:31 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207852] 
with T as ( select distinct T.oid as table_id, T.relname as table_name
            from pg_catalog.pg_class T,
                 pg_catalog.pg_attribute A
            where T.relnamespace = ?::oid
              and T.relkind in ('r', 'm', 'v', 'f', 'p')
              --  and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid))
              and A.attrelid = T.oid )
select T.table_id,
       C.attnum as column_position,
       C.attname as column_name,
       C.xmin as column_state_number,
       C.atttypmod as type_mod,
       C.attndims as dimensions_number,
       pg_catalog.format_type(C.atttypid, C.atttypmod) as type_spec,
       C.atttypid as type_id,
       C.attnotnull as mandatory,
       /* pg_catalog.pg_get_expr(D.adbin, 'pg_catalog.pg_attrdef'::regclass::oid) */D.adsrc  as column_default_expression,
       not C.attislocal as column_is_inherited,
       C.attfdwoptions as options,
       C.attisdropped as column_is_dropped,
       /* C.attidentity */null  as identity_kind
from T
  inner join pg_catalog.pg_attribute C on T.table_id = C.attrelid
  left outer join pg_catalog.pg_attrdef D on (C.attrelid, C.attnum) = (D.adrelid, D.adnum)
where attnum > 0
order by table_id, attnum
-- ] --------------------------------------------------
-- 2020-06-06 20:37:31 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207852] results received
-- 2020-06-06 20:37:31 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207852] finished - execution time: 15 ms, fetching time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:31 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207853] 
with tab as ( select relnamespace as schema_id,
                     oid as table_id,
                     relkind as table_kind
              from pg_catalog.pg_class
              where relnamespace = ?::oid
                and relkind in ('r','m','v','p')),
    ind_head as ( select indrelid as table_id,
                         indexrelid as index_id,
                         indisunique as is_unique,
                         indisprimary as is_primary,
                         indkey as column_positions,
                         indclass as column_operators,
                         indoption as column_options,
                         pg_catalog.pg_get_expr(indpred, indrelid) as condition,
                         case when indexprs is not null
                             then pg_catalog.array_to_string(array(
                                      select case when indkey[k] = 0
                                             then chr(27) || pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
                                             else pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
                                             end
                                      from pg_catalog.generate_subscripts(indkey, 1) as k
                                      order by k),
                                  chr(28))
                             else null end as expressions
                  from pg_catalog.pg_index ),
    ind_stor as ( select cls.relnamespace as schema_id,
                         cls.oid as index_id,
                         cls.xmin as state_number,
                         cls.relname as index_name,
                         /* pg_catalog.pg_indexam_has_property(cls.relam, 'can_order') */am.amcanorder  as can_order
                  from pg_catalog.pg_class cls
                    /* */join pg_catalog.pg_am am on (cls.relam = am.oid)
                  where cls.relkind = 'i'
                    /* and pg_catalog.age(cls.xmin) <= pg_catalog.age(:tx::varchar::xid) */)
select table_id, table_kind,
       index_name, index_id, state_number,
       is_unique, is_primary,
       column_positions, column_operators, column_options,
       condition, expressions, can_order
from tab natural join ind_head natural join ind_stor
-- ] --------------------------------------------------
-- 2020-06-06 20:37:31 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207853] results received
-- 2020-06-06 20:37:31 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207853] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:31 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207854] 
with T as ( select oid as table_id,
                   relkind as table_kind,
                   xmin as table_state_id
            from pg_catalog.pg_class
            where relkind in ('r','v','f','p')
              and relnamespace = ?::oid ),
     C as ( select conrelid as table_id,
                   oid::bigint as con_id,
                   xmin as con_state_id,
                   conname as con_name,
                   contype as con_kind,
                   conkey as con_columns,
                   conindid as index_id,
                   confrelid as ref_table_id,
                   confkey as ref_columns,
                   condeferrable as is_deferrable,
                   condeferred as is_init_deferred,
                   confupdtype as on_update,
                   confdeltype as on_delete,
                   /* conbin */consrc 
            from pg_catalog.pg_constraint
            where contype in ('p','u','f','c')
              and connamespace = ?::oid )
select table_id,
       table_kind,
       con_id,
       con_state_id::varchar::bigint as con_state_id,
       con_name,
       con_kind,
       con_columns,
       index_id,
       ref_table_id,
       is_deferrable,
       is_init_deferred,
       on_update,
       on_delete,
       /* pg_catalog.pg_get_expr(conbin, table_id) */consrc  as con_expression,
       ref_columns
from T natural join C
--  where pg_catalog.age(table_state_id) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(con_state_id) <= pg_catalog.age(:tx::varchar::xid)
order by pg_catalog.strpos('pufc', con_kind)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:31 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207854] results received
-- 2020-06-06 20:37:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207854] finished - execution time: 1 ms, fetching time: 30 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207855] 
select R.ev_class as table_id,
       R.oid as rule_id,
       R.xmin as rule_state_number,
       R.rulename as rule_name,
       pg_catalog.translate(ev_type,'1234','SUID') as rule_event_code,
       R.ev_enabled as rule_fire_mode,
       R.is_instead as rule_is_instead
from pg_catalog.pg_rewrite R
where R.ev_class in (select oid
                     from pg_catalog.pg_class
                     where relnamespace = ?::oid)
  --  and pg_catalog.age(R.xmin) <= pg_catalog.age(:tx::varchar::xid)
  and R.rulename != '_RETURN'::name
order by R.ev_class::bigint, ev_type
-- ] --------------------------------------------------
-- 2020-06-06 20:37:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207855] results received
-- 2020-06-06 20:37:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207855] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207856] 
select T.tgrelid as table_id,
       T.oid as trigger_id,
       T.xmin as trigger_state_number,
       T.tgname as trigger_name,
       T.tgfoid as function_id,
       T.tgtype & 31 as bits,
       T.tgdeferrable as is_deferrable,
       T.tginitdeferred as is_init_deferred,
       T.tgenabled as trigger_fire_mode
from pg_catalog.pg_trigger T
where T.tgrelid in (select oid
                    from pg_catalog.pg_class
                    where relnamespace = ?::oid)
  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
  and not T.tgisinternal
-- ] --------------------------------------------------
-- 2020-06-06 20:37:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207856] results received
-- 2020-06-06 20:37:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207856] finished - execution time: 1 ms, fetching time: 14 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207857] 
select D.objoid id, C.relkind as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select T.oid id, 'T' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, pg_catalog.translate(C.contype, 'pufc', 'kkxz') as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 't' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'R' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'F' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'O' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'C' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)

-- ] --------------------------------------------------
-- 2020-06-06 20:37:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207857] results received
-- 2020-06-06 20:37:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207857] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207858] 
select distinct
       T.relkind as view_kind,
       T.oid as view_id,
       pg_catalog.pg_get_viewdef(T.oid) as source_text
from pg_catalog.pg_class T
  join pg_catalog.pg_namespace N on T.relnamespace = N.oid
  left outer join pg_catalog.pg_attribute A on (A.attrelid = T.oid)
where N.oid = ?::oid
  and T.relkind in ('m','v')
  --  and (pg_catalog.age(T.xmin) <= pg_catalog.age(:src_tx::varchar::xid) or pg_catalog.age(A.xmin) <= pg_catalog.age(:src_tx::varchar::xid))
-- ] --------------------------------------------------
-- 2020-06-06 20:37:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207858] results received
-- 2020-06-06 20:37:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207858] finished - execution time: 1 ms, fetching time: 46 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207859] 
with A as ( select oid as table_id, pg_catalog.upper(relkind) as table_kind
            from pg_catalog.pg_class
            where relnamespace = ?::oid
              and relkind in ('r', 'm', 'v', 'f', 'p') )
select table_kind,
       table_id,
       R.oid as rule_id,
       pg_catalog.pg_get_ruledef(R.oid) as source_text
from A join pg_catalog.pg_rewrite R
        on A.table_id = R.ev_class
where R.rulename != '_RETURN'::name
  --  and pg_catalog.age(R.xmin) <= pg_catalog.age(:src_tx::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207859] results received
-- 2020-06-06 20:37:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207859] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207860] 
with system_languages as ( select oid as lang
                           from pg_catalog.pg_language
                           where lanname in ('c','internal') )
select oid as id,
       pg_catalog.pg_get_function_arguments(oid) as arguments_def,
       pg_catalog.pg_get_function_result(oid) as result_def,
       prosrc as source_text
from pg_catalog.pg_proc
where pronamespace = ?::oid
  --  and pg_catalog.age(xmin) <= pg_catalog.age(:src_tx::varchar::xid)
  and not /* (prokind = 'a') */proisagg 
  and prolang not in (select lang from system_languages)
  and prosrc is not null
-- ] --------------------------------------------------
-- 2020-06-06 20:37:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207860] results received
-- 2020-06-06 20:37:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207860] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207861] 
select distinct connamespace as schema_id
from pg_catalog.pg_constraint F,
     pg_catalog.pg_class O
where F.contype = 'f'
  and F.confrelid = O.oid
  and O.relnamespace in (?)
-- ] --------------------------------------------------
-- 2020-06-06 20:37:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207861] results received
-- 2020-06-06 20:37:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207861] finished - execution time: 1 ms, fetching time: 14 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:37:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207862] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-06-06 20:37:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207862] results received
-- 2020-06-06 20:37:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010246] [statement id: 1734207862] finished - execution time: 16 ms, total result sets count: 1
-- 2020-06-06 20:37:32 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 1314010246] disconnected
-- 2020-06-06 20:38:05 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 1314010247] connected
-- [ --------------------------------------------------
-- 2020-06-06 20:38:05 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010247] [statement id: 1734207863] 
select current_database() as a, current_schemas(false) as b
-- ] --------------------------------------------------
-- 2020-06-06 20:38:05 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010247] [statement id: 1734207863] results received
-- 2020-06-06 20:38:05 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010247] [statement id: 1734207863] finished - execution time: 31 ms, fetching time: 62 ms, total result sets count: 1
-- 2020-06-06 20:38:05 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 1314010247] disconnected
-- 2020-06-06 20:38:06 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 1314010248] connected
-- [ --------------------------------------------------
-- 2020-06-06 20:38:06 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010248] [statement id: 1734207864] 
select current_database() as a, current_schemas(false) as b
-- ] --------------------------------------------------
-- 2020-06-06 20:38:06 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010248] [statement id: 1734207864] results received
-- 2020-06-06 20:38:06 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010248] [statement id: 1734207864] finished - execution time: 1 ms, fetching time: 46 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:06 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010248] [statement id: 1734207865] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-06-06 20:38:06 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010248] [statement id: 1734207865] results received
-- 2020-06-06 20:38:06 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010248] [statement id: 1734207865] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:06 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010248] [statement id: 1734207866] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:38:06 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010248] [statement id: 1734207866] results received
-- 2020-06-06 20:38:06 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010248] [statement id: 1734207866] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:06 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010248] [statement id: 1734207867] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:38:06 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010248] [statement id: 1734207867] results received
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010248] [statement id: 1734207867] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010248] [statement id: 1734207868] 
select R.oid::bigint as role_id, rolname as role_name,
  rolsuper is_super, rolinherit is_inherit,
  rolcreaterole can_createrole, rolcreatedb can_createdb,
  rolcanlogin can_login, rolreplication /* false */ is_replication,
  rolconnlimit conn_limit, rolvaliduntil valid_until,
  /* rolbypassrls */false  bypass_rls, rolconfig config,
  D.description
from pg_catalog.pg_roles R
  left join pg_catalog.pg_shdescription D on D.objoid = R.oid
-- ] --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010248] [statement id: 1734207868] results received
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010248] [statement id: 1734207868] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010248] [statement id: 1734207869] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010248] [statement id: 1734207869] results received
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010248] [statement id: 1734207869] finished - execution time: 1 ms, total result sets count: 1
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 1314010248] disconnected
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 1314010249] connected
-- [ --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207870] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207870] results received
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207870] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207871] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207871] results received
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207871] finished - execution time: 1 ms, fetching time: 14 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207872] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207872] results received
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207872] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207873] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207873] results received
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207873] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207874] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207874] results received
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207874] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207875] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207875] results received
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207875] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207876] 
select usesuper
from pg_user
where usename = current_user
-- ] --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207876] results received
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207876] finished - execution time: 16 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207877] 
select distinct oid
from pg_catalog.pg_am
union
select distinct oid
from pg_catalog.pg_foreign_data_wrapper
union
select distinct oid
from pg_catalog.pg_foreign_server
union
select distinct oid
from pg_catalog.pg_extension

union
select distinct oid
from pg_catalog.pg_user_mapping

-- ] --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207877] results received
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207877] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207878] 
select D.objoid id
from pg_catalog.pg_description D
where D.classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
-- ] --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207878] results received
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207878] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207879] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207879] results received
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207879] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207880] 
select A.oid as access_method_id,
       A.xmin as state_number,
       A.amname as access_method_name
       /* ,
       A.amhandler::oid as handler_id,
       pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as handler_name,
       A.amtype as access_method_type
       */
from pg_am A
  /* join pg_proc P on A.amhandler::oid = P.oid
  join pg_namespace N on P.pronamespace = N.oid
  */
where pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207880] results received
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207880] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207881] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207881] results received
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207881] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207882] 
select fdw.oid as id,
       fdw.xmin as state_number,
       fdw.fdwname as name,
       pr.proname as handler,
       nspc.nspname as handler_schema,
       pr2.proname as validator,
       nspc2.nspname as validator_schema,
       fdw.fdwoptions as options,
       pg_catalog.pg_get_userbyid(fdw.fdwowner) as "owner"
from pg_catalog.pg_foreign_data_wrapper fdw
     left outer join pg_catalog.pg_proc pr on fdw.fdwhandler = pr.oid
     left outer join pg_catalog.pg_namespace nspc on pr.pronamespace = nspc.oid
     left outer join pg_catalog.pg_proc pr2 on fdw.fdwvalidator = pr2.oid
     left outer join pg_catalog.pg_namespace nspc2 on pr2.pronamespace = nspc2.oid
  where pg_catalog.age(fdw.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207882] results received
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207882] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207883] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207883] results received
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207883] finished - execution time: 1 ms, fetching time: 14 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207884] 
select srv.oid as id,
       srv.srvfdw as fdw_id,
       srv.xmin as state_number,
       srv.srvname as name,
       srv.srvtype as type,
       srv.srvversion as version,
       srv.srvoptions as options,
       pg_catalog.pg_get_userbyid(srv.srvowner) as "owner"
from pg_catalog.pg_foreign_server srv
  where pg_catalog.age(srv.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207884] results received
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207884] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207885] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207885] results received
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207885] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207886] 
select pg_extension.oid as id,
       pg_extension.xmin as state_number,
       extname as name,
       extversion as version,
       extnamespace as schema_id,
       nspname as schema_name,
       array(select target
             from pg_extension_update_paths(extname)
             where source = extversion and path is not null) as available_updates
from pg_catalog.pg_extension
  join pg_namespace on pg_extension.extnamespace = pg_namespace.oid
where pg_catalog.age(pg_extension.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207886] results received
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207886] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207887] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207887] results received
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207887] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207888] 
select D.objoid id, case
    when 'pg_catalog.pg_am'::regclass = classoid then 'A'
    when 'pg_catalog.pg_foreign_data_wrapper'::regclass = classoid then 'W'
    when 'pg_catalog.pg_foreign_server'::regclass = classoid then 'S'
    when 'pg_catalog.pg_extension'::regclass = classoid then 'E'
    
  end as kind,
  D.objsubid sub_id, D.description
from pg_catalog.pg_description D
where classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207888] results received
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207888] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207889] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207889] results received
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207889] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207890] 
select 'sequence' as dependent_kind,
       'table' as owner_kind,
       D.objid as dependent_id,
       D.refobjid as owner_id,
       D.refobjsubid as owner_subobject_id
from pg_depend D
  join pg_class C_SEQ on D.objid = C_SEQ.oid
  join pg_class C_TAB on D.refobjid = C_TAB.oid
where C_SEQ.relkind = 'S'
  and C_TAB.relkind = 'r'
  and D.refobjsubid <> 0
  and (D.deptype = 'a' or D.deptype = 'i')
-- ] --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207890] results received
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207890] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207891] 
with saved_age as (select greatest(pg_catalog.age(?::varchar::xid), pg_catalog.age(?::varchar::xid)) as "value")
select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
(
  select X.last_tx as last_tx
  from (
    (
    select xmin as last_tx
      from pg_catalog.pg_type
      where typnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_class
      where relnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_proc
      where pronamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_operator
      where oprnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select A.xmin as last_tx
      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
      where K.relnamespace = ?::oid
      order by pg_catalog.age(A.xmin)
      limit 1
    )
    union all
    (
    select E.xmin as last_tx
      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
      where T.typnamespace = ?::oid
      order by pg_catalog.age(E.xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_constraint
      where connamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select CO.xmin as last_tx
      from pg_catalog.pg_collation CO
      where CO.collnamespace = ?::oid
      order by pg_catalog.age(CO.xmin)
      limit 1
    )
    union all
    
    (
    select IX.xmin as last_tx
      from pg_catalog.pg_index IX,
           pg_catalog.pg_class IC
      where IC.oid = IX.indrelid
        and IC.relnamespace = ?::oid
        order by pg_catalog.age(IX.xmin)
        limit 1
    )
    union all
    (
    select RU.xmin as last_tx
      from pg_catalog.pg_rewrite RU,
           pg_catalog.pg_class RC
      where RC.oid = RU.ev_class
        and RC.relnamespace = ?::oid
        order by pg_catalog.age(RU.xmin)
        limit 1
    )
    union all
    (
    select TG.xmin as last_tx
      from pg_catalog.pg_trigger TG,
           pg_catalog.pg_class TC
      where TC.oid = TG.tgrelid
        and TC.relnamespace = ?::oid
        order by pg_catalog.age(TG.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_class C on C.oid = D.objoid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_constraint C on C.oid = D.objoid
      where C.connamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_trigger T on T.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = T.tgrelid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_rewrite R on R.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = R.ev_class
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_proc P on P.oid = D.objoid
      where P.pronamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_type T on T.oid = D.objoid
      where T.typnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_operator O on O.oid = D.objoid
      where O.oprnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_collation C on C.oid = D.objoid
      where C.collnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    
  ) X
  order by pg_catalog.age(X.last_tx)
  limit 1
) C, saved_age SA
-- ] --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207891] results received
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207891] finished - execution time: 31 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207892] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207892] results received
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207892] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207893] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207893] results received
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207893] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207894] 
select distinct oid
from pg_catalog.pg_type
where typnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_class
where relnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_proc
where pronamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_operator
where oprnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_constraint
where connamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_collation
where collnamespace = ?::oid
union

select distinct IX.indexrelid
from pg_catalog.pg_index IX,
     pg_catalog.pg_class IC
where IC.oid = IX.indrelid
  and IC.relnamespace = ?::oid
union
select distinct RU.oid
from pg_catalog.pg_rewrite RU,
     pg_catalog.pg_class RC
where RC.oid = RU.ev_class
  and RC.relnamespace = ?::oid
  and not RU.rulename = '_RETURN'
union
select distinct TG.oid
from pg_catalog.pg_trigger TG,
     pg_catalog.pg_class TC
where TC.oid = TG.tgrelid
  and TC.relnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207894] results received
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207894] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207895] 
select D.objoid id, pg_catalog.array_agg(D.objsubid) sub_ids
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
group by D.objoid
union all
select T.oid id, pg_catalog.array_agg(D.objsubid)
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
group by T.oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207895] results received
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207895] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207896] 
with saved_age as (select greatest(pg_catalog.age(?::varchar::xid), pg_catalog.age(?::varchar::xid)) as "value")
select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
(
  select X.last_tx as last_tx
  from (
    (
    select xmin as last_tx
      from pg_catalog.pg_type
      where typnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_class
      where relnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_proc
      where pronamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_operator
      where oprnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select A.xmin as last_tx
      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
      where K.relnamespace = ?::oid
      order by pg_catalog.age(A.xmin)
      limit 1
    )
    union all
    (
    select E.xmin as last_tx
      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
      where T.typnamespace = ?::oid
      order by pg_catalog.age(E.xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_constraint
      where connamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select CO.xmin as last_tx
      from pg_catalog.pg_collation CO
      where CO.collnamespace = ?::oid
      order by pg_catalog.age(CO.xmin)
      limit 1
    )
    union all
    
    (
    select IX.xmin as last_tx
      from pg_catalog.pg_index IX,
           pg_catalog.pg_class IC
      where IC.oid = IX.indrelid
        and IC.relnamespace = ?::oid
        order by pg_catalog.age(IX.xmin)
        limit 1
    )
    union all
    (
    select RU.xmin as last_tx
      from pg_catalog.pg_rewrite RU,
           pg_catalog.pg_class RC
      where RC.oid = RU.ev_class
        and RC.relnamespace = ?::oid
        order by pg_catalog.age(RU.xmin)
        limit 1
    )
    union all
    (
    select TG.xmin as last_tx
      from pg_catalog.pg_trigger TG,
           pg_catalog.pg_class TC
      where TC.oid = TG.tgrelid
        and TC.relnamespace = ?::oid
        order by pg_catalog.age(TG.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_class C on C.oid = D.objoid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_constraint C on C.oid = D.objoid
      where C.connamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_trigger T on T.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = T.tgrelid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_rewrite R on R.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = R.ev_class
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_proc P on P.oid = D.objoid
      where P.pronamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_type T on T.oid = D.objoid
      where T.typnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_operator O on O.oid = D.objoid
      where O.oprnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_collation C on C.oid = D.objoid
      where C.collnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    
  ) X
  order by pg_catalog.age(X.last_tx)
  limit 1
) C, saved_age SA
-- ] --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207896] results received
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207896] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207897] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207897] results received
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207897] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207898] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207898] results received
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207898] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207899] 
select distinct oid
from pg_catalog.pg_type
where typnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_class
where relnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_proc
where pronamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_operator
where oprnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_constraint
where connamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_collation
where collnamespace = ?::oid
union

select distinct IX.indexrelid
from pg_catalog.pg_index IX,
     pg_catalog.pg_class IC
where IC.oid = IX.indrelid
  and IC.relnamespace = ?::oid
union
select distinct RU.oid
from pg_catalog.pg_rewrite RU,
     pg_catalog.pg_class RC
where RC.oid = RU.ev_class
  and RC.relnamespace = ?::oid
  and not RU.rulename = '_RETURN'
union
select distinct TG.oid
from pg_catalog.pg_trigger TG,
     pg_catalog.pg_class TC
where TC.oid = TG.tgrelid
  and TC.relnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207899] results received
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207899] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207900] 
select D.objoid id, pg_catalog.array_agg(D.objsubid) sub_ids
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
group by D.objoid
union all
select T.oid id, pg_catalog.array_agg(D.objsubid)
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
group by T.oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207900] results received
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207900] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207901] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207901] results received
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010249] [statement id: 1734207901] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- 2020-06-06 20:38:07 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 1314010249] disconnected
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 1314010250] connected
-- [ --------------------------------------------------
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010250] [statement id: 1734207902] 
select current_database() as a, current_schemas(false) as b
-- ] --------------------------------------------------
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010250] [statement id: 1734207902] results received
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010250] [statement id: 1734207902] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010250] [statement id: 1734207903] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010250] [statement id: 1734207903] results received
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010250] [statement id: 1734207903] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010250] [statement id: 1734207904] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010250] [statement id: 1734207904] results received
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010250] [statement id: 1734207904] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010250] [statement id: 1734207905] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010250] [statement id: 1734207905] results received
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010250] [statement id: 1734207905] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010250] [statement id: 1734207906] 
select R.oid::bigint as role_id, rolname as role_name,
  rolsuper is_super, rolinherit is_inherit,
  rolcreaterole can_createrole, rolcreatedb can_createdb,
  rolcanlogin can_login, rolreplication /* false */ is_replication,
  rolconnlimit conn_limit, rolvaliduntil valid_until,
  /* rolbypassrls */false  bypass_rls, rolconfig config,
  D.description
from pg_catalog.pg_roles R
  left join pg_catalog.pg_shdescription D on D.objoid = R.oid
-- ] --------------------------------------------------
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010250] [statement id: 1734207906] results received
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010250] [statement id: 1734207906] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010250] [statement id: 1734207907] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010250] [statement id: 1734207907] results received
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010250] [statement id: 1734207907] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 1314010250] disconnected
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 1314010251] connected
-- [ --------------------------------------------------
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010251] [statement id: 1734207908] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010251] [statement id: 1734207908] results received
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010251] [statement id: 1734207908] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010251] [statement id: 1734207909] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010251] [statement id: 1734207909] results received
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010251] [statement id: 1734207909] finished - execution time: 1 ms, fetching time: 14 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010251] [statement id: 1734207910] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010251] [statement id: 1734207910] results received
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010251] [statement id: 1734207910] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010251] [statement id: 1734207911] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010251] [statement id: 1734207911] results received
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010251] [statement id: 1734207911] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010251] [statement id: 1734207912] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010251] [statement id: 1734207912] results received
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010251] [statement id: 1734207912] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010251] [statement id: 1734207913] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010251] [statement id: 1734207913] results received
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010251] [statement id: 1734207913] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010251] [statement id: 1734207914] 
select usesuper
from pg_user
where usename = current_user
-- ] --------------------------------------------------
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010251] [statement id: 1734207914] results received
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010251] [statement id: 1734207914] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010251] [statement id: 1734207915] 
select distinct oid
from pg_catalog.pg_am
union
select distinct oid
from pg_catalog.pg_foreign_data_wrapper
union
select distinct oid
from pg_catalog.pg_foreign_server
union
select distinct oid
from pg_catalog.pg_extension

union
select distinct oid
from pg_catalog.pg_user_mapping

-- ] --------------------------------------------------
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010251] [statement id: 1734207915] results received
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010251] [statement id: 1734207915] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010251] [statement id: 1734207916] 
select D.objoid id
from pg_catalog.pg_description D
where D.classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
-- ] --------------------------------------------------
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010251] [statement id: 1734207916] results received
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010251] [statement id: 1734207916] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010251] [statement id: 1734207917] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010251] [statement id: 1734207917] results received
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010251] [statement id: 1734207917] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010251] [statement id: 1734207918] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010251] [statement id: 1734207918] results received
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010251] [statement id: 1734207918] finished - execution time: 1 ms, total result sets count: 1
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 1314010251] disconnected
-- 2020-06-06 20:38:08 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 1314010252] connected
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 1314010253] connected
-- [ --------------------------------------------------
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010253] [statement id: 1734207919] 
select current_database() as a, current_schemas(false) as b
-- ] --------------------------------------------------
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010253] [statement id: 1734207919] results received
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010253] [statement id: 1734207919] finished - execution time: 1 ms, fetching time: 62 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010253] [statement id: 1734207920] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010253] [statement id: 1734207920] results received
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010253] [statement id: 1734207920] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010253] [statement id: 1734207921] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010253] [statement id: 1734207921] results received
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010253] [statement id: 1734207921] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010253] [statement id: 1734207922] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010253] [statement id: 1734207922] results received
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010253] [statement id: 1734207922] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010253] [statement id: 1734207923] 
select R.oid::bigint as role_id, rolname as role_name,
  rolsuper is_super, rolinherit is_inherit,
  rolcreaterole can_createrole, rolcreatedb can_createdb,
  rolcanlogin can_login, rolreplication /* false */ is_replication,
  rolconnlimit conn_limit, rolvaliduntil valid_until,
  /* rolbypassrls */false  bypass_rls, rolconfig config,
  D.description
from pg_catalog.pg_roles R
  left join pg_catalog.pg_shdescription D on D.objoid = R.oid
-- ] --------------------------------------------------
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010253] [statement id: 1734207923] results received
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010253] [statement id: 1734207923] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010253] [statement id: 1734207924] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010253] [statement id: 1734207924] results received
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010253] [statement id: 1734207924] finished - execution time: 1 ms, total result sets count: 1
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 1314010253] disconnected
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 1314010254] connected
-- [ --------------------------------------------------
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207925] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207925] results received
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207925] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207926] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207926] results received
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207926] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207927] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207927] results received
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207927] finished - execution time: 1 ms, fetching time: 14 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207928] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207928] results received
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207928] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207929] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207929] results received
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207929] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207930] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207930] results received
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207930] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207931] 
select usesuper
from pg_user
where usename = current_user
-- ] --------------------------------------------------
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207931] results received
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207931] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207932] 
select distinct oid
from pg_catalog.pg_am
union
select distinct oid
from pg_catalog.pg_foreign_data_wrapper
union
select distinct oid
from pg_catalog.pg_foreign_server
union
select distinct oid
from pg_catalog.pg_extension

union
select distinct oid
from pg_catalog.pg_user_mapping

-- ] --------------------------------------------------
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207932] results received
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207932] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:11 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207933] 
select D.objoid id
from pg_catalog.pg_description D
where D.classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
-- ] --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207933] results received
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207933] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207934] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207934] results received
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207934] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207935] 
select A.oid as access_method_id,
       A.xmin as state_number,
       A.amname as access_method_name
       /* ,
       A.amhandler::oid as handler_id,
       pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as handler_name,
       A.amtype as access_method_type
       */
from pg_am A
  /* join pg_proc P on A.amhandler::oid = P.oid
  join pg_namespace N on P.pronamespace = N.oid
  */
where pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207935] results received
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207935] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207936] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207936] results received
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207936] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207937] 
select fdw.oid as id,
       fdw.xmin as state_number,
       fdw.fdwname as name,
       pr.proname as handler,
       nspc.nspname as handler_schema,
       pr2.proname as validator,
       nspc2.nspname as validator_schema,
       fdw.fdwoptions as options,
       pg_catalog.pg_get_userbyid(fdw.fdwowner) as "owner"
from pg_catalog.pg_foreign_data_wrapper fdw
     left outer join pg_catalog.pg_proc pr on fdw.fdwhandler = pr.oid
     left outer join pg_catalog.pg_namespace nspc on pr.pronamespace = nspc.oid
     left outer join pg_catalog.pg_proc pr2 on fdw.fdwvalidator = pr2.oid
     left outer join pg_catalog.pg_namespace nspc2 on pr2.pronamespace = nspc2.oid
  where pg_catalog.age(fdw.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207937] results received
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207937] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207938] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207938] results received
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207938] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207939] 
select srv.oid as id,
       srv.srvfdw as fdw_id,
       srv.xmin as state_number,
       srv.srvname as name,
       srv.srvtype as type,
       srv.srvversion as version,
       srv.srvoptions as options,
       pg_catalog.pg_get_userbyid(srv.srvowner) as "owner"
from pg_catalog.pg_foreign_server srv
  where pg_catalog.age(srv.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207939] results received
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207939] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207940] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207940] results received
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207940] finished - execution time: 1 ms, fetching time: 14 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207941] 
select pg_extension.oid as id,
       pg_extension.xmin as state_number,
       extname as name,
       extversion as version,
       extnamespace as schema_id,
       nspname as schema_name,
       array(select target
             from pg_extension_update_paths(extname)
             where source = extversion and path is not null) as available_updates
from pg_catalog.pg_extension
  join pg_namespace on pg_extension.extnamespace = pg_namespace.oid
where pg_catalog.age(pg_extension.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207941] results received
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207941] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207942] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207942] results received
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207942] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207943] 
select D.objoid id, case
    when 'pg_catalog.pg_am'::regclass = classoid then 'A'
    when 'pg_catalog.pg_foreign_data_wrapper'::regclass = classoid then 'W'
    when 'pg_catalog.pg_foreign_server'::regclass = classoid then 'S'
    when 'pg_catalog.pg_extension'::regclass = classoid then 'E'
    
  end as kind,
  D.objsubid sub_id, D.description
from pg_catalog.pg_description D
where classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207943] results received
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207943] finished - execution time: 1 ms, fetching time: 14 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207944] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207944] results received
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207944] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207945] 
select 'sequence' as dependent_kind,
       'table' as owner_kind,
       D.objid as dependent_id,
       D.refobjid as owner_id,
       D.refobjsubid as owner_subobject_id
from pg_depend D
  join pg_class C_SEQ on D.objid = C_SEQ.oid
  join pg_class C_TAB on D.refobjid = C_TAB.oid
where C_SEQ.relkind = 'S'
  and C_TAB.relkind = 'r'
  and D.refobjsubid <> 0
  and (D.deptype = 'a' or D.deptype = 'i')
-- ] --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207945] results received
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207945] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207946] 
with saved_age as (select greatest(pg_catalog.age(?::varchar::xid), pg_catalog.age(?::varchar::xid)) as "value")
select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
(
  select X.last_tx as last_tx
  from (
    (
    select xmin as last_tx
      from pg_catalog.pg_type
      where typnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_class
      where relnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_proc
      where pronamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_operator
      where oprnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select A.xmin as last_tx
      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
      where K.relnamespace = ?::oid
      order by pg_catalog.age(A.xmin)
      limit 1
    )
    union all
    (
    select E.xmin as last_tx
      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
      where T.typnamespace = ?::oid
      order by pg_catalog.age(E.xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_constraint
      where connamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select CO.xmin as last_tx
      from pg_catalog.pg_collation CO
      where CO.collnamespace = ?::oid
      order by pg_catalog.age(CO.xmin)
      limit 1
    )
    union all
    
    (
    select IX.xmin as last_tx
      from pg_catalog.pg_index IX,
           pg_catalog.pg_class IC
      where IC.oid = IX.indrelid
        and IC.relnamespace = ?::oid
        order by pg_catalog.age(IX.xmin)
        limit 1
    )
    union all
    (
    select RU.xmin as last_tx
      from pg_catalog.pg_rewrite RU,
           pg_catalog.pg_class RC
      where RC.oid = RU.ev_class
        and RC.relnamespace = ?::oid
        order by pg_catalog.age(RU.xmin)
        limit 1
    )
    union all
    (
    select TG.xmin as last_tx
      from pg_catalog.pg_trigger TG,
           pg_catalog.pg_class TC
      where TC.oid = TG.tgrelid
        and TC.relnamespace = ?::oid
        order by pg_catalog.age(TG.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_class C on C.oid = D.objoid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_constraint C on C.oid = D.objoid
      where C.connamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_trigger T on T.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = T.tgrelid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_rewrite R on R.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = R.ev_class
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_proc P on P.oid = D.objoid
      where P.pronamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_type T on T.oid = D.objoid
      where T.typnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_operator O on O.oid = D.objoid
      where O.oprnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_collation C on C.oid = D.objoid
      where C.collnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    
  ) X
  order by pg_catalog.age(X.last_tx)
  limit 1
) C, saved_age SA
-- ] --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207946] results received
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207946] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207947] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207947] results received
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207947] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207948] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207948] results received
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207948] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207949] 
select distinct oid
from pg_catalog.pg_type
where typnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_class
where relnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_proc
where pronamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_operator
where oprnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_constraint
where connamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_collation
where collnamespace = ?::oid
union

select distinct IX.indexrelid
from pg_catalog.pg_index IX,
     pg_catalog.pg_class IC
where IC.oid = IX.indrelid
  and IC.relnamespace = ?::oid
union
select distinct RU.oid
from pg_catalog.pg_rewrite RU,
     pg_catalog.pg_class RC
where RC.oid = RU.ev_class
  and RC.relnamespace = ?::oid
  and not RU.rulename = '_RETURN'
union
select distinct TG.oid
from pg_catalog.pg_trigger TG,
     pg_catalog.pg_class TC
where TC.oid = TG.tgrelid
  and TC.relnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207949] results received
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207949] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207950] 
select D.objoid id, pg_catalog.array_agg(D.objsubid) sub_ids
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
group by D.objoid
union all
select T.oid id, pg_catalog.array_agg(D.objsubid)
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
group by T.oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207950] results received
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207950] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207951] 
with saved_age as (select greatest(pg_catalog.age(?::varchar::xid), pg_catalog.age(?::varchar::xid)) as "value")
select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
(
  select X.last_tx as last_tx
  from (
    (
    select xmin as last_tx
      from pg_catalog.pg_type
      where typnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_class
      where relnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_proc
      where pronamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_operator
      where oprnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select A.xmin as last_tx
      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
      where K.relnamespace = ?::oid
      order by pg_catalog.age(A.xmin)
      limit 1
    )
    union all
    (
    select E.xmin as last_tx
      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
      where T.typnamespace = ?::oid
      order by pg_catalog.age(E.xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_constraint
      where connamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select CO.xmin as last_tx
      from pg_catalog.pg_collation CO
      where CO.collnamespace = ?::oid
      order by pg_catalog.age(CO.xmin)
      limit 1
    )
    union all
    
    (
    select IX.xmin as last_tx
      from pg_catalog.pg_index IX,
           pg_catalog.pg_class IC
      where IC.oid = IX.indrelid
        and IC.relnamespace = ?::oid
        order by pg_catalog.age(IX.xmin)
        limit 1
    )
    union all
    (
    select RU.xmin as last_tx
      from pg_catalog.pg_rewrite RU,
           pg_catalog.pg_class RC
      where RC.oid = RU.ev_class
        and RC.relnamespace = ?::oid
        order by pg_catalog.age(RU.xmin)
        limit 1
    )
    union all
    (
    select TG.xmin as last_tx
      from pg_catalog.pg_trigger TG,
           pg_catalog.pg_class TC
      where TC.oid = TG.tgrelid
        and TC.relnamespace = ?::oid
        order by pg_catalog.age(TG.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_class C on C.oid = D.objoid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_constraint C on C.oid = D.objoid
      where C.connamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_trigger T on T.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = T.tgrelid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_rewrite R on R.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = R.ev_class
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_proc P on P.oid = D.objoid
      where P.pronamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_type T on T.oid = D.objoid
      where T.typnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_operator O on O.oid = D.objoid
      where O.oprnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_collation C on C.oid = D.objoid
      where C.collnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    
  ) X
  order by pg_catalog.age(X.last_tx)
  limit 1
) C, saved_age SA
-- ] --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207951] results received
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207951] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207952] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207952] results received
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207952] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207953] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207953] results received
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207953] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207954] 
select distinct oid
from pg_catalog.pg_type
where typnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_class
where relnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_proc
where pronamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_operator
where oprnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_constraint
where connamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_collation
where collnamespace = ?::oid
union

select distinct IX.indexrelid
from pg_catalog.pg_index IX,
     pg_catalog.pg_class IC
where IC.oid = IX.indrelid
  and IC.relnamespace = ?::oid
union
select distinct RU.oid
from pg_catalog.pg_rewrite RU,
     pg_catalog.pg_class RC
where RC.oid = RU.ev_class
  and RC.relnamespace = ?::oid
  and not RU.rulename = '_RETURN'
union
select distinct TG.oid
from pg_catalog.pg_trigger TG,
     pg_catalog.pg_class TC
where TC.oid = TG.tgrelid
  and TC.relnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207954] results received
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207954] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207955] 
select D.objoid id, pg_catalog.array_agg(D.objsubid) sub_ids
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
group by D.objoid
union all
select T.oid id, pg_catalog.array_agg(D.objsubid)
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
group by T.oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207955] results received
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207955] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207956] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207956] results received
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [introspection] [session id: 1314010254] [statement id: 1734207956] finished - execution time: 1 ms, total result sets count: 1
-- 2020-06-06 20:38:12 [codegeneratorTest] [PostgreSQL - proj1@localhost] [session id: 1314010254] disconnected
-- 2020-06-06 20:42:06 [codegeneratorTest] [postgres@localhost] [session id: 1314010255] connected
-- [ --------------------------------------------------
-- 2020-06-06 20:42:06 [codegeneratorTest] [postgres@localhost] [unknown] [session id: 1314010255] [statement id: 1734207957] 
SELECT 'keep alive'
-- ] --------------------------------------------------
-- 2020-06-06 20:42:06 [codegeneratorTest] [postgres@localhost] [unknown] [session id: 1314010255] [statement id: 1734207957] finished - execution time: 1 ms
-- 2020-06-06 20:42:06 [codegeneratorTest] [postgres@localhost] [session id: 1314010255] disconnected
-- 2020-06-06 20:42:09 [codegeneratorTest] [postgres@localhost] [session id: 1314010256] connected
-- [ --------------------------------------------------
-- 2020-06-06 20:42:09 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207958] 
select current_database() as a, current_schemas(false) as b
-- ] --------------------------------------------------
-- 2020-06-06 20:42:09 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207958] results received
-- 2020-06-06 20:42:09 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207958] finished - execution time: 129 ms, fetching time: 115 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:10 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207959] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:42:10 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207959] results received
-- 2020-06-06 20:42:10 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207959] finished - execution time: 53 ms, fetching time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:10 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207960] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:42:10 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207960] results received
-- 2020-06-06 20:42:10 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207960] finished - execution time: 201 ms, fetching time: 100 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:10 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207961] 
select R.oid::bigint as role_id, rolname as role_name,
  rolsuper is_super, rolinherit is_inherit,
  rolcreaterole can_createrole, rolcreatedb can_createdb,
  rolcanlogin can_login, rolreplication /* false */ is_replication,
  rolconnlimit conn_limit, rolvaliduntil valid_until,
  /* rolbypassrls */false  bypass_rls, rolconfig config,
  D.description
from pg_catalog.pg_roles R
  left join pg_catalog.pg_shdescription D on D.objoid = R.oid
-- ] --------------------------------------------------
-- 2020-06-06 20:42:10 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207961] results received
-- 2020-06-06 20:42:10 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207961] finished - execution time: 179 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:10 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207962] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:42:10 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207962] results received
-- 2020-06-06 20:42:10 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207962] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:10 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207963] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:42:10 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207963] results received
-- 2020-06-06 20:42:10 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207963] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:10 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207964] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:42:10 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207964] results received
-- 2020-06-06 20:42:10 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207964] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:10 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207965] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:42:10 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207965] results received
-- 2020-06-06 20:42:10 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207965] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:10 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207966] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:42:10 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207966] results received
-- 2020-06-06 20:42:10 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207966] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:10 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207967] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:42:10 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207967] results received
-- 2020-06-06 20:42:10 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207967] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:10 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207968] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-06 20:42:10 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207968] results received
-- 2020-06-06 20:42:10 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207968] finished - execution time: 100 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:10 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207969] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-06 20:42:10 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207969] results received
-- 2020-06-06 20:42:10 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207969] finished - execution time: 31 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:10 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207970] 
select usesuper
from pg_user
where usename = current_user
-- ] --------------------------------------------------
-- 2020-06-06 20:42:10 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207970] results received
-- 2020-06-06 20:42:10 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207970] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:10 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207971] 
select distinct oid
from pg_catalog.pg_am
union
select distinct oid
from pg_catalog.pg_foreign_data_wrapper
union
select distinct oid
from pg_catalog.pg_foreign_server
union
select distinct oid
from pg_catalog.pg_extension

union
select distinct oid
from pg_catalog.pg_user_mapping

-- ] --------------------------------------------------
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207971] results received
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207971] finished - execution time: 231 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207972] 
select D.objoid id
from pg_catalog.pg_description D
where D.classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
-- ] --------------------------------------------------
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207972] results received
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207972] finished - execution time: 38 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207973] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207973] results received
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207973] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207974] 
select A.oid as access_method_id,
       A.xmin as state_number,
       A.amname as access_method_name
       /* ,
       A.amhandler::oid as handler_id,
       pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as handler_name,
       A.amtype as access_method_type
       */
from pg_am A
  /* join pg_proc P on A.amhandler::oid = P.oid
  join pg_namespace N on P.pronamespace = N.oid
  */
where pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207974] results received
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207974] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207975] 
select fdw.oid as id,
       fdw.xmin as state_number,
       fdw.fdwname as name,
       pr.proname as handler,
       nspc.nspname as handler_schema,
       pr2.proname as validator,
       nspc2.nspname as validator_schema,
       fdw.fdwoptions as options,
       pg_catalog.pg_get_userbyid(fdw.fdwowner) as "owner"
from pg_catalog.pg_foreign_data_wrapper fdw
     left outer join pg_catalog.pg_proc pr on fdw.fdwhandler = pr.oid
     left outer join pg_catalog.pg_namespace nspc on pr.pronamespace = nspc.oid
     left outer join pg_catalog.pg_proc pr2 on fdw.fdwvalidator = pr2.oid
     left outer join pg_catalog.pg_namespace nspc2 on pr2.pronamespace = nspc2.oid
  where pg_catalog.age(fdw.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207975] results received
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207975] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207976] 
select srv.oid as id,
       srv.srvfdw as fdw_id,
       srv.xmin as state_number,
       srv.srvname as name,
       srv.srvtype as type,
       srv.srvversion as version,
       srv.srvoptions as options,
       pg_catalog.pg_get_userbyid(srv.srvowner) as "owner"
from pg_catalog.pg_foreign_server srv
  where pg_catalog.age(srv.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207976] results received
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207976] finished - execution time: 1 ms, fetching time: 14 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207977] 
select pg_extension.oid as id,
       pg_extension.xmin as state_number,
       extname as name,
       extversion as version,
       extnamespace as schema_id,
       nspname as schema_name,
       array(select target
             from pg_extension_update_paths(extname)
             where source = extversion and path is not null) as available_updates
from pg_catalog.pg_extension
  join pg_namespace on pg_extension.extnamespace = pg_namespace.oid
where pg_catalog.age(pg_extension.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207977] results received
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207977] finished - execution time: 38 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207978] 
select D.objoid id, case
    when 'pg_catalog.pg_am'::regclass = classoid then 'A'
    when 'pg_catalog.pg_foreign_data_wrapper'::regclass = classoid then 'W'
    when 'pg_catalog.pg_foreign_server'::regclass = classoid then 'S'
    when 'pg_catalog.pg_extension'::regclass = classoid then 'E'
    
  end as kind,
  D.objsubid sub_id, D.description
from pg_catalog.pg_description D
where classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207978] results received
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207978] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207979] 
select 'sequence' as dependent_kind,
       'table' as owner_kind,
       D.objid as dependent_id,
       D.refobjid as owner_id,
       D.refobjsubid as owner_subobject_id
from pg_depend D
  join pg_class C_SEQ on D.objid = C_SEQ.oid
  join pg_class C_TAB on D.refobjid = C_TAB.oid
where C_SEQ.relkind = 'S'
  and C_TAB.relkind = 'r'
  and D.refobjsubid <> 0
  and (D.deptype = 'a' or D.deptype = 'i')
-- ] --------------------------------------------------
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207979] results received
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207979] finished - execution time: 169 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207980] 
with saved_age as (select greatest(pg_catalog.age(?::varchar::xid), pg_catalog.age(?::varchar::xid)) as "value")
select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
(
  select X.last_tx as last_tx
  from (
    (
    select xmin as last_tx
      from pg_catalog.pg_type
      where typnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_class
      where relnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_proc
      where pronamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_operator
      where oprnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select A.xmin as last_tx
      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
      where K.relnamespace = ?::oid
      order by pg_catalog.age(A.xmin)
      limit 1
    )
    union all
    (
    select E.xmin as last_tx
      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
      where T.typnamespace = ?::oid
      order by pg_catalog.age(E.xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_constraint
      where connamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select CO.xmin as last_tx
      from pg_catalog.pg_collation CO
      where CO.collnamespace = ?::oid
      order by pg_catalog.age(CO.xmin)
      limit 1
    )
    union all
    
    (
    select IX.xmin as last_tx
      from pg_catalog.pg_index IX,
           pg_catalog.pg_class IC
      where IC.oid = IX.indrelid
        and IC.relnamespace = ?::oid
        order by pg_catalog.age(IX.xmin)
        limit 1
    )
    union all
    (
    select RU.xmin as last_tx
      from pg_catalog.pg_rewrite RU,
           pg_catalog.pg_class RC
      where RC.oid = RU.ev_class
        and RC.relnamespace = ?::oid
        order by pg_catalog.age(RU.xmin)
        limit 1
    )
    union all
    (
    select TG.xmin as last_tx
      from pg_catalog.pg_trigger TG,
           pg_catalog.pg_class TC
      where TC.oid = TG.tgrelid
        and TC.relnamespace = ?::oid
        order by pg_catalog.age(TG.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_class C on C.oid = D.objoid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_constraint C on C.oid = D.objoid
      where C.connamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_trigger T on T.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = T.tgrelid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_rewrite R on R.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = R.ev_class
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_proc P on P.oid = D.objoid
      where P.pronamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_type T on T.oid = D.objoid
      where T.typnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_operator O on O.oid = D.objoid
      where O.oprnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_collation C on C.oid = D.objoid
      where C.collnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    
  ) X
  order by pg_catalog.age(X.last_tx)
  limit 1
) C, saved_age SA
-- ] --------------------------------------------------
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207980] results received
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207980] finished - execution time: 332 ms, fetching time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207981] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207981] results received
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207981] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207982] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207982] results received
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207982] finished - execution time: 1 ms, fetching time: 14 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207983] 
with U as (select usesysid from pg_catalog.pg_user where usename = current_user),
          T as (
                select oid as sequence_id,
                       relname as sequence_name,
                       pg_catalog.pg_get_userbyid(relowner) as "owner",
                       case when relowner = (select usesysid from U) then trim(both '()' from pg_catalog.pg_sequence_parameters(oid)::varchar)
                       else null::varchar
                       end as sequence_params,
                       
                       xmin as sequence_state_number
                       from pg_catalog.pg_class
                         where relnamespace = ?::oid
                         and relkind = 'S'
                         --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
                )
select sequence_id,
       sequence_name,
       pg_catalog.split_part(sequence_params, ',', 1)::bigint as next_value,
       pg_catalog.split_part(sequence_params, ',', 2)::bigint as min_value,
       pg_catalog.split_part(sequence_params, ',', 3)::bigint as max_value,
       pg_catalog.split_part(sequence_params, ',', 4)::bigint as inc_value,
       pg_catalog.lower(pg_catalog.split_part(sequence_params, ',', 5)) LIKE '%t%' as cycle_option,
       
       sequence_state_number,
       "owner"
from T
-- ] --------------------------------------------------
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207983] results received
-- 2020-06-06 20:42:11 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207983] finished - execution time: 31 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:12 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207984] 
select T.oid as type_id,
       T.xmin as type_state_number,
       T.typname as type_name,
       T.typtype as type_sub_kind,
       T.typcategory as type_category,
       T.typrelid as class_id,
       T.typbasetype as base_type_id,
       case when T.typtype in ('c','e') then null
            else pg_catalog.format_type(T.typbasetype, T.typtypmod) end as type_def,
       T.typdefault as default_expression,
       T.typnotnull as mandatory,
       pg_catalog.pg_get_userbyid(T.typowner) as "owner"
from pg_catalog.pg_type T
         left outer join pg_catalog.pg_class C
             on T.typrelid = C.oid
where T.typnamespace = ?::oid
  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
  and (T.typtype in ('d','e') or C.relkind = 'c'::"char" or T.typtype = 'b' and (T.typelem = 0 OR T.typcategory <> 'A'))
order by 1
-- ] --------------------------------------------------
-- 2020-06-06 20:42:12 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207984] results received
-- 2020-06-06 20:42:12 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207984] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:12 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207985] 
select T.relkind as table_kind,
       T.relname as table_name,
       T.oid as table_id,
       T.xmin as table_state_number,
       /* false */T.relhasoids  as table_with_oids,
       T.relnamespace as tablespace_id,
       T.reloptions as options,
       (select pg_catalog.array_agg(inhparent)::varchar from (select inhparent::bigint from pg_catalog.pg_inherits where T.oid = inhrelid order by inhseqno) as bts) as ancestors,
       (select pg_catalog.array_agg(inhrelid)::varchar from (select inhrelid::bigint from pg_catalog.pg_inherits where T.oid = inhparent order by inhrelid) as its) as successors,
       /* T.relispartition */false  as is_partition,
       /* pg_catalog.pg_get_partkeydef(T.oid) */null  as partition_key,
       /* pg_catalog.pg_get_expr(T.relpartbound, T.oid) */null  as partition_expression,
       pg_catalog.pg_get_userbyid(T.relowner) as "owner"
from pg_catalog.pg_class T
where relnamespace = ?::oid
  and relkind in ('r', 'm', 'v', 'f', 'p')
  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
order by table_kind, table_id
-- ] --------------------------------------------------
-- 2020-06-06 20:42:12 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207985] results received
-- 2020-06-06 20:42:12 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207985] finished - execution time: 123 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:12 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207986] 
select ft.ftrelid as table_id,
       srv.srvname as table_server,
       ft.ftoptions as table_options,
       pg_catalog.pg_get_userbyid(cls.relowner) as "owner"
from pg_catalog.pg_foreign_table ft
     left outer join pg_catalog.pg_foreign_server srv on ft.ftserver = srv.oid
     join pg_catalog.pg_class cls on ft.ftrelid = cls.oid
where cls.relnamespace = ?::oid
  --  and pg_catalog.age(ft.xmin) <= pg_catalog.age(:tx::varchar::xid)
order by table_id
-- ] --------------------------------------------------
-- 2020-06-06 20:42:12 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207986] results received
-- 2020-06-06 20:42:12 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207986] finished - execution time: 38 ms, fetching time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:12 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207987] 
with schema_procs as (select prorettype, proargtypes, proallargtypes
                      from pg_catalog.pg_proc
                      where pronamespace = ?::oid
                        /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */ ),
     schema_opers as (select oprleft, oprright, oprresult
                      from pg_catalog.pg_operator
                      where oprnamespace = ?::oid
                        /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */ ),
     schema_aggregates as (select A.aggtranstype , A.aggmtranstype 
                           from pg_catalog.pg_aggregate A
                           join pg_catalog.pg_proc P
                             on A.aggfnoid = P.oid
                           where P.pronamespace = ?::oid
                           /* and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(:tx::varchar::xid)) */),
     schema_arg_types as ( select prorettype as type_id
                           from schema_procs
                           union
                           select distinct unnest(proargtypes) as type_id
                           from schema_procs
                           union
                           select distinct unnest(proallargtypes) as type_id
                           from schema_procs
                           union
                           select oprleft as type_id
                           from schema_opers
                           where oprleft is not null
                           union
                           select oprright as type_id
                           from schema_opers
                           where oprright is not null
                           union
                           select oprresult as type_id
                           from schema_opers
                           where oprresult is not null
                           union
                           select aggtranstype::oid as type_id
                           from schema_aggregates
                           union
                           select aggmtranstype::oid as type_id
                           from schema_aggregates
                           
                           )
select type_id, pg_catalog.format_type(type_id, null) as type_spec
from schema_arg_types
where type_id <> 0
-- ] --------------------------------------------------
-- 2020-06-06 20:42:12 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207987] results received
-- 2020-06-06 20:42:12 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207987] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:12 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207988] 
with languages as (select oid as lang_oid, lanname as lang
                   from pg_catalog.pg_language),
     routines as (select proname as r_name,
                         prolang as lang_oid,
                         oid as r_id,
                         xmin as r_state_number,
                         proargnames as arg_names,
                         proargmodes as arg_modes,
                         proargtypes::int[] as in_arg_types,
                         proallargtypes::int[] as all_arg_types,
                         pg_catalog.pg_get_expr(proargdefaults, 0) as arg_defaults,
                         provariadic as arg_variadic_id,
                         prorettype as ret_type_id,
                         proretset as ret_set,
                         /* prokind */case when proiswindow then 'w'
                                                when proisagg then 'a'
                                                else 'f'
                                           end  as kind,
                         provolatile as volatile_kind,
                         proisstrict as is_strict,
                         prosecdef as is_security_definer,
                         proconfig as configuration_parameters,
                         procost as cost,
                         pg_catalog.pg_get_userbyid(proowner) as "owner",
                         prorows as rows ,
                         proleakproof as is_leakproof  /* ,
                         proparallel as concurrency_kind */
                  from pg_catalog.pg_proc
                  where pronamespace = ?::oid
                    and not /* (prokind = 'a') */proisagg 
                    /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */)
select *
from routines natural join languages
-- ] --------------------------------------------------
-- 2020-06-06 20:42:12 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207988] results received
-- 2020-06-06 20:42:12 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207988] finished - execution time: 69 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:12 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207989] 
with procedures as (
  select P.oid as function_id,
         pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as function_name,
         P.prorettype as return_type
  from pg_catalog.pg_proc P
  join pg_catalog.pg_namespace N
    on P.pronamespace = N.oid
),
operators as (
  select O.oid as operator_id,
         pg_catalog.quote_ident(N.nspname) || '.' || O.oprname as operator_name
  from pg_catalog.pg_operator O
  join pg_catalog.pg_namespace N
    on O.oprnamespace = N.oid
)
select P.oid as aggregate_id,
       P.xmin as state_number,
       P.proname as aggregate_name,
       P.proargnames as arg_names,
       P.proargmodes as arg_modes,
       P.proargtypes::int[] as in_arg_types,
       P.proallargtypes::int[] as all_arg_types,
       A.aggtransfn::oid as transition_function_id,
       PT.function_name::text as transition_function_name,
       A.aggtranstype as transition_type,
       A.aggfinalfn::oid as final_function_id,
       case when A.aggfinalfn::oid = 0 then null else PF.function_name end as final_function_name,
       case when A.aggfinalfn::oid = 0 then 0 else PF.return_type end as final_return_type,
       A.agginitval as initial_value,
       A.aggsortop as sort_operator_id,
       case when A.aggsortop = 0 then null else O.operator_name end as sort_operator_name,
       pg_catalog.pg_get_userbyid(P.proowner) as "owner"
       ,
       A.aggfinalextra as final_extra,
       A.aggtransspace as state_size,
       A.aggmtransfn::oid as moving_transition_id,
       case when A.aggmtransfn::oid = 0 then null else FTP.function_name end as moving_transition_name,
       A.aggminvtransfn::oid as inverse_transition_id,
       case when A.aggminvtransfn::oid = 0 then null else ITP.function_name end as inverse_transition_name,
       A.aggmtranstype::oid as moving_state_type,
       A.aggmtransspace as moving_state_size,
       A.aggmfinalfn::oid as moving_final_id,
       case when A.aggmfinalfn::oid = 0 then null else FFP.function_name end as moving_final_name,
       A.aggmfinalextra as moving_final_extra,
       A.aggminitval as moving_initial_value,
       A.aggkind as aggregate_kind,
       A.aggnumdirectargs as direct_args
       
       /* ,
       A.aggcombinefn::oid as combine_function_id,
       case when A.aggcombinefn::oid = 0 then null else CP.function_name end as combine_function_name,
       A.aggserialfn::oid as serialization_function_id,
       case when A.aggserialfn::oid = 0 then null else SP.function_name end as serialization_function_name,
       A.aggdeserialfn::oid as deserialization_function_id,
       case when A.aggdeserialfn::oid = 0 then null else DP.function_name end as deserialization_function_name,
       P.proparallel as concurrency_kind
       */
from pg_catalog.pg_aggregate A
join pg_catalog.pg_proc P
  on A.aggfnoid = P.oid
join procedures PT
  on A.aggtransfn::oid = PT.function_id
left outer join procedures PF
  on A.aggfinalfn::oid = PF.function_id
left outer join operators O
  on A.aggsortop = O.operator_id
left outer join procedures FTP
  on A.aggmtransfn = FTP.function_id
left outer join procedures ITP
  on A.aggminvtransfn = ITP.function_id
left outer join procedures FFP
  on A.aggmfinalfn = FFP.function_id

/* left outer join procedures CP
  on A.aggcombinefn = CP.function_id
left outer join procedures SP
  on A.aggserialfn = SP.function_id
left outer join procedures DP
  on A.aggdeserialfn = DP.function_id
*/
where P.pronamespace = ?::oid
--  and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(:tx::varchar::xid))
order by P.oid
-- ] --------------------------------------------------
-- 2020-06-06 20:42:12 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207989] results received
-- 2020-06-06 20:42:12 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207989] finished - execution time: 22 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:12 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207990] 
select O.oid as op_id,
       O.xmin as state_number,
       oprname as op_name,
       oprkind as op_kind,
       oprleft as arg_left_type_id,
       oprright as arg_right_type_id,
       oprresult as arg_result_type_id,
       oprcode as func_main,
       pg_catalog.pg_get_userbyid(O.oprowner) as "owner"
from pg_catalog.pg_operator O
where oprnamespace = ?::oid
  --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:42:12 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207990] results received
-- 2020-06-06 20:42:12 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207990] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:12 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207991] 
select oid as id,
       xmin as state_number,
       collname as name,
       collcollate as lc_collate,
       collctype as lc_ctype,
       pg_catalog.pg_get_userbyid(collowner) as "owner"
from pg_catalog.pg_collation
where collnamespace = ?::oid
  --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:42:12 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207991] results received
-- 2020-06-06 20:42:12 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207991] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:12 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207992] 
with tab as ( select relnamespace as schema_id,
                     oid as table_id,
                     relkind as table_kind
              from pg_catalog.pg_class
              where relnamespace = ?::oid
                and relkind in ('r','m','v','p')),
    ind_head as ( select indrelid as table_id,
                         indexrelid as index_id,
                         indisunique as is_unique,
                         indisprimary as is_primary,
                         indkey as column_positions,
                         indclass as column_operators,
                         indoption as column_options,
                         pg_catalog.pg_get_expr(indpred, indrelid) as condition,
                         case when indexprs is not null
                             then pg_catalog.array_to_string(array(
                                      select case when indkey[k] = 0
                                             then chr(27) || pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
                                             else pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
                                             end
                                      from pg_catalog.generate_subscripts(indkey, 1) as k
                                      order by k),
                                  chr(28))
                             else null end as expressions
                  from pg_catalog.pg_index ),
    ind_stor as ( select cls.relnamespace as schema_id,
                         cls.oid as index_id,
                         cls.xmin as state_number,
                         cls.relname as index_name,
                         /* pg_catalog.pg_indexam_has_property(cls.relam, 'can_order') */am.amcanorder  as can_order
                  from pg_catalog.pg_class cls
                    /* */join pg_catalog.pg_am am on (cls.relam = am.oid)
                  where cls.relkind = 'i'
                    /* and pg_catalog.age(cls.xmin) <= pg_catalog.age(:tx::varchar::xid) */)
select table_id, table_kind,
       index_name, index_id, state_number,
       is_unique, is_primary,
       column_positions, column_operators, column_options,
       condition, expressions, can_order
from tab natural join ind_head natural join ind_stor
-- ] --------------------------------------------------
-- 2020-06-06 20:42:12 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207992] results received
-- 2020-06-06 20:42:12 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207992] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:12 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207993] 
with T as ( select oid as table_id,
                   relkind as table_kind,
                   xmin as table_state_id
            from pg_catalog.pg_class
            where relkind in ('r','v','f','p')
              and relnamespace = ?::oid ),
     C as ( select conrelid as table_id,
                   oid::bigint as con_id,
                   xmin as con_state_id,
                   conname as con_name,
                   contype as con_kind,
                   conkey as con_columns,
                   conindid as index_id,
                   confrelid as ref_table_id,
                   confkey as ref_columns,
                   condeferrable as is_deferrable,
                   condeferred as is_init_deferred,
                   confupdtype as on_update,
                   confdeltype as on_delete,
                   /* conbin */consrc 
            from pg_catalog.pg_constraint
            where contype in ('p','u','f','c')
              and connamespace = ?::oid )
select table_id,
       table_kind,
       con_id,
       con_state_id::varchar::bigint as con_state_id,
       con_name,
       con_kind,
       con_columns,
       index_id,
       ref_table_id,
       is_deferrable,
       is_init_deferred,
       on_update,
       on_delete,
       /* pg_catalog.pg_get_expr(conbin, table_id) */consrc  as con_expression,
       ref_columns
from T natural join C
--  where pg_catalog.age(table_state_id) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(con_state_id) <= pg_catalog.age(:tx::varchar::xid)
order by pg_catalog.strpos('pufc', con_kind)
-- ] --------------------------------------------------
-- 2020-06-06 20:42:12 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207993] results received
-- 2020-06-06 20:42:12 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207993] finished - execution time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:12 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207994] 
select D.objoid id, C.relkind as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select T.oid id, 'T' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, pg_catalog.translate(C.contype, 'pufc', 'kkxz') as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 't' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'R' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'F' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'O' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'C' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)

-- ] --------------------------------------------------
-- 2020-06-06 20:42:12 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207994] results received
-- 2020-06-06 20:42:12 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207994] finished - execution time: 10 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:12 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207995] 
select distinct
       T.relkind as view_kind,
       T.oid as view_id,
       pg_catalog.pg_get_viewdef(T.oid) as source_text
from pg_catalog.pg_class T
  join pg_catalog.pg_namespace N on T.relnamespace = N.oid
  left outer join pg_catalog.pg_attribute A on (A.attrelid = T.oid)
where N.oid = ?::oid
  and T.relkind in ('m','v')
  --  and (pg_catalog.age(T.xmin) <= pg_catalog.age(:src_tx::varchar::xid) or pg_catalog.age(A.xmin) <= pg_catalog.age(:src_tx::varchar::xid))
-- ] --------------------------------------------------
-- 2020-06-06 20:42:12 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207995] results received
-- 2020-06-06 20:42:12 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207995] finished - execution time: 2 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:13 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207996] 
with system_languages as ( select oid as lang
                           from pg_catalog.pg_language
                           where lanname in ('c','internal') )
select oid as id,
       pg_catalog.pg_get_function_arguments(oid) as arguments_def,
       pg_catalog.pg_get_function_result(oid) as result_def,
       prosrc as source_text
from pg_catalog.pg_proc
where pronamespace = ?::oid
  --  and pg_catalog.age(xmin) <= pg_catalog.age(:src_tx::varchar::xid)
  and not /* (prokind = 'a') */proisagg 
  and prolang not in (select lang from system_languages)
  and prosrc is not null
-- ] --------------------------------------------------
-- 2020-06-06 20:42:13 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207996] results received
-- 2020-06-06 20:42:13 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207996] finished - execution time: 1 ms, fetching time: 61 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:13 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207997] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-06-06 20:42:13 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207997] results received
-- 2020-06-06 20:42:13 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010256] [statement id: 1734207997] finished - execution time: 81 ms, fetching time: 20 ms, total result sets count: 1
-- 2020-06-06 20:42:13 [codegeneratorTest] [postgres@localhost] [session id: 1314010256] disconnected
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [session id: 1314010257] connected
-- [ --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734207998] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734207998] results received
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734207998] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734207999] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734207999] results received
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734207999] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208000] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208000] results received
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208000] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208001] 
select R.oid::bigint as role_id, rolname as role_name,
  rolsuper is_super, rolinherit is_inherit,
  rolcreaterole can_createrole, rolcreatedb can_createdb,
  rolcanlogin can_login, rolreplication /* false */ is_replication,
  rolconnlimit conn_limit, rolvaliduntil valid_until,
  /* rolbypassrls */false  bypass_rls, rolconfig config,
  D.description
from pg_catalog.pg_roles R
  left join pg_catalog.pg_shdescription D on D.objoid = R.oid
-- ] --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208001] results received
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208001] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208002] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208002] results received
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208002] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208003] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208003] results received
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208003] finished - execution time: 1 ms, fetching time: 14 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208004] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208004] results received
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208004] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208005] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208005] results received
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208005] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208006] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208006] results received
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208006] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208007] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208007] results received
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208007] finished - execution time: 31 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208008] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208008] results received
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208008] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208009] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208009] results received
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208009] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208010] 
select usesuper
from pg_user
where usename = current_user
-- ] --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208010] results received
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208010] finished - execution time: 1 ms, fetching time: 14 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208011] 
select distinct oid
from pg_catalog.pg_am
union
select distinct oid
from pg_catalog.pg_foreign_data_wrapper
union
select distinct oid
from pg_catalog.pg_foreign_server
union
select distinct oid
from pg_catalog.pg_extension

union
select distinct oid
from pg_catalog.pg_user_mapping

-- ] --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208011] results received
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208011] finished - execution time: 31 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208012] 
select D.objoid id
from pg_catalog.pg_description D
where D.classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
-- ] --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208012] results received
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208012] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208013] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208013] results received
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208013] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208014] 
select A.oid as access_method_id,
       A.xmin as state_number,
       A.amname as access_method_name
       /* ,
       A.amhandler::oid as handler_id,
       pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as handler_name,
       A.amtype as access_method_type
       */
from pg_am A
  /* join pg_proc P on A.amhandler::oid = P.oid
  join pg_namespace N on P.pronamespace = N.oid
  */
where pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208014] results received
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208014] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208015] 
select fdw.oid as id,
       fdw.xmin as state_number,
       fdw.fdwname as name,
       pr.proname as handler,
       nspc.nspname as handler_schema,
       pr2.proname as validator,
       nspc2.nspname as validator_schema,
       fdw.fdwoptions as options,
       pg_catalog.pg_get_userbyid(fdw.fdwowner) as "owner"
from pg_catalog.pg_foreign_data_wrapper fdw
     left outer join pg_catalog.pg_proc pr on fdw.fdwhandler = pr.oid
     left outer join pg_catalog.pg_namespace nspc on pr.pronamespace = nspc.oid
     left outer join pg_catalog.pg_proc pr2 on fdw.fdwvalidator = pr2.oid
     left outer join pg_catalog.pg_namespace nspc2 on pr2.pronamespace = nspc2.oid
  where pg_catalog.age(fdw.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208015] results received
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208015] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208016] 
select srv.oid as id,
       srv.srvfdw as fdw_id,
       srv.xmin as state_number,
       srv.srvname as name,
       srv.srvtype as type,
       srv.srvversion as version,
       srv.srvoptions as options,
       pg_catalog.pg_get_userbyid(srv.srvowner) as "owner"
from pg_catalog.pg_foreign_server srv
  where pg_catalog.age(srv.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208016] results received
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208016] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208017] 
select pg_extension.oid as id,
       pg_extension.xmin as state_number,
       extname as name,
       extversion as version,
       extnamespace as schema_id,
       nspname as schema_name,
       array(select target
             from pg_extension_update_paths(extname)
             where source = extversion and path is not null) as available_updates
from pg_catalog.pg_extension
  join pg_namespace on pg_extension.extnamespace = pg_namespace.oid
where pg_catalog.age(pg_extension.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208017] results received
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208017] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208018] 
select D.objoid id, case
    when 'pg_catalog.pg_am'::regclass = classoid then 'A'
    when 'pg_catalog.pg_foreign_data_wrapper'::regclass = classoid then 'W'
    when 'pg_catalog.pg_foreign_server'::regclass = classoid then 'S'
    when 'pg_catalog.pg_extension'::regclass = classoid then 'E'
    
  end as kind,
  D.objsubid sub_id, D.description
from pg_catalog.pg_description D
where classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208018] results received
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208018] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208019] 
select 'sequence' as dependent_kind,
       'table' as owner_kind,
       D.objid as dependent_id,
       D.refobjid as owner_id,
       D.refobjsubid as owner_subobject_id
from pg_depend D
  join pg_class C_SEQ on D.objid = C_SEQ.oid
  join pg_class C_TAB on D.refobjid = C_TAB.oid
where C_SEQ.relkind = 'S'
  and C_TAB.relkind = 'r'
  and D.refobjsubid <> 0
  and (D.deptype = 'a' or D.deptype = 'i')
-- ] --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208019] results received
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208019] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208020] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208020] results received
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010257] [statement id: 1734208020] finished - execution time: 1 ms, total result sets count: 1
-- 2020-06-06 20:42:21 [codegeneratorTest] [postgres@localhost] [session id: 1314010257] disconnected
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [session id: 1314010258] connected
-- [ --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208021] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208021] results received
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208021] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208022] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208022] results received
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208022] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208023] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208023] results received
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208023] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208024] 
select R.oid::bigint as role_id, rolname as role_name,
  rolsuper is_super, rolinherit is_inherit,
  rolcreaterole can_createrole, rolcreatedb can_createdb,
  rolcanlogin can_login, rolreplication /* false */ is_replication,
  rolconnlimit conn_limit, rolvaliduntil valid_until,
  /* rolbypassrls */false  bypass_rls, rolconfig config,
  D.description
from pg_catalog.pg_roles R
  left join pg_catalog.pg_shdescription D on D.objoid = R.oid
-- ] --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208024] results received
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208024] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208025] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208025] results received
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208025] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208026] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208026] results received
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208026] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208027] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208027] results received
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208027] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208028] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208028] results received
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208028] finished - execution time: 1 ms, fetching time: 14 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208029] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208029] results received
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208029] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208030] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208030] results received
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208030] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208031] 
select usesuper
from pg_user
where usename = current_user
-- ] --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208031] results received
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208031] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208032] 
select distinct oid
from pg_catalog.pg_am
union
select distinct oid
from pg_catalog.pg_foreign_data_wrapper
union
select distinct oid
from pg_catalog.pg_foreign_server
union
select distinct oid
from pg_catalog.pg_extension

union
select distinct oid
from pg_catalog.pg_user_mapping

-- ] --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208032] results received
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208032] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208033] 
select D.objoid id
from pg_catalog.pg_description D
where D.classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
-- ] --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208033] results received
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208033] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208034] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208034] results received
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208034] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208035] 
select A.oid as access_method_id,
       A.xmin as state_number,
       A.amname as access_method_name
       /* ,
       A.amhandler::oid as handler_id,
       pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as handler_name,
       A.amtype as access_method_type
       */
from pg_am A
  /* join pg_proc P on A.amhandler::oid = P.oid
  join pg_namespace N on P.pronamespace = N.oid
  */
where pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208035] results received
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208035] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208036] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208036] results received
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208036] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208037] 
select fdw.oid as id,
       fdw.xmin as state_number,
       fdw.fdwname as name,
       pr.proname as handler,
       nspc.nspname as handler_schema,
       pr2.proname as validator,
       nspc2.nspname as validator_schema,
       fdw.fdwoptions as options,
       pg_catalog.pg_get_userbyid(fdw.fdwowner) as "owner"
from pg_catalog.pg_foreign_data_wrapper fdw
     left outer join pg_catalog.pg_proc pr on fdw.fdwhandler = pr.oid
     left outer join pg_catalog.pg_namespace nspc on pr.pronamespace = nspc.oid
     left outer join pg_catalog.pg_proc pr2 on fdw.fdwvalidator = pr2.oid
     left outer join pg_catalog.pg_namespace nspc2 on pr2.pronamespace = nspc2.oid
  where pg_catalog.age(fdw.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208037] results received
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208037] finished - execution time: 62 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208038] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208038] results received
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208038] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208039] 
select srv.oid as id,
       srv.srvfdw as fdw_id,
       srv.xmin as state_number,
       srv.srvname as name,
       srv.srvtype as type,
       srv.srvversion as version,
       srv.srvoptions as options,
       pg_catalog.pg_get_userbyid(srv.srvowner) as "owner"
from pg_catalog.pg_foreign_server srv
  where pg_catalog.age(srv.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208039] results received
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208039] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208040] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208040] results received
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208040] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208041] 
select pg_extension.oid as id,
       pg_extension.xmin as state_number,
       extname as name,
       extversion as version,
       extnamespace as schema_id,
       nspname as schema_name,
       array(select target
             from pg_extension_update_paths(extname)
             where source = extversion and path is not null) as available_updates
from pg_catalog.pg_extension
  join pg_namespace on pg_extension.extnamespace = pg_namespace.oid
where pg_catalog.age(pg_extension.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208041] results received
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208041] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208042] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208042] results received
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208042] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208043] 
select D.objoid id, case
    when 'pg_catalog.pg_am'::regclass = classoid then 'A'
    when 'pg_catalog.pg_foreign_data_wrapper'::regclass = classoid then 'W'
    when 'pg_catalog.pg_foreign_server'::regclass = classoid then 'S'
    when 'pg_catalog.pg_extension'::regclass = classoid then 'E'
    
  end as kind,
  D.objsubid sub_id, D.description
from pg_catalog.pg_description D
where classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208043] results received
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208043] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208044] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208044] results received
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208044] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208045] 
select 'sequence' as dependent_kind,
       'table' as owner_kind,
       D.objid as dependent_id,
       D.refobjid as owner_id,
       D.refobjsubid as owner_subobject_id
from pg_depend D
  join pg_class C_SEQ on D.objid = C_SEQ.oid
  join pg_class C_TAB on D.refobjid = C_TAB.oid
where C_SEQ.relkind = 'S'
  and C_TAB.relkind = 'r'
  and D.refobjsubid <> 0
  and (D.deptype = 'a' or D.deptype = 'i')
-- ] --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208045] results received
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208045] finished - execution time: 16 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:33 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208046] 
with saved_age as (select greatest(pg_catalog.age(?::varchar::xid), pg_catalog.age(?::varchar::xid)) as "value")
select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
(
  select X.last_tx as last_tx
  from (
    (
    select xmin as last_tx
      from pg_catalog.pg_type
      where typnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_class
      where relnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_proc
      where pronamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_operator
      where oprnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select A.xmin as last_tx
      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
      where K.relnamespace = ?::oid
      order by pg_catalog.age(A.xmin)
      limit 1
    )
    union all
    (
    select E.xmin as last_tx
      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
      where T.typnamespace = ?::oid
      order by pg_catalog.age(E.xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_constraint
      where connamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select CO.xmin as last_tx
      from pg_catalog.pg_collation CO
      where CO.collnamespace = ?::oid
      order by pg_catalog.age(CO.xmin)
      limit 1
    )
    union all
    
    (
    select IX.xmin as last_tx
      from pg_catalog.pg_index IX,
           pg_catalog.pg_class IC
      where IC.oid = IX.indrelid
        and IC.relnamespace = ?::oid
        order by pg_catalog.age(IX.xmin)
        limit 1
    )
    union all
    (
    select RU.xmin as last_tx
      from pg_catalog.pg_rewrite RU,
           pg_catalog.pg_class RC
      where RC.oid = RU.ev_class
        and RC.relnamespace = ?::oid
        order by pg_catalog.age(RU.xmin)
        limit 1
    )
    union all
    (
    select TG.xmin as last_tx
      from pg_catalog.pg_trigger TG,
           pg_catalog.pg_class TC
      where TC.oid = TG.tgrelid
        and TC.relnamespace = ?::oid
        order by pg_catalog.age(TG.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_class C on C.oid = D.objoid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_constraint C on C.oid = D.objoid
      where C.connamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_trigger T on T.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = T.tgrelid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_rewrite R on R.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = R.ev_class
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_proc P on P.oid = D.objoid
      where P.pronamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_type T on T.oid = D.objoid
      where T.typnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_operator O on O.oid = D.objoid
      where O.oprnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_collation C on C.oid = D.objoid
      where C.collnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    
  ) X
  order by pg_catalog.age(X.last_tx)
  limit 1
) C, saved_age SA
-- ] --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208046] results received
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208046] finished - execution time: 250 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208047] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208047] results received
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208047] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208048] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208048] results received
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208048] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208049] 
with U as (select usesysid from pg_catalog.pg_user where usename = current_user),
          T as (
                select oid as sequence_id,
                       relname as sequence_name,
                       pg_catalog.pg_get_userbyid(relowner) as "owner",
                       case when relowner = (select usesysid from U) then trim(both '()' from pg_catalog.pg_sequence_parameters(oid)::varchar)
                       else null::varchar
                       end as sequence_params,
                       
                       xmin as sequence_state_number
                       from pg_catalog.pg_class
                         where relnamespace = ?::oid
                         and relkind = 'S'
                         --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
                )
select sequence_id,
       sequence_name,
       pg_catalog.split_part(sequence_params, ',', 1)::bigint as next_value,
       pg_catalog.split_part(sequence_params, ',', 2)::bigint as min_value,
       pg_catalog.split_part(sequence_params, ',', 3)::bigint as max_value,
       pg_catalog.split_part(sequence_params, ',', 4)::bigint as inc_value,
       pg_catalog.lower(pg_catalog.split_part(sequence_params, ',', 5)) LIKE '%t%' as cycle_option,
       
       sequence_state_number,
       "owner"
from T
-- ] --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208049] results received
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208049] finished - execution time: 125 ms, fetching time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208050] 
select T.oid as type_id,
       T.xmin as type_state_number,
       T.typname as type_name,
       T.typtype as type_sub_kind,
       T.typcategory as type_category,
       T.typrelid as class_id,
       T.typbasetype as base_type_id,
       case when T.typtype in ('c','e') then null
            else pg_catalog.format_type(T.typbasetype, T.typtypmod) end as type_def,
       T.typdefault as default_expression,
       T.typnotnull as mandatory,
       pg_catalog.pg_get_userbyid(T.typowner) as "owner"
from pg_catalog.pg_type T
         left outer join pg_catalog.pg_class C
             on T.typrelid = C.oid
where T.typnamespace = ?::oid
  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
  and (T.typtype in ('d','e') or C.relkind = 'c'::"char" or T.typtype = 'b' and (T.typelem = 0 OR T.typcategory <> 'A'))
order by 1
-- ] --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208050] results received
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208050] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208051] 
select T.relkind as table_kind,
       T.relname as table_name,
       T.oid as table_id,
       T.xmin as table_state_number,
       /* false */T.relhasoids  as table_with_oids,
       T.relnamespace as tablespace_id,
       T.reloptions as options,
       (select pg_catalog.array_agg(inhparent)::varchar from (select inhparent::bigint from pg_catalog.pg_inherits where T.oid = inhrelid order by inhseqno) as bts) as ancestors,
       (select pg_catalog.array_agg(inhrelid)::varchar from (select inhrelid::bigint from pg_catalog.pg_inherits where T.oid = inhparent order by inhrelid) as its) as successors,
       /* T.relispartition */false  as is_partition,
       /* pg_catalog.pg_get_partkeydef(T.oid) */null  as partition_key,
       /* pg_catalog.pg_get_expr(T.relpartbound, T.oid) */null  as partition_expression,
       pg_catalog.pg_get_userbyid(T.relowner) as "owner"
from pg_catalog.pg_class T
where relnamespace = ?::oid
  and relkind in ('r', 'm', 'v', 'f', 'p')
  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
order by table_kind, table_id
-- ] --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208051] results received
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208051] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208052] 
select ft.ftrelid as table_id,
       srv.srvname as table_server,
       ft.ftoptions as table_options,
       pg_catalog.pg_get_userbyid(cls.relowner) as "owner"
from pg_catalog.pg_foreign_table ft
     left outer join pg_catalog.pg_foreign_server srv on ft.ftserver = srv.oid
     join pg_catalog.pg_class cls on ft.ftrelid = cls.oid
where cls.relnamespace = ?::oid
  --  and pg_catalog.age(ft.xmin) <= pg_catalog.age(:tx::varchar::xid)
order by table_id
-- ] --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208052] results received
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208052] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208053] 
with schema_procs as (select prorettype, proargtypes, proallargtypes
                      from pg_catalog.pg_proc
                      where pronamespace = ?::oid
                        /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */ ),
     schema_opers as (select oprleft, oprright, oprresult
                      from pg_catalog.pg_operator
                      where oprnamespace = ?::oid
                        /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */ ),
     schema_aggregates as (select A.aggtranstype , A.aggmtranstype 
                           from pg_catalog.pg_aggregate A
                           join pg_catalog.pg_proc P
                             on A.aggfnoid = P.oid
                           where P.pronamespace = ?::oid
                           /* and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(:tx::varchar::xid)) */),
     schema_arg_types as ( select prorettype as type_id
                           from schema_procs
                           union
                           select distinct unnest(proargtypes) as type_id
                           from schema_procs
                           union
                           select distinct unnest(proallargtypes) as type_id
                           from schema_procs
                           union
                           select oprleft as type_id
                           from schema_opers
                           where oprleft is not null
                           union
                           select oprright as type_id
                           from schema_opers
                           where oprright is not null
                           union
                           select oprresult as type_id
                           from schema_opers
                           where oprresult is not null
                           union
                           select aggtranstype::oid as type_id
                           from schema_aggregates
                           union
                           select aggmtranstype::oid as type_id
                           from schema_aggregates
                           
                           )
select type_id, pg_catalog.format_type(type_id, null) as type_spec
from schema_arg_types
where type_id <> 0
-- ] --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208053] results received
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208053] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208054] 
with languages as (select oid as lang_oid, lanname as lang
                   from pg_catalog.pg_language),
     routines as (select proname as r_name,
                         prolang as lang_oid,
                         oid as r_id,
                         xmin as r_state_number,
                         proargnames as arg_names,
                         proargmodes as arg_modes,
                         proargtypes::int[] as in_arg_types,
                         proallargtypes::int[] as all_arg_types,
                         pg_catalog.pg_get_expr(proargdefaults, 0) as arg_defaults,
                         provariadic as arg_variadic_id,
                         prorettype as ret_type_id,
                         proretset as ret_set,
                         /* prokind */case when proiswindow then 'w'
                                                when proisagg then 'a'
                                                else 'f'
                                           end  as kind,
                         provolatile as volatile_kind,
                         proisstrict as is_strict,
                         prosecdef as is_security_definer,
                         proconfig as configuration_parameters,
                         procost as cost,
                         pg_catalog.pg_get_userbyid(proowner) as "owner",
                         prorows as rows ,
                         proleakproof as is_leakproof  /* ,
                         proparallel as concurrency_kind */
                  from pg_catalog.pg_proc
                  where pronamespace = ?::oid
                    and not /* (prokind = 'a') */proisagg 
                    /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */)
select *
from routines natural join languages
-- ] --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208054] results received
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208054] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208055] 
with procedures as (
  select P.oid as function_id,
         pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as function_name,
         P.prorettype as return_type
  from pg_catalog.pg_proc P
  join pg_catalog.pg_namespace N
    on P.pronamespace = N.oid
),
operators as (
  select O.oid as operator_id,
         pg_catalog.quote_ident(N.nspname) || '.' || O.oprname as operator_name
  from pg_catalog.pg_operator O
  join pg_catalog.pg_namespace N
    on O.oprnamespace = N.oid
)
select P.oid as aggregate_id,
       P.xmin as state_number,
       P.proname as aggregate_name,
       P.proargnames as arg_names,
       P.proargmodes as arg_modes,
       P.proargtypes::int[] as in_arg_types,
       P.proallargtypes::int[] as all_arg_types,
       A.aggtransfn::oid as transition_function_id,
       PT.function_name::text as transition_function_name,
       A.aggtranstype as transition_type,
       A.aggfinalfn::oid as final_function_id,
       case when A.aggfinalfn::oid = 0 then null else PF.function_name end as final_function_name,
       case when A.aggfinalfn::oid = 0 then 0 else PF.return_type end as final_return_type,
       A.agginitval as initial_value,
       A.aggsortop as sort_operator_id,
       case when A.aggsortop = 0 then null else O.operator_name end as sort_operator_name,
       pg_catalog.pg_get_userbyid(P.proowner) as "owner"
       ,
       A.aggfinalextra as final_extra,
       A.aggtransspace as state_size,
       A.aggmtransfn::oid as moving_transition_id,
       case when A.aggmtransfn::oid = 0 then null else FTP.function_name end as moving_transition_name,
       A.aggminvtransfn::oid as inverse_transition_id,
       case when A.aggminvtransfn::oid = 0 then null else ITP.function_name end as inverse_transition_name,
       A.aggmtranstype::oid as moving_state_type,
       A.aggmtransspace as moving_state_size,
       A.aggmfinalfn::oid as moving_final_id,
       case when A.aggmfinalfn::oid = 0 then null else FFP.function_name end as moving_final_name,
       A.aggmfinalextra as moving_final_extra,
       A.aggminitval as moving_initial_value,
       A.aggkind as aggregate_kind,
       A.aggnumdirectargs as direct_args
       
       /* ,
       A.aggcombinefn::oid as combine_function_id,
       case when A.aggcombinefn::oid = 0 then null else CP.function_name end as combine_function_name,
       A.aggserialfn::oid as serialization_function_id,
       case when A.aggserialfn::oid = 0 then null else SP.function_name end as serialization_function_name,
       A.aggdeserialfn::oid as deserialization_function_id,
       case when A.aggdeserialfn::oid = 0 then null else DP.function_name end as deserialization_function_name,
       P.proparallel as concurrency_kind
       */
from pg_catalog.pg_aggregate A
join pg_catalog.pg_proc P
  on A.aggfnoid = P.oid
join procedures PT
  on A.aggtransfn::oid = PT.function_id
left outer join procedures PF
  on A.aggfinalfn::oid = PF.function_id
left outer join operators O
  on A.aggsortop = O.operator_id
left outer join procedures FTP
  on A.aggmtransfn = FTP.function_id
left outer join procedures ITP
  on A.aggminvtransfn = ITP.function_id
left outer join procedures FFP
  on A.aggmfinalfn = FFP.function_id

/* left outer join procedures CP
  on A.aggcombinefn = CP.function_id
left outer join procedures SP
  on A.aggserialfn = SP.function_id
left outer join procedures DP
  on A.aggdeserialfn = DP.function_id
*/
where P.pronamespace = ?::oid
--  and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(:tx::varchar::xid))
order by P.oid
-- ] --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208055] results received
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208055] finished - execution time: 1 ms, fetching time: 14 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208056] 
select O.oid as op_id,
       O.xmin as state_number,
       oprname as op_name,
       oprkind as op_kind,
       oprleft as arg_left_type_id,
       oprright as arg_right_type_id,
       oprresult as arg_result_type_id,
       oprcode as func_main,
       pg_catalog.pg_get_userbyid(O.oprowner) as "owner"
from pg_catalog.pg_operator O
where oprnamespace = ?::oid
  --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208056] results received
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208056] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208057] 
select oid as id,
       xmin as state_number,
       collname as name,
       collcollate as lc_collate,
       collctype as lc_ctype,
       pg_catalog.pg_get_userbyid(collowner) as "owner"
from pg_catalog.pg_collation
where collnamespace = ?::oid
  --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208057] results received
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208057] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208058] 
with T as ( select distinct T.oid as table_id, T.relname as table_name
            from pg_catalog.pg_class T,
                 pg_catalog.pg_attribute A
            where T.relnamespace = ?::oid
              and T.relkind in ('r', 'm', 'v', 'f', 'p')
              --  and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid))
              and A.attrelid = T.oid )
select T.table_id,
       C.attnum as column_position,
       C.attname as column_name,
       C.xmin as column_state_number,
       C.atttypmod as type_mod,
       C.attndims as dimensions_number,
       pg_catalog.format_type(C.atttypid, C.atttypmod) as type_spec,
       C.atttypid as type_id,
       C.attnotnull as mandatory,
       /* pg_catalog.pg_get_expr(D.adbin, 'pg_catalog.pg_attrdef'::regclass::oid) */D.adsrc  as column_default_expression,
       not C.attislocal as column_is_inherited,
       C.attfdwoptions as options,
       C.attisdropped as column_is_dropped,
       /* C.attidentity */null  as identity_kind
from T
  inner join pg_catalog.pg_attribute C on T.table_id = C.attrelid
  left outer join pg_catalog.pg_attrdef D on (C.attrelid, C.attnum) = (D.adrelid, D.adnum)
where attnum > 0
order by table_id, attnum
-- ] --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208058] results received
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208058] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208059] 
with tab as ( select relnamespace as schema_id,
                     oid as table_id,
                     relkind as table_kind
              from pg_catalog.pg_class
              where relnamespace = ?::oid
                and relkind in ('r','m','v','p')),
    ind_head as ( select indrelid as table_id,
                         indexrelid as index_id,
                         indisunique as is_unique,
                         indisprimary as is_primary,
                         indkey as column_positions,
                         indclass as column_operators,
                         indoption as column_options,
                         pg_catalog.pg_get_expr(indpred, indrelid) as condition,
                         case when indexprs is not null
                             then pg_catalog.array_to_string(array(
                                      select case when indkey[k] = 0
                                             then chr(27) || pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
                                             else pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
                                             end
                                      from pg_catalog.generate_subscripts(indkey, 1) as k
                                      order by k),
                                  chr(28))
                             else null end as expressions
                  from pg_catalog.pg_index ),
    ind_stor as ( select cls.relnamespace as schema_id,
                         cls.oid as index_id,
                         cls.xmin as state_number,
                         cls.relname as index_name,
                         /* pg_catalog.pg_indexam_has_property(cls.relam, 'can_order') */am.amcanorder  as can_order
                  from pg_catalog.pg_class cls
                    /* */join pg_catalog.pg_am am on (cls.relam = am.oid)
                  where cls.relkind = 'i'
                    /* and pg_catalog.age(cls.xmin) <= pg_catalog.age(:tx::varchar::xid) */)
select table_id, table_kind,
       index_name, index_id, state_number,
       is_unique, is_primary,
       column_positions, column_operators, column_options,
       condition, expressions, can_order
from tab natural join ind_head natural join ind_stor
-- ] --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208059] results received
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208059] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208060] 
with T as ( select oid as table_id,
                   relkind as table_kind,
                   xmin as table_state_id
            from pg_catalog.pg_class
            where relkind in ('r','v','f','p')
              and relnamespace = ?::oid ),
     C as ( select conrelid as table_id,
                   oid::bigint as con_id,
                   xmin as con_state_id,
                   conname as con_name,
                   contype as con_kind,
                   conkey as con_columns,
                   conindid as index_id,
                   confrelid as ref_table_id,
                   confkey as ref_columns,
                   condeferrable as is_deferrable,
                   condeferred as is_init_deferred,
                   confupdtype as on_update,
                   confdeltype as on_delete,
                   /* conbin */consrc 
            from pg_catalog.pg_constraint
            where contype in ('p','u','f','c')
              and connamespace = ?::oid )
select table_id,
       table_kind,
       con_id,
       con_state_id::varchar::bigint as con_state_id,
       con_name,
       con_kind,
       con_columns,
       index_id,
       ref_table_id,
       is_deferrable,
       is_init_deferred,
       on_update,
       on_delete,
       /* pg_catalog.pg_get_expr(conbin, table_id) */consrc  as con_expression,
       ref_columns
from T natural join C
--  where pg_catalog.age(table_state_id) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(con_state_id) <= pg_catalog.age(:tx::varchar::xid)
order by pg_catalog.strpos('pufc', con_kind)
-- ] --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208060] results received
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208060] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208061] 
select R.ev_class as table_id,
       R.oid as rule_id,
       R.xmin as rule_state_number,
       R.rulename as rule_name,
       pg_catalog.translate(ev_type,'1234','SUID') as rule_event_code,
       R.ev_enabled as rule_fire_mode,
       R.is_instead as rule_is_instead
from pg_catalog.pg_rewrite R
where R.ev_class in (select oid
                     from pg_catalog.pg_class
                     where relnamespace = ?::oid)
  --  and pg_catalog.age(R.xmin) <= pg_catalog.age(:tx::varchar::xid)
  and R.rulename != '_RETURN'::name
order by R.ev_class::bigint, ev_type
-- ] --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208061] results received
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208061] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208062] 
select T.tgrelid as table_id,
       T.oid as trigger_id,
       T.xmin as trigger_state_number,
       T.tgname as trigger_name,
       T.tgfoid as function_id,
       T.tgtype & 31 as bits,
       T.tgdeferrable as is_deferrable,
       T.tginitdeferred as is_init_deferred,
       T.tgenabled as trigger_fire_mode
from pg_catalog.pg_trigger T
where T.tgrelid in (select oid
                    from pg_catalog.pg_class
                    where relnamespace = ?::oid)
  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
  and not T.tgisinternal
-- ] --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208062] results received
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208062] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208063] 
select D.objoid id, C.relkind as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select T.oid id, 'T' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, pg_catalog.translate(C.contype, 'pufc', 'kkxz') as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 't' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'R' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'F' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'O' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
union all
select D.objoid id, 'C' as kind, D.objsubid sub_id, D.description
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)

-- ] --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208063] results received
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208063] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208064] 
select distinct
       T.relkind as view_kind,
       T.oid as view_id,
       pg_catalog.pg_get_viewdef(T.oid) as source_text
from pg_catalog.pg_class T
  join pg_catalog.pg_namespace N on T.relnamespace = N.oid
  left outer join pg_catalog.pg_attribute A on (A.attrelid = T.oid)
where N.oid = ?::oid
  and T.relkind in ('m','v')
  --  and (pg_catalog.age(T.xmin) <= pg_catalog.age(:src_tx::varchar::xid) or pg_catalog.age(A.xmin) <= pg_catalog.age(:src_tx::varchar::xid))
-- ] --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208064] results received
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208064] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208065] 
with A as ( select oid as table_id, pg_catalog.upper(relkind) as table_kind
            from pg_catalog.pg_class
            where relnamespace = ?::oid
              and relkind in ('r', 'm', 'v', 'f', 'p') )
select table_kind,
       table_id,
       R.oid as rule_id,
       pg_catalog.pg_get_ruledef(R.oid) as source_text
from A join pg_catalog.pg_rewrite R
        on A.table_id = R.ev_class
where R.rulename != '_RETURN'::name
  --  and pg_catalog.age(R.xmin) <= pg_catalog.age(:src_tx::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208065] results received
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208065] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208066] 
with system_languages as ( select oid as lang
                           from pg_catalog.pg_language
                           where lanname in ('c','internal') )
select oid as id,
       pg_catalog.pg_get_function_arguments(oid) as arguments_def,
       pg_catalog.pg_get_function_result(oid) as result_def,
       prosrc as source_text
from pg_catalog.pg_proc
where pronamespace = ?::oid
  --  and pg_catalog.age(xmin) <= pg_catalog.age(:src_tx::varchar::xid)
  and not /* (prokind = 'a') */proisagg 
  and prolang not in (select lang from system_languages)
  and prosrc is not null
-- ] --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208066] results received
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208066] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208067] 
select distinct connamespace as schema_id
from pg_catalog.pg_constraint F,
     pg_catalog.pg_class O
where F.contype = 'f'
  and F.confrelid = O.oid
  and O.relnamespace in (?)
-- ] --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208067] results received
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208067] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208068] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208068] results received
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 1314010258] [statement id: 1734208068] finished - execution time: 1 ms, total result sets count: 1
-- 2020-06-06 20:42:34 [codegeneratorTest] [postgres@localhost] [session id: 1314010258] disconnected
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [session id: 681568100] connected
-- [ --------------------------------------------------
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133185] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133185] results received
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133185] finished - execution time: 31 ms, fetching time: 31 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133186] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133186] results received
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133186] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133187] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133187] results received
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133187] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133188] 
select R.oid::bigint as role_id, rolname as role_name,
  rolsuper is_super, rolinherit is_inherit,
  rolcreaterole can_createrole, rolcreatedb can_createdb,
  rolcanlogin can_login, rolreplication /* false */ is_replication,
  rolconnlimit conn_limit, rolvaliduntil valid_until,
  /* rolbypassrls */false  bypass_rls, rolconfig config,
  D.description
from pg_catalog.pg_roles R
  left join pg_catalog.pg_shdescription D on D.objoid = R.oid
-- ] --------------------------------------------------
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133188] results received
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133188] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133189] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133189] results received
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133189] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133190] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133190] results received
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133190] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133191] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133191] results received
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133191] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133192] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133192] results received
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133192] finished - execution time: 1 ms, fetching time: 14 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133193] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133193] results received
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133193] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133194] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133194] results received
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133194] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133195] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133195] results received
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133195] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133196] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133196] results received
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133196] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133197] 
select usesuper
from pg_user
where usename = current_user
-- ] --------------------------------------------------
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133197] results received
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133197] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133198] 
select distinct oid
from pg_catalog.pg_am
union
select distinct oid
from pg_catalog.pg_foreign_data_wrapper
union
select distinct oid
from pg_catalog.pg_foreign_server
union
select distinct oid
from pg_catalog.pg_extension

union
select distinct oid
from pg_catalog.pg_user_mapping

-- ] --------------------------------------------------
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133198] results received
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133198] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133199] 
select D.objoid id
from pg_catalog.pg_description D
where D.classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
-- ] --------------------------------------------------
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133199] results received
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133199] finished - execution time: 31 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:05 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133200] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133200] results received
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133200] finished - execution time: 15 ms, fetching time: 63 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133201] 
select A.oid as access_method_id,
       A.xmin as state_number,
       A.amname as access_method_name
       /* ,
       A.amhandler::oid as handler_id,
       pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as handler_name,
       A.amtype as access_method_type
       */
from pg_am A
  /* join pg_proc P on A.amhandler::oid = P.oid
  join pg_namespace N on P.pronamespace = N.oid
  */
where pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133201] results received
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133201] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133202] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133202] results received
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133202] finished - execution time: 94 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133203] 
select fdw.oid as id,
       fdw.xmin as state_number,
       fdw.fdwname as name,
       pr.proname as handler,
       nspc.nspname as handler_schema,
       pr2.proname as validator,
       nspc2.nspname as validator_schema,
       fdw.fdwoptions as options,
       pg_catalog.pg_get_userbyid(fdw.fdwowner) as "owner"
from pg_catalog.pg_foreign_data_wrapper fdw
     left outer join pg_catalog.pg_proc pr on fdw.fdwhandler = pr.oid
     left outer join pg_catalog.pg_namespace nspc on pr.pronamespace = nspc.oid
     left outer join pg_catalog.pg_proc pr2 on fdw.fdwvalidator = pr2.oid
     left outer join pg_catalog.pg_namespace nspc2 on pr2.pronamespace = nspc2.oid
  where pg_catalog.age(fdw.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133203] results received
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133203] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133204] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133204] results received
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133204] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133205] 
select srv.oid as id,
       srv.srvfdw as fdw_id,
       srv.xmin as state_number,
       srv.srvname as name,
       srv.srvtype as type,
       srv.srvversion as version,
       srv.srvoptions as options,
       pg_catalog.pg_get_userbyid(srv.srvowner) as "owner"
from pg_catalog.pg_foreign_server srv
  where pg_catalog.age(srv.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133205] results received
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133205] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133206] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133206] results received
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133206] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133207] 
select pg_extension.oid as id,
       pg_extension.xmin as state_number,
       extname as name,
       extversion as version,
       extnamespace as schema_id,
       nspname as schema_name,
       array(select target
             from pg_extension_update_paths(extname)
             where source = extversion and path is not null) as available_updates
from pg_catalog.pg_extension
  join pg_namespace on pg_extension.extnamespace = pg_namespace.oid
where pg_catalog.age(pg_extension.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133207] results received
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133207] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133208] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133208] results received
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133208] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133209] 
select D.objoid id, case
    when 'pg_catalog.pg_am'::regclass = classoid then 'A'
    when 'pg_catalog.pg_foreign_data_wrapper'::regclass = classoid then 'W'
    when 'pg_catalog.pg_foreign_server'::regclass = classoid then 'S'
    when 'pg_catalog.pg_extension'::regclass = classoid then 'E'
    
  end as kind,
  D.objsubid sub_id, D.description
from pg_catalog.pg_description D
where classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133209] results received
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133209] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133210] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133210] results received
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133210] finished - execution time: 1 ms, fetching time: 14 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133211] 
select 'sequence' as dependent_kind,
       'table' as owner_kind,
       D.objid as dependent_id,
       D.refobjid as owner_id,
       D.refobjsubid as owner_subobject_id
from pg_depend D
  join pg_class C_SEQ on D.objid = C_SEQ.oid
  join pg_class C_TAB on D.refobjid = C_TAB.oid
where C_SEQ.relkind = 'S'
  and C_TAB.relkind = 'r'
  and D.refobjsubid <> 0
  and (D.deptype = 'a' or D.deptype = 'i')
-- ] --------------------------------------------------
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133211] results received
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133211] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133212] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133212] results received
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568100] [statement id: 1786133212] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- 2020-06-06 20:50:06 [codegeneratorTest] [postgres@localhost] [session id: 681568100] disconnected
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [session id: 681568101] connected
-- [ --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133213] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133213] results received
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133213] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133214] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133214] results received
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133214] finished - execution time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133215] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133215] results received
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133215] finished - execution time: 109 ms, fetching time: 78 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133216] 
select R.oid::bigint as role_id, rolname as role_name,
  rolsuper is_super, rolinherit is_inherit,
  rolcreaterole can_createrole, rolcreatedb can_createdb,
  rolcanlogin can_login, rolreplication /* false */ is_replication,
  rolconnlimit conn_limit, rolvaliduntil valid_until,
  /* rolbypassrls */false  bypass_rls, rolconfig config,
  D.description
from pg_catalog.pg_roles R
  left join pg_catalog.pg_shdescription D on D.objoid = R.oid
-- ] --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133216] results received
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133216] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133217] 
select N.oid::bigint as id,
       datname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
from pg_catalog.pg_database N
  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
where not datistemplate
order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133217] results received
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133217] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133218] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133218] results received
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133218] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133219] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133219] results received
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133219] finished - execution time: 1 ms, fetching time: 46 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133220] 
select N.oid::bigint as id,
       N.xmin as state_number,
       nspname as name,
       D.description,
       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
from pg_catalog.pg_namespace N
  left join pg_catalog.pg_description D on N.oid = D.objoid
/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
-- ] --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133220] results received
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133220] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133221] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133221] results received
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133221] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133222] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133222] results received
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133222] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133223] 
select usesuper
from pg_user
where usename = current_user
-- ] --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133223] results received
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133223] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133224] 
select distinct oid
from pg_catalog.pg_am
union
select distinct oid
from pg_catalog.pg_foreign_data_wrapper
union
select distinct oid
from pg_catalog.pg_foreign_server
union
select distinct oid
from pg_catalog.pg_extension

union
select distinct oid
from pg_catalog.pg_user_mapping

-- ] --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133224] results received
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133224] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133225] 
select D.objoid id
from pg_catalog.pg_description D
where D.classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
-- ] --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133225] results received
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133225] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133226] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133226] results received
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133226] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133227] 
select A.oid as access_method_id,
       A.xmin as state_number,
       A.amname as access_method_name
       /* ,
       A.amhandler::oid as handler_id,
       pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as handler_name,
       A.amtype as access_method_type
       */
from pg_am A
  /* join pg_proc P on A.amhandler::oid = P.oid
  join pg_namespace N on P.pronamespace = N.oid
  */
where pg_catalog.age(A.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133227] results received
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133227] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133228] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133228] results received
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133228] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133229] 
select fdw.oid as id,
       fdw.xmin as state_number,
       fdw.fdwname as name,
       pr.proname as handler,
       nspc.nspname as handler_schema,
       pr2.proname as validator,
       nspc2.nspname as validator_schema,
       fdw.fdwoptions as options,
       pg_catalog.pg_get_userbyid(fdw.fdwowner) as "owner"
from pg_catalog.pg_foreign_data_wrapper fdw
     left outer join pg_catalog.pg_proc pr on fdw.fdwhandler = pr.oid
     left outer join pg_catalog.pg_namespace nspc on pr.pronamespace = nspc.oid
     left outer join pg_catalog.pg_proc pr2 on fdw.fdwvalidator = pr2.oid
     left outer join pg_catalog.pg_namespace nspc2 on pr2.pronamespace = nspc2.oid
  where pg_catalog.age(fdw.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133229] results received
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133229] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133230] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133230] results received
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133230] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133231] 
select srv.oid as id,
       srv.srvfdw as fdw_id,
       srv.xmin as state_number,
       srv.srvname as name,
       srv.srvtype as type,
       srv.srvversion as version,
       srv.srvoptions as options,
       pg_catalog.pg_get_userbyid(srv.srvowner) as "owner"
from pg_catalog.pg_foreign_server srv
  where pg_catalog.age(srv.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133231] results received
-- 2020-06-06 20:50:14 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133231] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:15 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133232] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:50:15 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133232] results received
-- 2020-06-06 20:50:15 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133232] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:15 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133233] 
select pg_extension.oid as id,
       pg_extension.xmin as state_number,
       extname as name,
       extversion as version,
       extnamespace as schema_id,
       nspname as schema_name,
       array(select target
             from pg_extension_update_paths(extname)
             where source = extversion and path is not null) as available_updates
from pg_catalog.pg_extension
  join pg_namespace on pg_extension.extnamespace = pg_namespace.oid
where pg_catalog.age(pg_extension.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:50:15 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133233] results received
-- 2020-06-06 20:50:15 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133233] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:15 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133234] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:50:15 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133234] results received
-- 2020-06-06 20:50:15 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133234] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:15 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133235] 
select D.objoid id, case
    when 'pg_catalog.pg_am'::regclass = classoid then 'A'
    when 'pg_catalog.pg_foreign_data_wrapper'::regclass = classoid then 'W'
    when 'pg_catalog.pg_foreign_server'::regclass = classoid then 'S'
    when 'pg_catalog.pg_extension'::regclass = classoid then 'E'
    
  end as kind,
  D.objsubid sub_id, D.description
from pg_catalog.pg_description D
where classoid in (
  'pg_catalog.pg_am'::regclass,
  'pg_catalog.pg_foreign_data_wrapper'::regclass,
  'pg_catalog.pg_foreign_server'::regclass
  ,
  'pg_catalog.pg_extension'::regclass
  
)
and pg_catalog.age(D.xmin) <= pg_catalog.age(?::varchar::xid)
-- ] --------------------------------------------------
-- 2020-06-06 20:50:15 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133235] results received
-- 2020-06-06 20:50:15 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133235] finished - execution time: 1 ms, fetching time: 14 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:15 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133236] 
select pg_catalog.age(?::varchar::xid) as database_age
-- ] --------------------------------------------------
-- 2020-06-06 20:50:15 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133236] results received
-- 2020-06-06 20:50:15 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133236] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:15 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133237] 
select 'sequence' as dependent_kind,
       'table' as owner_kind,
       D.objid as dependent_id,
       D.refobjid as owner_id,
       D.refobjsubid as owner_subobject_id
from pg_depend D
  join pg_class C_SEQ on D.objid = C_SEQ.oid
  join pg_class C_TAB on D.refobjid = C_TAB.oid
where C_SEQ.relkind = 'S'
  and C_TAB.relkind = 'r'
  and D.refobjsubid <> 0
  and (D.deptype = 'a' or D.deptype = 'i')
-- ] --------------------------------------------------
-- 2020-06-06 20:50:15 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133237] results received
-- 2020-06-06 20:50:15 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133237] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:15 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133238] 
with saved_age as (select greatest(pg_catalog.age(?::varchar::xid), pg_catalog.age(?::varchar::xid)) as "value")
select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
(
  select X.last_tx as last_tx
  from (
    (
    select xmin as last_tx
      from pg_catalog.pg_type
      where typnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_class
      where relnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_proc
      where pronamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_operator
      where oprnamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select A.xmin as last_tx
      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
      where K.relnamespace = ?::oid
      order by pg_catalog.age(A.xmin)
      limit 1
    )
    union all
    (
    select E.xmin as last_tx
      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
      where T.typnamespace = ?::oid
      order by pg_catalog.age(E.xmin)
      limit 1
    )
    union all
    (
    select xmin as last_tx
      from pg_catalog.pg_constraint
      where connamespace = ?::oid
      order by pg_catalog.age(xmin)
      limit 1
    )
    union all
    (
    select CO.xmin as last_tx
      from pg_catalog.pg_collation CO
      where CO.collnamespace = ?::oid
      order by pg_catalog.age(CO.xmin)
      limit 1
    )
    union all
    
    (
    select IX.xmin as last_tx
      from pg_catalog.pg_index IX,
           pg_catalog.pg_class IC
      where IC.oid = IX.indrelid
        and IC.relnamespace = ?::oid
        order by pg_catalog.age(IX.xmin)
        limit 1
    )
    union all
    (
    select RU.xmin as last_tx
      from pg_catalog.pg_rewrite RU,
           pg_catalog.pg_class RC
      where RC.oid = RU.ev_class
        and RC.relnamespace = ?::oid
        order by pg_catalog.age(RU.xmin)
        limit 1
    )
    union all
    (
    select TG.xmin as last_tx
      from pg_catalog.pg_trigger TG,
           pg_catalog.pg_class TC
      where TC.oid = TG.tgrelid
        and TC.relnamespace = ?::oid
        order by pg_catalog.age(TG.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_class C on C.oid = D.objoid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_constraint C on C.oid = D.objoid
      where C.connamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_trigger T on T.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = T.tgrelid
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_rewrite R on R.oid = D.objoid
        join pg_catalog.pg_class C on C.oid = R.ev_class
      where C.relnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_proc P on P.oid = D.objoid
      where P.pronamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_type T on T.oid = D.objoid
      where T.typnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_operator O on O.oid = D.objoid
      where O.oprnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    union all
    (
    select D.xmin as last_tx
      from pg_catalog.pg_description D
        join pg_catalog.pg_collation C on C.oid = D.objoid
      where C.collnamespace = ?::oid
        order by pg_catalog.age(D.xmin)
        limit 1
    )
    
  ) X
  order by pg_catalog.age(X.last_tx)
  limit 1
) C, saved_age SA
-- ] --------------------------------------------------
-- 2020-06-06 20:50:15 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133238] results received
-- 2020-06-06 20:50:15 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133238] finished - execution time: 16 ms, fetching time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:15 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133239] 
select case
  when pg_catalog.pg_is_in_recovery()
    then ?
  else
    pg_catalog.txid_current()::varchar::bigint
  end as current_txid
-- ] --------------------------------------------------
-- 2020-06-06 20:50:15 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133239] results received
-- 2020-06-06 20:50:15 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133239] finished - execution time: 1 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:15 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133240] 
select L.transactionid::varchar::bigint as transaction_id
from pg_catalog.pg_locks L
where L.transactionid is not null
order by pg_catalog.age(L.transactionid) desc
limit 1
-- ] --------------------------------------------------
-- 2020-06-06 20:50:15 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133240] results received
-- 2020-06-06 20:50:15 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133240] finished - execution time: 15 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:15 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133241] 
select distinct oid
from pg_catalog.pg_type
where typnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_class
where relnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_proc
where pronamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_operator
where oprnamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_constraint
where connamespace = ?::oid
union
select distinct oid
from pg_catalog.pg_collation
where collnamespace = ?::oid
union

select distinct IX.indexrelid
from pg_catalog.pg_index IX,
     pg_catalog.pg_class IC
where IC.oid = IX.indrelid
  and IC.relnamespace = ?::oid
union
select distinct RU.oid
from pg_catalog.pg_rewrite RU,
     pg_catalog.pg_class RC
where RC.oid = RU.ev_class
  and RC.relnamespace = ?::oid
  and not RU.rulename = '_RETURN'
union
select distinct TG.oid
from pg_catalog.pg_trigger TG,
     pg_catalog.pg_class TC
where TC.oid = TG.tgrelid
  and TC.relnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-06 20:50:15 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133241] results received
-- 2020-06-06 20:50:15 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133241] finished - execution time: 1 ms, fetching time: 14 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:15 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133242] 
select D.objoid id, pg_catalog.array_agg(D.objsubid) sub_ids
from pg_catalog.pg_description D
  join pg_catalog.pg_class C on D.objoid = C.oid
where C.relnamespace = ?::oid and C.relkind != 'c'
group by D.objoid
union all
select T.oid id, pg_catalog.array_agg(D.objsubid)
from pg_catalog.pg_description D
  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
  left join pg_catalog.pg_class C on T.typrelid = C.oid
where T.typnamespace = ?::oid and (C.relkind = 'c' or C.relkind is null)
group by T.oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_constraint C on D.objoid = C.oid
where C.connamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_trigger T on T.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = T.tgrelid
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_rewrite R on R.oid = D.objoid
  join pg_catalog.pg_class C on C.oid = R.ev_class
where C.relnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_proc P on P.oid = D.objoid
where P.pronamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_operator O on O.oid = D.objoid
where O.oprnamespace = ?::oid
union all
select D.objoid id, array[D.objsubid]
from pg_catalog.pg_description D
  join pg_catalog.pg_collation C on C.oid = D.objoid
where C.collnamespace = ?::oid
-- ] --------------------------------------------------
-- 2020-06-06 20:50:15 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133242] results received
-- 2020-06-06 20:50:15 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133242] finished - execution time: 16 ms, fetching time: 16 ms, total result sets count: 1
-- [ --------------------------------------------------
-- 2020-06-06 20:50:15 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133243] 
select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
-- ] --------------------------------------------------
-- 2020-06-06 20:50:15 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133243] results received
-- 2020-06-06 20:50:15 [codegeneratorTest] [postgres@localhost] [introspection] [session id: 681568101] [statement id: 1786133243] finished - execution time: 1 ms, fetching time: 15 ms, total result sets count: 1
-- 2020-06-06 20:50:15 [codegeneratorTest] [postgres@localhost] [session id: 681568101] disconnected
